"use strict";(self.webpackChunkseaography=self.webpackChunkseaography||[]).push([[1476],{1432:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>o,frontMatter:()=>i,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"graphql-schema/filters","title":"Query Filters","description":"Seaography has a rich set of built-in filters for different data types.","source":"@site/docs/03-graphql-schema/03-filters.md","sourceDirName":"03-graphql-schema","slug":"/graphql-schema/filters","permalink":"/Seaography/docs/graphql-schema/filters","draft":false,"unlisted":false,"editUrl":"https://github.com/SeaQL/seaql.github.io/edit/master/Seaography/docs/03-graphql-schema/03-filters.md","tags":[],"version":"current","lastUpdatedBy":"Chris Tsang","lastUpdatedAt":1761251444000,"sidebarPosition":3,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Simple Query","permalink":"/Seaography/docs/graphql-schema/simple-query"},"next":{"title":"Relational Queries","permalink":"/Seaography/docs/graphql-schema/relational-query"}}');var l=t(8790),r=t(8032);const i={},d="Query Filters",c={},a=[{value:"Operators",id:"operators",level:2},{value:"Chaining Filters",id:"chaining-filters",level:2},{value:"Examples",id:"examples",level:2},{value:"<code>IS NULL</code>",id:"is-null",level:3},{value:"<code>ILIKE</code>",id:"ilike",level:3},{value:"<code>IN</code>",id:"in",level:3},{value:"String <code>contains</code>",id:"string-contains",level:3},{value:"<code>array_contains</code>",id:"array_contains",level:3},{value:"JSON <code>=</code>",id:"json-",level:3},{value:"MySQL / Postgres Enums",id:"mysql--postgres-enums",level:3}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"query-filters",children:"Query Filters"})}),"\n",(0,l.jsx)(n.p,{children:"Seaography has a rich set of built-in filters for different data types."}),"\n",(0,l.jsx)(n.h2,{id:"operators",children:"Operators"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"center"},children:"Operator"}),(0,l.jsx)(n.th,{style:{textAlign:"center"},children:"GraphQL Field"}),(0,l.jsx)(n.th,{style:{textAlign:"center"},children:"Supported Types"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsxs)(n.td,{style:{textAlign:"center"},children:[(0,l.jsx)(n.code,{children:"="})," / ",(0,l.jsx)(n.code,{children:"!="})]}),(0,l.jsxs)(n.td,{style:{textAlign:"center"},children:[(0,l.jsx)(n.code,{children:"eq"})," / ",(0,l.jsx)(n.code,{children:"ne"})]}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"String, String-like, Integer, Float, Boolean, Json"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsxs)(n.td,{style:{textAlign:"center"},children:[(0,l.jsx)(n.code,{children:">"})," / ",(0,l.jsx)(n.code,{children:">="})]}),(0,l.jsxs)(n.td,{style:{textAlign:"center"},children:[(0,l.jsx)(n.code,{children:"gt"})," / ",(0,l.jsx)(n.code,{children:"gte"})]}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"String, String-like, Integer, Float, Boolean"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsxs)(n.td,{style:{textAlign:"center"},children:[(0,l.jsx)(n.code,{children:"<"})," / ",(0,l.jsx)(n.code,{children:"<="})]}),(0,l.jsxs)(n.td,{style:{textAlign:"center"},children:[(0,l.jsx)(n.code,{children:"lt"})," / ",(0,l.jsx)(n.code,{children:"lte"})]}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"String, String-like, Integer, Float, Boolean"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsxs)(n.td,{style:{textAlign:"center"},children:["case insensitive ",(0,l.jsx)(n.code,{children:"="})]}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:(0,l.jsx)(n.code,{children:"ci_eq"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"String"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsxs)(n.td,{style:{textAlign:"center"},children:[(0,l.jsx)(n.code,{children:"IN (..)"})," / ",(0,l.jsx)(n.code,{children:"NOT IN (..)"})]}),(0,l.jsxs)(n.td,{style:{textAlign:"center"},children:[(0,l.jsx)(n.code,{children:"is_in"})," / ",(0,l.jsx)(n.code,{children:"is_not_in"})]}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"String, String-like, Integer, Float, Boolean"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"center"},children:(0,l.jsx)(n.code,{children:"IS NULL"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:(0,l.jsx)(n.code,{children:"is_null"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"String, String-like, Integer, Float, Boolean"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsxs)(n.td,{style:{textAlign:"center"},children:["contains (",(0,l.jsx)(n.code,{children:"LIKE '%abc%'"}),")"]}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:(0,l.jsx)(n.code,{children:"contains"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"String"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsxs)(n.td,{style:{textAlign:"center"},children:["starts_with (",(0,l.jsx)(n.code,{children:"LIKE 'abc%'"}),")"]}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:(0,l.jsx)(n.code,{children:"starts_with"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"String"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsxs)(n.td,{style:{textAlign:"center"},children:["ends_with (",(0,l.jsx)(n.code,{children:"LIKE '%abc'"}),")"]}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:(0,l.jsx)(n.code,{children:"ends_with"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"String"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsxs)(n.td,{style:{textAlign:"center"},children:[(0,l.jsx)(n.code,{children:"LIKE"})," / ",(0,l.jsx)(n.code,{children:"NOT LIKE"})]}),(0,l.jsxs)(n.td,{style:{textAlign:"center"},children:[(0,l.jsx)(n.code,{children:"like"})," / ",(0,l.jsx)(n.code,{children:"not_like"})]}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"String"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsxs)(n.td,{style:{textAlign:"center"},children:[(0,l.jsx)(n.code,{children:"ILIKE"})," (Postgres)"]}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:(0,l.jsx)(n.code,{children:"ilike"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"String"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsxs)(n.td,{style:{textAlign:"center"},children:[(0,l.jsx)(n.code,{children:"BETWEEN"})," / ",(0,l.jsx)(n.code,{children:"NOT BETWEEN"})]}),(0,l.jsxs)(n.td,{style:{textAlign:"center"},children:[(0,l.jsx)(n.code,{children:"between"})," / ",(0,l.jsx)(n.code,{children:"not_between"})]}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"String, String-like, Integer, Float"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsxs)(n.td,{style:{textAlign:"center"},children:["contains ",(0,l.jsx)(n.code,{children:"@>"})," (Postgres)"]}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:(0,l.jsx)(n.code,{children:"array_contains"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"Array"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsxs)(n.td,{style:{textAlign:"center"},children:["contained ",(0,l.jsx)(n.code,{children:"<@"})," (Postgres)"]}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:(0,l.jsx)(n.code,{children:"array_contained"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"Array"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsxs)(n.td,{style:{textAlign:"center"},children:["overlap ",(0,l.jsx)(n.code,{children:"&&"})," (Postgres)"]}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:(0,l.jsx)(n.code,{children:"array_overlap"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"Array"})]})]})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"Date"}),", ",(0,l.jsx)(n.code,{children:"DateTime"}),", ",(0,l.jsx)(n.code,{children:"Decimal"})," etc are String-like."]}),"\n",(0,l.jsx)(n.h2,{id:"chaining-filters",children:"Chaining Filters"}),"\n",(0,l.jsxs)(n.p,{children:["You can specify multi fields in ",(0,l.jsx)(n.code,{children:"filters"})," and they will be chained with ",(0,l.jsx)(n.code,{children:"AND"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["You can also combine multiple filters with ",(0,l.jsx)(n.code,{children:"AND"})," / ",(0,l.jsx)(n.code,{children:"OR"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-graphql",children:'{\n  film(\n    filters: {\n      or: [{ title: { contains: "LIFE" } }, { title: { contains: "WAR" } }]\n    }\n  ) {\n    nodes {\n      title\n    }\n  }\n}\n'})}),"\n",(0,l.jsx)(n.p,{children:"Results in following SQL:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"WHERE `film`.`title` LIKE '%LIFE%' OR `film`.`title` LIKE '%WAR%'\n"})}),"\n",(0,l.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,l.jsx)(n.h3,{id:"is-null",children:(0,l.jsx)(n.code,{children:"IS NULL"})}),"\n",(0,l.jsxs)(n.p,{children:["There is no ",(0,l.jsx)(n.code,{children:"IS NOT NULL"}),", because ",(0,l.jsx)(n.code,{children:"is_null"})," has a single ",(0,l.jsx)(n.code,{children:"bool"})," value, with ",(0,l.jsx)(n.code,{children:"false"})," meaning ",(0,l.jsx)(n.code,{children:"IS NOT NULL"}),"."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-graphql",children:"{\n  address(\n    filters: { postalCode: { is_null: true } }\n  ) {\n    nodes {\n      address\n      postalCode\n    }\n  }\n}\n"})}),"\n",(0,l.jsx)(n.h3,{id:"ilike",children:(0,l.jsx)(n.code,{children:"ILIKE"})}),"\n",(0,l.jsxs)(n.p,{children:["Postgres only. Requires custom config in ",(0,l.jsx)(n.code,{children:"BuilderContext"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-rust",children:"EntityQueryFieldConfig {\n    use_ilike: true,\n    ..Default::default()\n}\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-graphql",children:'{\n  customer(filters: {\n    firstName: {\n      ilike: "mario%"\n    }\n  }) {\n    nodes {\n      firstName\n      lastName\n    }\n  }\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"in",children:(0,l.jsx)(n.code,{children:"IN"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-graphql",children:'{\n  customer(filters: {\n    firstName: {\n      is_in: ["PETER", "MARY"]\n    }\n  }) {\n    nodes {\n      firstName\n      lastName\n    }\n  }\n}\n'})}),"\n",(0,l.jsxs)(n.h3,{id:"string-contains",children:["String ",(0,l.jsx)(n.code,{children:"contains"})]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-graphql",children:'{\n  address(filters: { address: { contains: "Lane" } }) {\n    nodes {\n      address\n      address2\n      postalCode\n    }\n  }\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"array_contains",children:(0,l.jsx)(n.code,{children:"array_contains"})}),"\n",(0,l.jsxs)(n.p,{children:["Postgres only, requires ",(0,l.jsx)(n.code,{children:"with-postgres-array"})," feature."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-graphql",children:'{\n  film(filters: {\n    title: { contains: "LIFE" }\n    specialFeatures: { array_contains: ["Trailers"] }\n  }) {\n    nodes {\n      title\n      specialFeatures\n    }\n  }\n}\n'})}),"\n",(0,l.jsxs)(n.h3,{id:"json-",children:["JSON ",(0,l.jsx)(n.code,{children:"="})]}),"\n",(0,l.jsxs)(n.p,{children:["Requires ",(0,l.jsx)(n.code,{children:"with-json"})," feature. Let's say you've added a ",(0,l.jsx)(n.code,{children:"metadata"})," field to the ",(0,l.jsx)(n.code,{children:"film"})," table:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-rust",children:'#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]\n#[sea_orm(table_name = "film")]\npub struct Model {\n    #[sea_orm(primary_key)]\n    pub film_id: i32,\n    pub title: String,\n    #[sea_orm(column_type = "JsonBinary", nullable)]\n    pub metadata: Option<Json>,\n}\n'})}),"\n",(0,l.jsx)(n.p,{children:"You can then filter by JSON value:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-graphql",children:'{\n  film(\n    filters: {\n      metadata: { eq: { imax: true, dolby: "Atmos" } }\n    }\n  ) {\n    nodes {\n      filmId\n      title\n      metadata\n    }\n  }\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"mysql--postgres-enums",children:"MySQL / Postgres Enums"}),"\n",(0,l.jsx)(n.p,{children:"You can filter using MySQL / Postgres enums. The filter operands are typed:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-graphql",children:"input FilmFilterInput {\n  rating: MpaaRatingEnumFilterInput\n  ..\n}\n\ninput MpaaRatingEnumFilterInput {\n  eq: MpaaRatingEnum\n  ne: MpaaRatingEnum\n  ..\n}\n\nenum MpaaRatingEnum {\n  G\n  PG\n  PG13\n  R\n  NC17\n}\n"})}),"\n",(0,l.jsx)(n.p,{children:"Such that you can do the following:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-graphql",children:"{\n  film(\n    filters: { rating: { eq: NC17 } }\n    pagination: { page: { page: 1, limit: 5 } }\n  ) {\n    nodes {\n      filmId\n      title\n      rating\n    }\n  }\n}\n"})})]})}function o(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}},8032:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>d});var s=t(2374);const l={},r=s.createContext(l);function i(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);