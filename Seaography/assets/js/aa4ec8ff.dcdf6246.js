"use strict";(self.webpackChunkseaography=self.webpackChunkseaography||[]).push([[3005],{30:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"getting-started/bootstrap","title":"Bootstrap Project","description":"Install cli tools","source":"@site/docs/02-getting-started/01-bootstrap.md","sourceDirName":"02-getting-started","slug":"/getting-started/bootstrap","permalink":"/Seaography/docs/getting-started/bootstrap","draft":false,"unlisted":false,"editUrl":"https://github.com/SeaQL/seaql.github.io/edit/master/Seaography/docs/02-getting-started/01-bootstrap.md","tags":[],"version":"current","lastUpdatedBy":"Chris Tsang","lastUpdatedAt":1761482611000,"sidebarPosition":1,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Why Seaography","permalink":"/Seaography/docs/introduction/seaography"},"next":{"title":"Project Structure","permalink":"/Seaography/docs/getting-started/project-structure"}}');var r=s(8790),i=s(8032);const a={},o="Bootstrap Project",c={},l=[{value:"Install cli tools",id:"install-cli-tools",level:2},{value:"Config database url",id:"config-database-url",level:2},{value:"MySQL",id:"mysql",level:4},{value:"Postgres",id:"postgres",level:4},{value:"SQLite",id:"sqlite",level:4},{value:"Generate SeaORM Entities",id:"generate-seaorm-entities",level:2},{value:"Generate Seaography Project",id:"generate-seaography-project",level:2},{value:"CLI options",id:"cli-options",level:3},{value:"Launch!",id:"launch",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"bootstrap-project",children:"Bootstrap Project"})}),"\n",(0,r.jsx)(n.h2,{id:"install-cli-tools",children:"Install cli tools"}),"\n",(0,r.jsxs)(n.p,{children:["First, install our cli tools with ",(0,r.jsx)(n.code,{children:"cargo"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"cargo install sea-orm-cli@^2.0.0-rc\ncargo install seaography-cli@^2.0.0-rc\n"})}),"\n",(0,r.jsx)(n.h2,{id:"config-database-url",children:"Config database url"}),"\n",(0,r.jsxs)(n.p,{children:["Set ",(0,r.jsx)(n.code,{children:"DATABASE_URL"})," in your environment to your database connection."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"export DATABASE_URL=protocol://username:password@localhost/database\n"})}),"\n",(0,r.jsx)(n.p,{children:"Here are some tips for database specific options:"}),"\n",(0,r.jsx)(n.h4,{id:"mysql",children:"MySQL"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"mysql://username:password@host/database\n"})}),"\n",(0,r.jsx)(n.h4,{id:"postgres",children:"Postgres"}),"\n",(0,r.jsx)(n.p,{children:"Specify a schema"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"postgres://username:password@host/database?currentSchema=my_schema\n"})}),"\n",(0,r.jsx)(n.h4,{id:"sqlite",children:"SQLite"}),"\n",(0,r.jsx)(n.p,{children:"In memory"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"sqlite::memory:\n"})}),"\n",(0,r.jsx)(n.p,{children:"Create file if not exists"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"sqlite://path/to/db.sqlite?mode=rwc\n"})}),"\n",(0,r.jsx)(n.p,{children:"Read only"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"sqlite://path/to/db.sqlite?mode=ro\n"})}),"\n",(0,r.jsx)(n.h2,{id:"generate-seaorm-entities",children:"Generate SeaORM Entities"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"sea-orm-cli generate entity -o src/entities --seaography\n"})}),"\n",(0,r.jsx)(n.p,{children:"You will see something like:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Writing src/entities/actor.rs\nWriting src/entities/address.rs\nWriting src/entities/category.rs\nWriting src/entities/city.rs\nWriting src/entities/country.rs\nWriting src/entities/customer.rs\nWriting src/entities/film.rs\nWriting src/entities/film_actor.rs\nWriting src/entities/film_category.rs\nWriting src/entities/inventory.rs\nWriting src/entities/language.rs\nWriting src/entities/payment.rs\nWriting src/entities/rental.rs\nWriting src/entities/staff.rs\nWriting src/entities/store.rs\nWriting src/entities/mod.rs\nWriting src/entities/prelude.rs\nWriting src/entities/sea_orm_active_enums.rs\n... Done.\n"})}),"\n",(0,r.jsx)(n.h2,{id:"generate-seaography-project",children:"Generate Seaography Project"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"seaography-cli -o . -e src/entities --framework axum my-seaography-project\n"})}),"\n",(0,r.jsxs)(n.p,{children:["You can choose between ",(0,r.jsx)(n.code,{children:"actix"}),", ",(0,r.jsx)(n.code,{children:"poem"}),", ",(0,r.jsx)(n.code,{children:"axum"})," as the web framework. The generated project will have a crate named ",(0,r.jsx)(n.code,{children:"my-seaography-project"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"cli-options",children:"CLI options"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"\ud83e\udded A dynamic GraphQL framework for SeaORM\n\nUsage: seaography-cli [OPTIONS] --entities <ENTITIES> --database-url <DATABASE_URL> <CRATE_NAME>\n\nArguments:\n  <CRATE_NAME>  Crate name for generated project\n\nOptions:\n  -o, --output-dir <OUTPUT_DIR>\n          Project output directory [default: ./]\n  -e, --entities <ENTITIES>\n          Entities directory\n  -u, --database-url <DATABASE_URL>\n          Database URL [env: DATABASE_URL]\n  -f, --framework <FRAMEWORK>\n          Which web framework to use [default: poem] [possible values: actix, poem, axum]\n      --depth-limit <DEPTH_LIMIT>\n          GraphQL depth limit\n      --complexity-limit <COMPLEXITY_LIMIT>\n          GraphQL complexity limit\n  -h, --help\n          Print help\n  -V, --version\n          Print version\n"})}),"\n",(0,r.jsx)(n.h2,{id:"launch",children:"Launch!"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"cargo build\n"})}),"\n",(0,r.jsx)(n.p,{children:"You should see something like:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"   Compiling seaography v2.0.0-rc.2\n   Compiling seaography-postgres-example v0.1.0 (/Users/chris/seaography/examples/postgres)\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 28.24s\n"})}),"\n",(0,r.jsx)(n.p,{children:"If the build succeeds, then you can launch it:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"cargo run\n"})}),"\n",(0,r.jsx)(n.p,{children:"You should see something like:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"Visit GraphQL Playground at http://localhost:8000\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8032:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var t=s(2374);const r={},i=t.createContext(r);function a(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);