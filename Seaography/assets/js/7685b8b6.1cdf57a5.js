"use strict";(self.webpackChunkseaography=self.webpackChunkseaography||[]).push([[3931],{3016:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"custom-endpoints/custom-method","title":"Custom Method","description":"In continuation to previous chapter, let\'s add some custom instance methods onto the types:","source":"@site/docs/04-custom-endpoints/05-custom-method.md","sourceDirName":"04-custom-endpoints","slug":"/custom-endpoints/custom-method","permalink":"/Seaography/docs/custom-endpoints/custom-method","draft":false,"unlisted":false,"editUrl":"https://github.com/SeaQL/seaql.github.io/edit/master/Seaography/docs/04-custom-endpoints/05-custom-method.md","tags":[],"version":"current","lastUpdatedBy":"Chris Tsang","lastUpdatedAt":1761251444000,"sidebarPosition":5,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Custom Union","permalink":"/Seaography/docs/custom-endpoints/custom-union"},"next":{"title":"Field Names","permalink":"/Seaography/docs/customizations/field-names"}}');var a=t(8790),o=t(8032);const r={},c="Custom Method",i={},l=[];function d(e){const n={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"custom-method",children:"Custom Method"})}),"\n",(0,a.jsx)(n.p,{children:"In continuation to previous chapter, let's add some custom instance methods onto the types:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-rust",children:"#[CustomFields]\nimpl Rectangle {\n    pub async fn area(&self) -> async_graphql::Result<f64> {\n        Ok(self.size.width * self.size.height)\n    }\n}\n\n#[CustomFields]\nimpl Circle {\n    pub async fn area(&self) -> async_graphql::Result<f64> {\n        Ok(std::f64::consts::PI * self.radius * self.radius)\n    }\n}\n\n#[CustomFields]\nimpl Triangle {\n    pub async fn area(&self) -> async_graphql::Result<f64> {\n        let a = self.p1.distance_to(&self.p2);\n        let b = self.p2.distance_to(&self.p3);\n        let c = self.p3.distance_to(&self.p1);\n        let s = (a + b + c) / 2.0;\n        Ok((s * (s - a) * (s - b) * (s - c)).sqrt())\n    }\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"Note that we have to register these types with methods as complex types:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-rust",children:"seaography::register_complex_custom_outputs!(\n    builder,\n    [types::Rectangle, types::Circle, types::Triangle]\n);\n"})}),"\n",(0,a.jsx)(n.p,{children:"The GraphQL schema would look like:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-graphql",children:"type Rectangle {\n  origin: Point!\n  size: Size!\n  area: Float! # \u2b05 scalar\n}\n\ntype Circle {\n  center: Point!\n  radius: Float!\n  area: Float! # \u2b05 scalar\n}\n\ntype Triangle {\n  p1: Point!\n  p2: Point!\n  p3: Point!\n  area: Float! # \u2b05 scalar\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"Try a query:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-graphql",children:"{\n  echo_shape(\n    shape: {\n      Circle: {\n        center: { x: 3, y: 12 },\n        radius: 8\n      }\n    }\n  ) {\n    __typename\n    ... on Circle {\n      center { x y }\n      radius\n      area # \u2b05 addition\n    }\n  }\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"Returns:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "echo_shape": {\n    "__typename": "Circle",\n    "center": {\n      "x": 3.0,\n      "y": 12.0\n    },\n    "radius": 8.0,\n    "area": 201.06 // \u2b05 computed dynamically!\n  }\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Note that the methods are async functions, so you can do database queries inside the function (by requiring a ",(0,a.jsx)(n.code,{children:"ctx"}),").\nYou can even return a SeaORM Model or Custom Output."]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8032:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var s=t(2374);const a={},o=s.createContext(a);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);