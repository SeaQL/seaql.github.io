"use strict";(self.webpackChunkseaography=self.webpackChunkseaography||[]).push([[1159],{5731:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>u,default:()=>p,frontMatter:()=>i,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"custom-endpoints/project-structure","title":"Project Structure","description":"It is recommended that you structure the project like the following:","source":"@site/docs/04-custom-endpoints/01-project-structure.md","sourceDirName":"04-custom-endpoints","slug":"/custom-endpoints/project-structure","permalink":"/Seaography/docs/custom-endpoints/project-structure","draft":false,"unlisted":false,"editUrl":"https://github.com/SeaQL/seaql.github.io/edit/master/Seaography/docs/04-custom-endpoints/01-project-structure.md","tags":[],"version":"current","lastUpdatedBy":"Chris Tsang","lastUpdatedAt":1761251444000,"sidebarPosition":1,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Mutations","permalink":"/Seaography/docs/graphql-schema/mutation"},"next":{"title":"Custom Query","permalink":"/Seaography/docs/custom-endpoints/custom-query"}}');var s=r(8790),o=r(8032);const i={},u="Project Structure",a={},c=[];function d(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"project-structure",children:"Project Structure"})}),"\n",(0,s.jsx)(t.p,{children:"It is recommended that you structure the project like the following:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sh",children:"Cargo.toml\nsrc\n\u251c\u2500\u2500 entities\n\u2502   \u2514\u2500\u2500 ..\n\u251c\u2500\u2500 query_root\n\u2502   \u251c\u2500\u2500 mutations.rs\n\u2502   \u251c\u2500\u2500 queries.rs\n\u2502   \u2514\u2500\u2500 types.rs\n\u251c\u2500\u2500 lib.rs\n\u251c\u2500\u2500 main.rs\n\u2514\u2500\u2500 query_root.rs\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-rust",metastring:'title="query_root.rs"',children:"// define new modules\nmod mutations;\nmod queries;\nmod types;\n\npub fn schema_builder(\n    context: &'static BuilderContext,\n    database: DatabaseConnection,\n    depth: Option<usize>,\n    complexity: Option<usize>,\n) -> SchemaBuilder {\n    let mut builder = Builder::new(context, database.clone());\n    builder = register_entity_modules(builder);\n\n    // here you register them to the schema\n    seaography::register_custom_inputs!(builder, [types::RentalRequest, ..]);\n    seaography::register_custom_outputs!(builder, [types::PurchaseOrder, ..]);\n    seaography::register_complex_custom_outputs!(builder, [types::Rectangle, ..]);\n    seaography::register_custom_unions!(builder, [types::Shape, ..]);\n    seaography::register_custom_queries!(builder, [queries::Operations]);\n    seaography::register_custom_mutations!(builder, [mutations::Operations]);\n\n    builder\n        .set_depth_limit(depth)\n        .set_complexity_limit(complexity)\n        .schema_builder()\n        .enable_uploading() // \u2b05 if you need to handle uploads\n        .data(database)\n}\n"})})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8032:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>u});var n=r(2374);const s={},o=n.createContext(s);function i(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function u(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);