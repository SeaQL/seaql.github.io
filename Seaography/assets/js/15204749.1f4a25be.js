"use strict";(self.webpackChunkseaography=self.webpackChunkseaography||[]).push([[541],{1907:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"getting-started","title":"Getting started","description":"Installing SeaORM and Seaography CLI","source":"@site/docs/01-getting-started.md","sourceDirName":".","slug":"/getting-started","permalink":"/Seaography/docs/next/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/SeaQL/seaql.github.io/edit/master/Seaography/docs/01-getting-started.md","tags":[],"version":"current","lastUpdatedBy":"Billy Chan","lastUpdatedAt":1747689942000,"sidebarPosition":1,"frontMatter":{},"sidebar":"tutorialSidebar","next":{"title":"Running the example","permalink":"/Seaography/docs/next/running-example"}}');var r=t(8790),a=t(8032);const i={},l="Getting started",o={},d=[{value:"Installing SeaORM and Seaography CLI",id:"installing-seaorm-and-seaography-cli",level:2},{value:"CLI parameters",id:"cli-parameters",level:2},{value:"Prerequisites",id:"prerequisites",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"getting-started",children:"Getting started"})}),"\n",(0,r.jsx)(n.h2,{id:"installing-seaorm-and-seaography-cli",children:"Installing SeaORM and Seaography CLI"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cargo install sea-orm-cli@^0.12\ncargo install seaography-cli@1\n"})}),"\n",(0,r.jsx)(n.h2,{id:"cli-parameters",children:"CLI parameters"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"\ud83e\udded A GraphQL framework and code generator for SeaORM\n\nUsage: seaography-cli [OPTIONS] <DESTINATION> <ENTITIES> <DATABASE_URL> <CRATE_NAME>\n\nArguments:\n  <DESTINATION>   Project destination folder\n  <ENTITIES>      SeaORM entities folder\n  <DATABASE_URL>  Database URL to write in .env\n  <CRATE_NAME>    Crate name for generated project\n\nOptions:\n  -f, --framework <FRAMEWORK>\n          Which web framework to use [default: poem] [possible values: actix, poem]\n      --depth-limit <DEPTH_LIMIT>\n          GraphQL depth limit\n      --complexity-limit <COMPLEXITY_LIMIT>\n          GraphQL complexity limit\n  -h, --help\n          Print help\n  -V, --version\n          Print version\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"DATABASE_URL"})," examples: ",(0,r.jsx)(n.code,{children:"mysql://user:pass@127.0.0.1:1235/database_name"}),", ",(0,r.jsx)(n.code,{children:"postgres://user:pass@127.0.0.1/base_name"}),", ",(0,r.jsx)(n.code,{children:"sqlite://my_db.db"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsx)(n.p,{children:"In order to understand how the generated code works its recommended to study the following resources:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://docs.rs/async-graphql/latest/async_graphql/",children:"async-graphql"})}),"\n",(0,r.jsx)(n.p,{children:"Is a server side GraphQL library for Rust."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://docs.rs/sea-orm/latest/sea_orm/",children:"sea-orm"})}),"\n",(0,r.jsx)(n.p,{children:"SeaORM is a relational ORM to help you build web services in Rust."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"The web API of the generated project"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://docs.rs/crate/poem/latest",children:"poem"}),"\n",(0,r.jsx)(n.a,{href:"https://docs.rs/crate/actix/latest",children:"actix"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://docs.rs/tokio/latest/tokio/",children:"tokio*"})}),"\n",(0,r.jsx)(n.p,{children:"A runtime for writing reliable, asynchronous, and slim applications with the Rust programming language."}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8032:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var s=t(2374);const r={},a=s.createContext(r);function i(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);