"use strict";(self.webpackChunkseaography=self.webpackChunkseaography||[]).push([[200],{7116:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"graphql-schema/data-types","title":"Data Types","description":"GraphQL only has these built-in scalar types:","source":"@site/docs/03-graphql-schema/01-data-types.md","sourceDirName":"03-graphql-schema","slug":"/graphql-schema/data-types","permalink":"/Seaography/docs/graphql-schema/data-types","draft":false,"unlisted":false,"editUrl":"https://github.com/SeaQL/seaql.github.io/edit/master/Seaography/docs/03-graphql-schema/01-data-types.md","tags":[],"version":"current","lastUpdatedBy":"Billy Chan","lastUpdatedAt":1760952717000,"sidebarPosition":1,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Project Structure","permalink":"/Seaography/docs/getting-started/project-structure"},"next":{"title":"Simple Query","permalink":"/Seaography/docs/graphql-schema/simple-query"}}');var r=s(8790),a=s(8032);const i={},c="Data Types",l={},d=[];function o(e){const t={code:"code",h1:"h1",header:"header",li:"li",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"data-types",children:"Data Types"})}),"\n",(0,r.jsx)(t.p,{children:"GraphQL only has these built-in scalar types:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"Int"}),": A signed 32\u2010bit integer."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"Float"}),": A signed double-precision floating-point value."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"String"}),": A UTF\u20108 character sequence."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"Boolean"}),": ",(0,r.jsx)(t.code,{children:"true"})," or ",(0,r.jsx)(t.code,{children:"false"}),"."]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"The SeaORM type system supports a richer set of types, including:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"Date"}),", ",(0,r.jsx)(t.code,{children:"Time"}),", ",(0,r.jsx)(t.code,{children:"Datetime"}),": will be mapped to ",(0,r.jsx)(t.code,{children:"String"})]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"Decimal"}),", ",(0,r.jsx)(t.code,{children:"BigDecimal"}),": will be mapped to ",(0,r.jsx)(t.code,{children:"String"})]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"Uuid"}),": will be mapped to ",(0,r.jsx)(t.code,{children:"String"})]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"Json"}),": will be mapped to a custom scalar type ",(0,r.jsx)(t.code,{children:"Json"})]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8032:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>c});var n=s(2374);const r={},a=n.createContext(r);function i(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);