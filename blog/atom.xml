<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://www.sea-ql.org/blog/</id>
    <title>SeaQL Blog</title>
    <updated>2025-10-08T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://www.sea-ql.org/blog/"/>
    <subtitle>SeaQL Blog</subtitle>
    <icon>https://www.sea-ql.org/blog/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[Seaography 2.0: A Powerful and Extensible GraphQL Framework]]></title>
        <id>https://www.sea-ql.org/blog/2025-10-08-seaography/</id>
        <link href="https://www.sea-ql.org/blog/2025-10-08-seaography/"/>
        <updated>2025-10-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[GraphQL has become the preferred interface for product teams. Both frontend and backend developers benefit from its type-safety, contractual guarantees, and composability. Yet the real challenge lies on the backend: implementing relational resolvers that can traverse complex schemas is often difficult and time-consuming.]]></summary>
        <content type="html"><![CDATA[<img alt="Seaography 2.0 Banner" src="https://www.sea-ql.org/blog/img/Seaography%202.0%20Banner.png">
<p>GraphQL has become the preferred interface for product teams. Both frontend and backend developers benefit from its type-safety, contractual guarantees, and composability. Yet the real challenge lies on the backend: implementing relational resolvers that can traverse complex schemas is often difficult and time-consuming.</p>
<p>Yes, there are libraries that can spin up a GraphQL resolver quickly, but they often come with trade-offs: they're hard to customize, making it painful to add additional endpoints when your application grows beyond the basics.</p>
<p>The hardest challenge is customization. Real-world applications demand fine-grained permissions and context-dependent business logic. <a href="https://github.com/SeaQL/seaography" target="_blank" rel="noopener noreferrer">Seaography</a> is designed to solve this exact problem, offering:</p>
<ul>
<li>Automatic GraphQL resolver generation with data loader integration to solve the N+1 problem</li>
<li>Extensive customization options and the ability to add custom endpoints easily</li>
<li>Authorization: Role-Based Access Control (RBAC) and fine-grained control with hooks / guards</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-what-is-seaography">🧭 What is Seaography<a href="https://www.sea-ql.org/blog/2025-10-08-seaography/#-what-is-seaography" class="hash-link" aria-label="Direct link to 🧭 What is Seaography" title="Direct link to 🧭 What is Seaography">​</a></h2>
<p>A video is worth a thousand words, so let's look at a quick demo.</p>
<video width="100%" muted="" playsinline="" controls=""><source src="/blog/img/Seaography%20Demo.mp4" type="video/mp4"><p>Your browser does not support the video tag.</p></video>
<p>In under a minute, we've done the following:</p>
<ol>
<li>Generate SeaORM entities from an existing sakila database (SQLite in demo)</li>
<li>Generate a GraphQL web server around the entities (supports Axum, Actix, Poem)</li>
<li>Launch it and run some queries with GraphQL playground</li>
</ol>
<p>This is of course a speed run, but you can follow the <a href="https://github.com/SeaQL/seaography#quick-start---ready-to-serve-in-3-minutes" target="_blank" rel="noopener noreferrer">same steps</a> easily, and the generated framework is fully customizable.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="what-kinds-of-queries-are-supported">What kinds of queries are supported?<a href="https://www.sea-ql.org/blog/2025-10-08-seaography/#what-kinds-of-queries-are-supported" class="hash-link" aria-label="Direct link to What kinds of queries are supported?" title="Direct link to What kinds of queries are supported?">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="filter-ordering-and-pagination">Filter, Ordering and Pagination<a href="https://www.sea-ql.org/blog/2025-10-08-seaography/#filter-ordering-and-pagination" class="hash-link" aria-label="Direct link to Filter, Ordering and Pagination" title="Direct link to Filter, Ordering and Pagination">​</a></h4>
<div class="language-graphql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-graphql codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token property-query">film</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attr-name" style="color:rgb(255, 0, 0)">filters</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token attr-name" style="color:rgb(255, 0, 0)">title</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token attr-name" style="color:rgb(255, 0, 0)">contains</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"sea"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)"># ⬅ like '%sea%'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token attr-name" style="color:rgb(255, 0, 0)">and</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token attr-name" style="color:rgb(255, 0, 0)">releaseYear</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token attr-name" style="color:rgb(255, 0, 0)">gt</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"2000"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token attr-name" style="color:rgb(255, 0, 0)">length</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token attr-name" style="color:rgb(255, 0, 0)">gt</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">120</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token comment" style="color:rgb(0, 128, 0)"># ⬆ composable attribute filters</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attr-name" style="color:rgb(255, 0, 0)">orderBy</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token attr-name" style="color:rgb(255, 0, 0)">filmId</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token constant" style="color:rgb(129, 31, 63)">ASC</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attr-name" style="color:rgb(255, 0, 0)">pagination</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token attr-name" style="color:rgb(255, 0, 0)">page</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token attr-name" style="color:rgb(255, 0, 0)">page</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">0</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token attr-name" style="color:rgb(255, 0, 0)">limit</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">10</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)"># ⬆ cursor based pagination is also supported:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">#    pagination: { cursor: { limit: 10, cursor: "Int[10]:100" } }</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token object">nodes</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token property">filmId</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token property">title</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token property">description</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token object">paginationInfo</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token property">pages</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token property">current</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="nested-relational-query">Nested Relational Query<a href="https://www.sea-ql.org/blog/2025-10-08-seaography/#nested-relational-query" class="hash-link" aria-label="Direct link to Nested Relational Query" title="Direct link to Nested Relational Query">​</a></h4>
<p>The following query finds us all the documentaries starred by the actor "David" along with the stores having it in stock so that we can go rent it.</p>
<div class="language-graphql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-graphql codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token property-query">film</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)"># ⬇ filter by related entity</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attr-name" style="color:rgb(255, 0, 0)">having</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)"># ⬅ where exists (..) AND (..)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token attr-name" style="color:rgb(255, 0, 0)">actor</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token attr-name" style="color:rgb(255, 0, 0)">firstName</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token attr-name" style="color:rgb(255, 0, 0)">eq</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"David"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token attr-name" style="color:rgb(255, 0, 0)">category</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token attr-name" style="color:rgb(255, 0, 0)">name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token attr-name" style="color:rgb(255, 0, 0)">eq</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"Documentary"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token object">nodes</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token property">filmId</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token property">title</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token comment" style="color:rgb(0, 128, 0)"># ⬇ skipped the film_actor junction</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token object">actor</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token object">nodes</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">          </span><span class="token property">firstName</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">          </span><span class="token property">lastName</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token comment" style="color:rgb(0, 128, 0)"># ⬇ nested relational query</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token object">inventory</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token object">nodes</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">          </span><span class="token object">store</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token object">address</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">              </span><span class="token property">address</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">              </span><span class="token object">city</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                </span><span class="token property">city</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">              </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>There are two join paths in this query:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">film </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> film_actor </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> actor</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">     </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> inventory </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> store </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> address </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> city</span><br></span></code></pre></div></div>
<p>A data loader is used for resolving the relations, such that it does not suffers from the N+1 problem.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="mutations-create-update-delete">Mutations: create, update, delete<a href="https://www.sea-ql.org/blog/2025-10-08-seaography/#mutations-create-update-delete" class="hash-link" aria-label="Direct link to Mutations: create, update, delete" title="Direct link to Mutations: create, update, delete">​</a></h4>
<p>Full CRUD is supported, including <code>CreateOne</code> <code>CreateBatch</code> <code>Update</code> and <code>Delete</code>.</p>
<div class="language-graphql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-graphql codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">mutation</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token comment" style="color:rgb(0, 128, 0)"># ⬇ operations will be executed inside a transaction</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token property-query property-mutation">filmTextCreateBatch</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attr-name" style="color:rgb(255, 0, 0)">data</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token attr-name" style="color:rgb(255, 0, 0)">filmId</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token attr-name" style="color:rgb(255, 0, 0)">title</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"Foo bar"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token attr-name" style="color:rgb(255, 0, 0)">description</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"Lorem ipsum dolor sit amet"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token attr-name" style="color:rgb(255, 0, 0)">filmId</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token attr-name" style="color:rgb(255, 0, 0)">title</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"Fizz buzz"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token attr-name" style="color:rgb(255, 0, 0)">description</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"Consectetur adipiscing elit"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token property">filmId</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token property">title</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token property">description</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="custom-query">Custom Query<a href="https://www.sea-ql.org/blog/2025-10-08-seaography/#custom-query" class="hash-link" aria-label="Direct link to Custom Query" title="Direct link to Custom Query">​</a></h2>
<p>The above is not something entirely new, as some features already exist in <a href="https://www.sea-ql.org/blog/2024-07-01-graphql-support-with-loco-seaography/" target="_blank" rel="noopener noreferrer">Seaography 1.0</a>. The real game-changer is how you can implement custom endpoints and mix-and-match them with SeaORM entities. Let's dive into it!</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="custom-query-with-pagination">Custom Query with pagination<a href="https://www.sea-ql.org/blog/2025-10-08-seaography/#custom-query-with-pagination" class="hash-link" aria-label="Direct link to Custom Query with pagination" title="Direct link to Custom Query with pagination">​</a></h3>
<p>Seaography 2.0 introduced a set of macros to allow you to write custom query endpoints by reusing facilities in Seaography.</p>
<p>Let's say we have a Customer entity:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)">//! This is an entity from the sakila schema, generated by sea-orm-cli</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">use</span><span class="token plain"> </span><span class="token namespace">sea_orm</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">entity</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">prelude</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token operator" style="color:rgb(0, 0, 0)">*</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(table_name = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"customer"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(primary_key, auto_increment = false)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> customer_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> store_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> first_name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> last_name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>We want to create a custom endpoint, like the one Seaography already provides, but with an additional requirement: only return customers of the current store from which the user makes request from.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">use</span><span class="token plain"> </span><span class="token namespace">seaography</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain">apply_pagination</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Connection</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">CustomFields</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">PaginationInput</span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Operations</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[CustomFields]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">impl</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Operations</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">customer_of_current_store</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        ctx</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Context</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token lifetime-annotation symbol">'_</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        pagination</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">PaginationInput</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">//          ⬆ this input struct is provided by Seaography</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token namespace">async_graphql</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Result</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Connection</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token namespace">customer</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">//  this output struct ⬆ is provided by Seaography</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> db </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> ctx</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">data</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">DatabaseConnection</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">//  ⬆ this is a normal SeaORM db connection</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> session </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> ctx</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">data</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Session</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">//  ⬆ this session is inject by the HTTP handler</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> query </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">customer</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">find</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">//          ⬆ this is the same old SeaORM API</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">filter</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">customer</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">StoreId</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">eq</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">session</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">store_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">//  ⬆ here we implement our custom logic</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">// note that here, we haven't execute the query yet ..</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">// instead, we pass it to Seaography to handle the rest!</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> connection </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(0, 0, 255)">apply_pagination</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token constant" style="color:rgb(129, 31, 63)">CONTEXT</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> pagination</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">//                                         now the query executes ⬆ </span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Ok</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">connection</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>This would expose the following query endpoint:</p>
<div class="language-graphql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-graphql codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attr-name" style="color:rgb(255, 0, 0)">customer_of_current_store</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token attr-name" style="color:rgb(255, 0, 0)">pagination</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token atom-input class-name" style="color:rgb(38, 127, 153)">PaginationInput</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">CustomerConnection</span><span class="token operator" style="color:rgb(0, 0, 0)">!</span><br></span></code></pre></div></div>
<p>Query it like the following:</p>
<div class="language-graphql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-graphql codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token property-query">customer_of_current_store</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token attr-name" style="color:rgb(255, 0, 0)">pagination</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token attr-name" style="color:rgb(255, 0, 0)">page</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token attr-name" style="color:rgb(255, 0, 0)">page</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">0</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token attr-name" style="color:rgb(255, 0, 0)">limit</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">10</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token object">nodes</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token property">storeId</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token property">customerId</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token property">firstName</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token property">lastName</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token property">email</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token object">paginationInfo</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token property">pages</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token property">current</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>It's almost effortless, right? In just a few lines of code, we've added a new API endpoint that does a lot under the hood.
But the heavylifting is done by Seaography + SeaORM.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-does-it-work">How does it work?<a href="https://www.sea-ql.org/blog/2025-10-08-seaography/#how-does-it-work" class="hash-link" aria-label="Direct link to How does it work?" title="Direct link to How does it work?">​</a></h2>
<p>On a very high-level, how it all works:</p>
<ol>
<li>Seaography bridges SeaORM types with Async GraphQL, such that any SeaORM entity can be used as GraphQL output</li>
<li>The schema meta of SeaORM entities are transformed into GraphQL schema on-the-fly on application startup</li>
</ol>
<p>The lifecycle of a GraphQL request:</p>
<ol>
<li>Async GraphQL parses the HTTP request and construct a GraphQL request context</li>
<li>Your http handler intercepts this request and adds in additional session context</li>
<li>This GraphQL request is passed to Seaography</li>
<li>Seaography parses the input types and then construct the Rust types</li>
<li>Your async resolver is called, performing some business logic and returns result to Seaography</li>
<li>Seaography transforms the output and return to Async GraphQL</li>
<li>Async GraphQL does some final checks and serializes everything into a HTTP response</li>
</ol>
<p>You may wonder, isn't the above kind of already possible by using Async GraphQL's derive macros, for example, by deriving <a href="https://docs.rs/async-graphql/latest/async_graphql/derive.SimpleObject.html" target="_blank" rel="noopener noreferrer"><code>SimpleObject</code></a> on a SeaORM entity?</p>
<p>Actually this is how <a href="https://www.sea-ql.org/blog/2022-09-17-introducing-seaography/" target="_blank" rel="noopener noreferrer">Seaography 0.1</a> worked in its initial release. However, the complex queries we shown you in the beginning is only achievable with a dynamic schema, but in Async GraphQL the static and dynamic schemas are completely different type systems - they can't inter-operate ... until now!</p>
<p>The difference is, the transformation between SeaORM Model <code>&lt;-&gt;</code> GraphQL Model happens dynamically, so there's not a ton of code generated beneath the surface.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="custom-mutation">Custom Mutation<a href="https://www.sea-ql.org/blog/2025-10-08-seaography/#custom-mutation" class="hash-link" aria-label="Direct link to Custom Mutation" title="Direct link to Custom Mutation">​</a></h2>
<p>Let's continue on making custom mutation endpoints. Say now we want to create a transactional endpoint for staff members in store to handle customer rentals.</p>
<p>First we can design the data structures for the input form:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">use</span><span class="token plain"> </span><span class="token namespace">sea_orm</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">entity</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">prelude</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token class-name" style="color:rgb(38, 127, 153)">DateTimeUtc</span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">use</span><span class="token plain"> </span><span class="token namespace">seaography</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain">async_graphql</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">CustomFields</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">CustomInputType</span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Clone, CustomInputType)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">RentalRequest</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> customer</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> film</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> coupon</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Option</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Coupon</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> timestamp</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DateTimeUtc</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Clone, CustomInputType)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Coupon</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> code</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> points</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Option</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Decimal</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>Then we can define the mutation endpoint:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[CustomFields]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">impl</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Operations</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">rental_request</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        ctx</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Context</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token lifetime-annotation symbol">'_</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        rental_request</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">RentalRequest</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">//              ⬆ our custom input struct</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token namespace">async_graphql</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Result</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token namespace">rental</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">//                     ⬆ a normal SeaORM Model</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> db </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> ctx</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">data</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">DatabaseConnection</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> session </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> ctx</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">data</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Session</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> txn </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">begin</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">//  ⬆ create a transaction to make operation atomic</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> customer </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Customer</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">find_by_name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">rental_request</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">customer</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">txn</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> film </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Film</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">find_by_name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">rental_request</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">film</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">txn</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">//  ⬆ helper methods to find the corresponding customer and film</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">//  ⬇ find if there is inventory in current store</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> inventory </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Inventory</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">find</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">filter</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">inventory</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">FilmId</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">eq</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">film</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">filter</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">inventory</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">StoreId</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">eq</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">session</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">store_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">one</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">txn</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unwrap_or</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Error</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">NoInventory</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">//  ⬆ return error if no inventory</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> rental </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">rental</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            rental_date</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">rental_request</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">timestamp</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            inventory_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">inventory</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            customer_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">customer</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            staff_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">session</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">staff_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// ⬅ current staff</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            last_update</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Utc</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">now</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token class-name" style="color:rgb(38, 127, 153)">Default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">insert</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">txn</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        inventory</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">delete</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">txn</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">//       ⬆ now remove it from inventory</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        txn</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">commit</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">// ⬇ return the newly created rental record</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Ok</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">rental</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>The <code>Coupon</code> object is used to demonstrate that nested objects are supported, and it will be reflected in the GraphQL schema. I will leave it as an exercise for you to fit in the logic for handling it.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="custom-methods-and-unions">Custom methods and unions<a href="https://www.sea-ql.org/blog/2025-10-08-seaography/#custom-methods-and-unions" class="hash-link" aria-label="Direct link to Custom methods and unions" title="Direct link to Custom methods and unions">​</a></h3>
<p>The GraphQL type system is very expressive (so is Rust), and so I want to demonstrate two more advanced features:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Clone, CustomInputType, CustomOutputType)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Rectangle</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> origin</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Point</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> size</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Size</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[CustomFields]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">impl</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Rectangle</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">area</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token namespace">async_graphql</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Result</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token keyword" style="color:rgb(0, 0, 255)">f64</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">//            ⬆ this is an instance method</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Ok</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">size</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">width </span><span class="token operator" style="color:rgb(0, 0, 0)">*</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">size</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">height</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Clone, CustomInputType, CustomOutputType)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Circle</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> center</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Point</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> radius</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">f64</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[CustomFields]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">impl</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Circle</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">area</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token namespace">async_graphql</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Result</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token keyword" style="color:rgb(0, 0, 255)">f64</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Ok</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">std</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token keyword" style="color:rgb(0, 0, 255)">f64</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">consts</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token constant" style="color:rgb(129, 31, 63)">PI</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">*</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">radius </span><span class="token operator" style="color:rgb(0, 0, 0)">*</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">radius</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Clone, CustomInputType, CustomOutputType)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">enum</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Shape</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Rectangle</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Rectangle</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Circle</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Circle</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Triangle</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Triangle</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>After registering as <code>complex_custom_outputs</code>, they will appear like below in the GraphQL schema:</p>
<div class="language-graphql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-graphql codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">union</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Shape</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token property">Rectangle</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain"> </span><span class="token property">Circle</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain"> </span><span class="token property">Triangle</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Rectangle</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token attr-name" style="color:rgb(255, 0, 0)">origin</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Point</span><span class="token operator" style="color:rgb(0, 0, 0)">!</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token attr-name" style="color:rgb(255, 0, 0)">size</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Size</span><span class="token operator" style="color:rgb(0, 0, 0)">!</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token attr-name" style="color:rgb(255, 0, 0)">area</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token scalar">Float</span><span class="token operator" style="color:rgb(0, 0, 0)">!</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)"># ⬅ as a 'computed property'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>The <code>area</code> method will only be invoked when a query includes this field. Note that it is an async function, so you can even do database queries inside the function. For example, you can return a <code>SimpleObject</code> from a related model.</p>
<p>The union type definition allows you to use union types in input / output, a very natural construct in Rust.</p>
<p>Full example can be found <a href="https://github.com/SeaQL/seaography/blob/main/examples/sqlite/src/query_root.rs" target="_blank" rel="noopener noreferrer">here</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="lifecycle-hooks">Lifecycle hooks<a href="https://www.sea-ql.org/blog/2025-10-08-seaography/#lifecycle-hooks" class="hash-link" aria-label="Direct link to Lifecycle hooks" title="Direct link to Lifecycle hooks">​</a></h2>
<p>In Seaography, all logic is centralized in the same process, and it allows you to inject arbitrary custom logic throughout the request lifecycle using hooks. You can even implement access control this way.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="finegrained-access-control">Fine‑grained Access Control<a href="https://www.sea-ql.org/blog/2025-10-08-seaography/#finegrained-access-control" class="hash-link" aria-label="Direct link to Fine‑grained Access Control" title="Direct link to Fine‑grained Access Control">​</a></h3>
<p>Imagine you have a drawing app, and users can only access projects they own. You can implement the access control logic like the following:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">AccessControlHook</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">impl</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">LifecycleHooksInterface</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">AccessControlHook</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">entity_filter</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        ctx</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token class-name" style="color:rgb(38, 127, 153)">ResolverContext</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">str</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        _action</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">OperationType</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// ⬅ Read, Create, Update, Delete</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Option</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Condition</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> session </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> ctx</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">data</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Session</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">//  ⬆ extract user session</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">match</span><span class="token plain"> entity </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token string" style="color:rgb(163, 21, 21)">"Project"</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Some</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                </span><span class="token class-name" style="color:rgb(38, 127, 153)">Condition</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">all</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">add</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">project</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">OwnerId</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">eq</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">session</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">user_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                </span><span class="token comment" style="color:rgb(0, 128, 0)">//  ⬆ add custom filter condition</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            _ </span><span class="token operator" style="color:rgb(0, 0, 0)">=&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">None</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>By registering that into Seaography, this function will be called every time an Entity is being accessed:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token namespace">lazy_static</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token macro property">lazy_static!</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">static</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">ref</span><span class="token plain"> </span><span class="token constant" style="color:rgb(129, 31, 63)">CONTEXT</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">BuilderContext</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">BuilderContext</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            hooks</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">LifecycleHooks</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">AccessControlHook</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token class-name" style="color:rgb(38, 127, 153)">Default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="other-hooks">Other hooks<a href="https://www.sea-ql.org/blog/2025-10-08-seaography/#other-hooks" class="hash-link" aria-label="Direct link to Other hooks" title="Direct link to Other hooks">​</a></h3>
<p>There are many useful hooks for type conversion, access guard, event notification, etc.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">trait</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">LifecycleHooksInterface</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Send</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">+</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Sync</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">/// This happens before an Entity is accessed</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">entity_guard</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> ctx</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token class-name" style="color:rgb(38, 127, 153)">ResolverContext</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">str</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> action</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">OperationType</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">GuardAction</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">GuardAction</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Allow</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">/// This happens after an Entity is mutated</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">entity_watch</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> ctx</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token class-name" style="color:rgb(38, 127, 153)">ResolverContext</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">str</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> action</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">OperationType</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="️-seaorm-pro-a-seaography-showcase">🖥️ SeaORM Pro: A Seaography Showcase<a href="https://www.sea-ql.org/blog/2025-10-08-seaography/#%EF%B8%8F-seaorm-pro-a-seaography-showcase" class="hash-link" aria-label="Direct link to 🖥️ SeaORM Pro: A Seaography Showcase" title="Direct link to 🖥️ SeaORM Pro: A Seaography Showcase">​</a></h2>
<img src="https://www.sea-ql.org/blog/img/sea-orm-pro-light.png#light">
<img src="https://www.sea-ql.org/blog/img/sea-orm-pro-dark.png#dark">
<p>With <a href="https://www.sea-ql.org/sea-orm-pro/" target="_blank" rel="noopener noreferrer">SeaORM Pro</a>, you can launch a ready-to-use admin panel in minutes. Built on Seaography, it demonstrates the seamless integration of the full technology stack - async Rust backend, React frontend, and GraphQL as the protocol.</p>
<p>SeaORM Pro has been updated to support the latest features in SeaORM 2.0, with <a href="https://www.sea-ql.org/blog/2025-09-30-sea-orm-rbac/" target="_blank" rel="noopener noreferrer">RBAC</a> support now available for preview in <a href="https://www.sea-ql.org/sea-orm-pro/docs/introduction/sea-orm-pro-plus/" target="_blank" rel="noopener noreferrer">SeaORM Pro Plus</a>.</p>
<p>Features:</p>
<ul>
<li>Full CRUD</li>
<li>Built on React + GraphQL</li>
<li>Customize the UI with TOML config</li>
<li>GraphQL resolver using Seaography</li>
<li>Custom GraphQL endpoints <em>(new in 2.0)</em></li>
<li>Role Based Access Control <em>(new in 2.0)</em></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://www.sea-ql.org/blog/2025-10-08-seaography/#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion">​</a></h2>
<p>It took us a long time to get here, but this is our vision for application development in Rust: a framework that makes it effortless to get started, gives developers a ton of functionality out of the box, and still provides the power and flexibility to build complex applications.</p>
<p>We're heavily inspired by tools in the Python, Ruby and node.js ecosystem. You can draw some parallels between Seaography and FastAPI:</p>
<table><thead><tr><th>Seaography</th><th>FastAPI</th></tr></thead><tbody><tr><td>GraphQL API</td><td>Rest API</td></tr><tr><td>GraphQL schema</td><td>JSON Schema</td></tr><tr><td>GraphQL Playground</td><td>Swagger UI</td></tr><tr><td>Rust native types</td><td>Pydantic</td></tr><tr><td>SeaORM</td><td>SQLModel</td></tr></tbody></table>
<p>In another sense, Seaography is like PostGraphile, offering instant GraphQL API for SQL databases:</p>
<table><thead><tr><th>Seaography</th><th>PostGraphile</th></tr></thead><tbody><tr><td>MySQL, Postgres, SQLite, <a href="https://www.sea-ql.org/SeaORM-X/" target="_blank" rel="noopener noreferrer">SQL Server*</a></td><td>Postgres</td></tr><tr><td>Compiled schema</td><td>Runtime generated schema</td></tr><tr><td>SeaORM's RBAC</td><td>Postgres' RLS</td></tr><tr><td>Lifecycle hooks, builder context</td><td>Plugins</td></tr></tbody></table>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="sponsors">Sponsors<a href="https://www.sea-ql.org/blog/2025-10-08-seaography/#sponsors" class="hash-link" aria-label="Direct link to Sponsors" title="Direct link to Sponsors">​</a></h2>
<p>This Seaography release has been made possible through the generous sponsorship of <a href="https://qdx.co/" target="_blank" rel="noopener noreferrer">QDX</a> and their close collaboration with SeaQL.org. QDX has built their data-driven applications with the Seaography + SeaORM stack, and we are deeply grateful for their contributions - both financial and technical - that helped bring this release to reality.</p>
<p>We welcome companies to <a href="mailto:hello@sea-ql.org" target="_blank" rel="noopener noreferrer">collaborate with SeaQL.org</a> to adopt and unlock the full potential of the Rust + SeaQL ecosystem, with our team providing expert technical consulting to support their software development.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="gold-sponsor">Gold Sponsor<a href="https://www.sea-ql.org/blog/2025-10-08-seaography/#gold-sponsor" class="hash-link" aria-label="Direct link to Gold Sponsor" title="Direct link to Gold Sponsor">​</a></h3>
<a href="https://qdx.co/"><img src="https://www.sea-ql.org/static/sponsors/QDX.svg" width="128"></a>
<p><a href="https://qdx.co/" target="_blank" rel="noopener noreferrer">QDX</a> pioneers quantum dynamics–powered drug discovery, leveraging AI and supercomputing to accelerate molecular modeling.
We're grateful to QDX for sponsoring SeaQL.org.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="github-sponsors">GitHub Sponsors<a href="https://www.sea-ql.org/blog/2025-10-08-seaography/#github-sponsors" class="hash-link" aria-label="Direct link to GitHub Sponsors" title="Direct link to GitHub Sponsors">​</a></h3>
<p>If you feel generous, a small donation will be greatly appreciated, and goes a long way towards sustaining the organization.</p>
<p>A big shout out to our <a href="https://github.com/sponsors/SeaQL" target="_blank" rel="noopener noreferrer">GitHub sponsors</a> 😇:</p>
<div class="row"><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/ryanswrt"><img src="https://avatars.githubusercontent.com/u/87781?u=10a9d256e741f905f3dd2cf641de8b325720732e&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">Ryan Swart</div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/OteroRafael"><img src="https://avatars.githubusercontent.com/u/175388115?v=4"></a><div class="avatar__intro"><div class="avatar__name">OteroRafael</div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/higumachan"><img src="https://avatars.githubusercontent.com/u/1011298?u=de4c2f0d0929c2c6dc433981912f794d0e50f2cd&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">Yuta Hinokuma</div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/wh7f"><img src="https://avatars.githubusercontent.com/u/59872041?v=4"></a><div class="avatar__intro"><div class="avatar__name">wh7f</div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/marcson909"><img src="https://avatars.githubusercontent.com/u/16665353?v=4"></a><div class="avatar__intro"><div class="avatar__name">MS</div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/numeusxyz"><img src="https://avatars.githubusercontent.com/u/82152211?v=4"></a><div class="avatar__intro"><div class="avatar__name">Numeus</div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/data-intuitive"><img src="https://avatars.githubusercontent.com/u/15045722?v=4"></a><div class="avatar__intro"><div class="avatar__name">Data Intuitive</div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/caido-community"><img src="https://avatars.githubusercontent.com/u/168573261?v=4"></a><div class="avatar__intro"><div class="avatar__name">Caido Community</div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/marcusbuffett"><img src="https://avatars.githubusercontent.com/u/1834328?u=fd066d99cf4a6333bfb3927d1c756af4bb8baf7e&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">Marcus Buffett</div></div></div></div></div>
<br>
<div class="row"><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/yuly3"><img src="https://avatars.githubusercontent.com/u/25814001?u=4b57756e7d8060e48262a9edba687927fe7934a6&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">MasakiMiyazaki</div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/kallydev"><img src="https://avatars.githubusercontent.com/u/36319157?u=5be882aa4dbe7eea97b1a80a6473857369146df6&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">KallyDev</div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/manfredcml"><img src="https://avatars.githubusercontent.com/u/27536502?u=b71636bdabbc698458b32e2ac05c5771ad41097e&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">Manfred Lee</div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/tugascript"><img src="https://avatars.githubusercontent.com/u/64930104?u=ad9f63e8e221dbe71bf23de59e3611c99cda1181&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">Afonso Barracha</div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/deansheather"><img src="https://avatars.githubusercontent.com/u/11241812?u=260538c7d8b8c3c5350dba175ebb8294358441e0&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">Dean Sheather</div></div></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="rustacean-sticker-pack-">Rustacean Sticker Pack 🦀<a href="https://www.sea-ql.org/blog/2025-10-08-seaography/#rustacean-sticker-pack-" class="hash-link" aria-label="Direct link to Rustacean Sticker Pack 🦀" title="Direct link to Rustacean Sticker Pack 🦀">​</a></h2>
<p>The Rustacean Sticker Pack is the perfect way to express your passion for Rust.
Our stickers are made with a premium water-resistant vinyl with a unique matte finish.
Stick them on your laptop, notebook, or any gadget to show off your love for Rust!</p>
<p>Moreover, all proceeds contributes directly to the ongoing development of SeaQL projects.</p>
<p>Sticker Pack Contents:</p>
<ul>
<li>Logo of SeaQL projects: SeaQL, SeaORM, SeaQuery, Seaography, FireDBG</li>
<li>Mascot of SeaQL: Terres the Hermit Crab</li>
<li>Mascot of Rust: Ferris the Crab</li>
<li>The Rustacean word</li>
</ul>
<p><a href="https://www.sea-ql.org/sticker-pack/" target="_blank" rel="noopener noreferrer">Support SeaQL and get a Sticker Pack!</a></p>
<a href="https://www.sea-ql.org/sticker-pack/"><img style="border-radius:25px" alt="Rustacean Sticker Pack by SeaQL" src="https://www.sea-ql.org/static/sticker-pack-1s.jpg"></a>]]></content>
        <author>
            <name>SeaQL Team</name>
            <uri>https://github.com/SeaQL</uri>
        </author>
        <category label="news" term="news"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Role Based Access Control in SeaORM 2.0]]></title>
        <id>https://www.sea-ql.org/blog/2025-09-30-sea-orm-rbac/</id>
        <link href="https://www.sea-ql.org/blog/2025-09-30-sea-orm-rbac/"/>
        <updated>2025-09-30T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[SeaORM 2.0 introduces Role-Based Access Control (RBAC), bringing first-class authorization into your data layer. No more bolting on ad-hoc permission checks or scattering business rules across services - SeaORM lets you define roles and permission rules and enforce access policies directly inside the database connection. It's a powerful tool for building multi‑faceted applications that demand authorization.]]></summary>
        <content type="html"><![CDATA[<img alt="SeaORM 2.0 Banner" src="https://www.sea-ql.org/blog/img/SeaORM%202.0%20Banner.png">
<p>SeaORM 2.0 introduces Role-Based Access Control (RBAC), bringing first-class authorization into your data layer. No more bolting on ad-hoc permission checks or scattering business rules across services - SeaORM lets you define roles and permission rules and enforce access policies directly inside the database connection. It's a powerful tool for building multi‑faceted applications that demand authorization.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="overview-of-seaorm-rbac">Overview of SeaORM RBAC<a href="https://www.sea-ql.org/blog/2025-09-30-sea-orm-rbac/#overview-of-seaorm-rbac" class="hash-link" aria-label="Direct link to Overview of SeaORM RBAC" title="Direct link to Overview of SeaORM RBAC">​</a></h2>
<p>Here is a high level overview of the design and the requirements that shaped them:</p>
<ol>
<li>Table‑level access control</li>
</ol>
<p>Different user groups can only read or modify certain tables, e.g. customers can only read invoices, but not modify them.</p>
<p>Design: RBAC engine is table‑scoped so permissions can be expressed directly in terms of CRUD on tables.</p>
<ol start="2">
<li>Simplicity of user assignment</li>
</ol>
<p>Each user should have a clear, unambiguous role to avoid confusion.</p>
<p>Design: one user = one role. This prevents complexity of multiple roles per user.</p>
<ol start="3">
<li>Role hierarchy and inheritance</li>
</ol>
<p>We want to create roles that inherit from multiple roles like A = B + C where A will have the union of permissions from B and C.</p>
<p>We want to avoid duplicating permission sets across roles. For example, a 'Manager' should automatically get all 'Employee' permissions, plus extras.</p>
<p>Design: Hierarchical roles with multiple inheritance.</p>
<ol start="4">
<li>Granular, composable permissions</li>
</ol>
<p>We need to allow fine‑grained control like 'read customers but not update them'. We want permission grant to be easy to reason about.</p>
<p>Design: Role can be assigned set of permissions (CRUD) on resources (tables). Permissions are additive, once granted, cannot be taken away (but can be overridden on a per user basis).</p>
<ol start="5">
<li>Extensibility</li>
</ol>
<p>We want to extend beyond tables (e.g. application specific actions, or even non‑DB resources).</p>
<p>Design: Engine is generic - resource + permission abstraction can be applied to more than just CRUD operations on SQL tables.</p>
<ol start="6">
<li>Wildcard for convenience</li>
</ol>
<p>Sometimes we need to grant superusers full access without enumerating every resource/permission.</p>
<p>Design: Opt‑in <code>*</code> wildcard for 'all permissions' or 'all resources.'</p>
<ol start="7">
<li>Per‑user overrides</li>
</ol>
<p>Occasionally, a single user needs an exception (e.g. a contractor who can only read one table, or a manager who should be denied one sensitive table).</p>
<p>Design: User‑level overrides to grant/deny permissions.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="why-reinventing-the-wheel">Why reinventing the wheel?<a href="https://www.sea-ql.org/blog/2025-09-30-sea-orm-rbac/#why-reinventing-the-wheel" class="hash-link" aria-label="Direct link to Why reinventing the wheel?" title="Direct link to Why reinventing the wheel?">​</a></h2>
<p>Our first thought is to look into the possibility of integrating an existing open-source RBAC engine, but we developed our own in the end, because we want to integrate it tightly with SeaORM.</p>
<ol>
<li>Rules and permissions live in the same database as your app</li>
</ol>
<p>By storing roles and permissions in the same database as your application data, you keep everything in one place. There's no separate DSL, no external policy files, and no risk of your access rules drifting out of sync with your schema. So you can query and update RBAC rules in migrations, just like other tables. Having a single source of truth simplifies development and deployment.</p>
<ol start="2">
<li>The hard part isn't expressing rules, it's enforcing them</li>
</ol>
<p>Most policy engines are great at describing rules in abstract terms, but the real challenge is: how do you actually enforce those rules against SQL queries? With an external library, we still need to analyze raw SQL statements ourselves and match that up with the rule definitions. By embedding RBAC directly into SeaORM, we can analyze all queries and enforce those rules.</p>
<ol start="3">
<li>Lightweight and performant</li>
</ol>
<p>Because the RBAC engine is part of SeaORM itself, it's lightweight and integrated - no extra runtime or external dependency. The runtime cost is also minimal, and most importantly, you don't pay for what you don't use. This feature can be turned off completely.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="concepts">Concepts<a href="https://www.sea-ql.org/blog/2025-09-30-sea-orm-rbac/#concepts" class="hash-link" aria-label="Direct link to Concepts" title="Direct link to Concepts">​</a></h2>
<p>Let's take a look at the <a href="https://github.com/SeaQL/sea-orm/tree/master/src/rbac/entity" target="_blank" rel="noopener noreferrer">RBAC schema</a> and go through the entities.</p>
<img src="https://www.sea-ql.org/blog/img/sea-orm-rbac-schema.png">
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="entities">Entities<a href="https://www.sea-ql.org/blog/2025-09-30-sea-orm-rbac/#entities" class="hash-link" aria-label="Direct link to Entities" title="Direct link to Entities">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="user">User<a href="https://www.sea-ql.org/blog/2025-09-30-sea-orm-rbac/#user" class="hash-link" aria-label="Direct link to User" title="Direct link to User">​</a></h4>
<p>The user table is defined by your application. SeaORM doesn't manage that. However we currently require it to have an integer key.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="role">Role<a href="https://www.sea-ql.org/blog/2025-09-30-sea-orm-rbac/#role" class="hash-link" aria-label="Direct link to Role" title="Direct link to Role">​</a></h4>
<p>Each role comes with a set of privileges. For example, 'admin', 'sales manager' and 'customer service'.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="permissions">Permissions<a href="https://www.sea-ql.org/blog/2025-09-30-sea-orm-rbac/#permissions" class="hash-link" aria-label="Direct link to Permissions" title="Direct link to Permissions">​</a></h4>
<p>The actions we can perform on resources. There are 4 basic permissions, <code>select</code>, <code>insert</code>, <code>update</code> and <code>delete</code>. You can define more for your application.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="resources">Resources<a href="https://www.sea-ql.org/blog/2025-09-30-sea-orm-rbac/#resources" class="hash-link" aria-label="Direct link to Resources" title="Direct link to Resources">​</a></h4>
<p>The resources being accessed. In our case they are database tables.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="relations">Relations<a href="https://www.sea-ql.org/blog/2025-09-30-sea-orm-rbac/#relations" class="hash-link" aria-label="Direct link to Relations" title="Direct link to Relations">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="user---role">User <code>&lt;-&gt;</code> Role<a href="https://www.sea-ql.org/blog/2025-09-30-sea-orm-rbac/#user---role" class="hash-link" aria-label="Direct link to user---role" title="Direct link to user---role">​</a></h4>
<p>As mentioned in the design above, User has a 1-1 relationship with role, meaning each user can only be assigned at most 1 role.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="role-hierarchy">Role Hierarchy<a href="https://www.sea-ql.org/blog/2025-09-30-sea-orm-rbac/#role-hierarchy" class="hash-link" aria-label="Direct link to Role Hierarchy" title="Direct link to Role Hierarchy">​</a></h4>
<p>Role has a self-referencing relation, and they form a DAG (Directed Acyclic Graph). Most commonly they form a hierarchy tree that somewhat resembles an organization chart.</p>
<p>A simple tree example:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">admin </span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token plain"> manager </span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token plain"> sales</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                 </span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token plain"> warehouse</span><br></span></code></pre></div></div>
<p>If we add the following to the graph, such that each role can have multiple super roles, then it becomes a DAG.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">admin </span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token plain"> sourcing </span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token plain"> warehouse</span><br></span></code></pre></div></div>
<p>Each role has their own set of permissions. On runtime, the engine will walk the role hierarchy and take the union of all permissions of the sub-graph.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="role---permission---resource">Role <code>&lt;-&gt;</code> Permission <code>&lt;-&gt;</code> Resource<a href="https://www.sea-ql.org/blog/2025-09-30-sea-orm-rbac/#role---permission---resource" class="hash-link" aria-label="Direct link to role---permission---resource" title="Direct link to role---permission---resource">​</a></h4>
<p>Each role can have many such entries, and permission is set for each resource individually. For example: <code>manager - update - order</code>.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="user-override">User override<a href="https://www.sea-ql.org/blog/2025-09-30-sea-orm-rbac/#user-override" class="hash-link" aria-label="Direct link to User override" title="Direct link to User override">​</a></h4>
<p>The schema is a mirror of above: User <code>&lt;-&gt;</code> Permission <code>&lt;-&gt;</code> Resource, with an extra <code>grant</code> field, <code>false</code> means deny.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="usage">Usage<a href="https://www.sea-ql.org/blog/2025-09-30-sea-orm-rbac/#usage" class="hash-link" aria-label="Direct link to Usage" title="Direct link to Usage">​</a></h2>
<p>There are two stages: rules definiton when the RBAC rules are defined, and runtime authorization when these rules are enforced.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="rules-definition">Rules Definition<a href="https://www.sea-ql.org/blog/2025-09-30-sea-orm-rbac/#rules-definition" class="hash-link" aria-label="Direct link to Rules Definition" title="Direct link to Rules Definition">​</a></h3>
<p>You can actually update the rules using the provided <a href="https://github.com/SeaQL/sea-orm/tree/master/src/rbac/entity" target="_blank" rel="noopener noreferrer">SeaORM entities</a>, but we provide a set of utilities to make mutating RBAC rules easier.</p>
<p>These methods are idempotent and can be used in migrations.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="create-rbac-tables">Create RBAC tables<a href="https://www.sea-ql.org/blog/2025-09-30-sea-orm-rbac/#create-rbac-tables" class="hash-link" aria-label="Direct link to Create RBAC tables" title="Direct link to Create RBAC tables">​</a></h4>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token namespace">sea_orm</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">rbac</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">schema</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">create_tables</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="add-resources--permissions">Add resources &amp; permissions<a href="https://www.sea-ql.org/blog/2025-09-30-sea-orm-rbac/#add-resources--permissions" class="hash-link" aria-label="Direct link to Add resources &amp; permissions" title="Direct link to Add resources &amp; permissions">​</a></h4>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">mut</span><span class="token plain"> context </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">RbacContext</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">load</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> tables </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token namespace">baker</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">table_name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token namespace">bakery</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">table_name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">table_name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token namespace">cakes_bakers</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">table_name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token namespace">customer</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">table_name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token namespace">lineitem</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">table_name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token namespace">order</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">table_name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">"*"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// WILDCARD</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">context</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">add_tables</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">tables</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">context</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">add_crud_permissions</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="define-roles">Define roles<a href="https://www.sea-ql.org/blog/2025-09-30-sea-orm-rbac/#define-roles" class="hash-link" aria-label="Direct link to Define roles" title="Direct link to Define roles">​</a></h4>
<p>First we create the roles.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">context</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">add_roles</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token string" style="color:rgb(163, 21, 21)">"admin"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"manager"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"public"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>Then we can define the role hierarchy.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">admin </span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token plain"> manager </span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token plain"> public</span><br></span></code></pre></div></div>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">context</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">add_role_hierarchy</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token class-name" style="color:rgb(38, 127, 153)">RbacAddRoleHierarchy</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                super_role</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"admin"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                role</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"manager"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token class-name" style="color:rgb(38, 127, 153)">RbacAddRoleHierarchy</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                super_role</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"manager"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                role</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"public"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="add-role-permissions">Add role permissions<a href="https://www.sea-ql.org/blog/2025-09-30-sea-orm-rbac/#add-role-permissions" class="hash-link" aria-label="Direct link to Add role permissions" title="Direct link to Add role permissions">​</a></h4>
<p>The permission and resource sets will be multiplied, i.e. Cartesian product taken.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)">// public can select everything, here wildcard is used</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">context</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">add_role_permissions</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"public"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token string" style="color:rgb(163, 21, 21)">"select"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token string" style="color:rgb(163, 21, 21)">"*"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)">// manager can create / update cake and baker</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">context</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">add_role_permissions</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token string" style="color:rgb(163, 21, 21)">"manager"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token string" style="color:rgb(163, 21, 21)">"insert"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"update"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token string" style="color:rgb(163, 21, 21)">"cake"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"baker"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"cakes_bakers"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)">// admin can CRUD everything</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">context</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">add_role_permissions</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"admin"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token string" style="color:rgb(163, 21, 21)">"insert"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"update"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"delete"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token string" style="color:rgb(163, 21, 21)">"*"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="assign-user-role">Assign user role<a href="https://www.sea-ql.org/blog/2025-09-30-sea-orm-rbac/#assign-user-role" class="hash-link" aria-label="Direct link to Assign user role" title="Direct link to Assign user role">​</a></h4>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">context</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">assign_user_role</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">// (user_id, role)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"admin"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"manager"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">3</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"public"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="runtime-authorization">Runtime Authorization<a href="https://www.sea-ql.org/blog/2025-09-30-sea-orm-rbac/#runtime-authorization" class="hash-link" aria-label="Direct link to Runtime Authorization" title="Direct link to Runtime Authorization">​</a></h3>
<p>With these rules defined, we can now use them in our application.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="initialize-rbac-engine">Initialize RBAC engine<a href="https://www.sea-ql.org/blog/2025-09-30-sea-orm-rbac/#initialize-rbac-engine" class="hash-link" aria-label="Direct link to Initialize RBAC engine" title="Direct link to Initialize RBAC engine">​</a></h4>
<p>By default, it expects the RBAC tables are in the same database schema as the current connection. They can also be fetched from another database connection.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token class-name" style="color:rgb(38, 127, 153)">DbConn</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">load_rbac</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>The RBAC rules are cached in memory and shared among all database connections via <code>RwLock</code>, so they can be reloaded anytime.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="authenticate-user">Authenticate user<a href="https://www.sea-ql.org/blog/2025-09-30-sea-orm-rbac/#authenticate-user" class="hash-link" aria-label="Direct link to Authenticate user" title="Direct link to Authenticate user">​</a></h4>
<p>This can be done by a web framework, where the user identity is extracted from a JWT token from HTTP requests. Here we assign them manually.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">use</span><span class="token plain"> </span><span class="token namespace">sea_orm</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">rbac</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">RbacUserId</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> admin </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">RbacUserId</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> manager </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">RbacUserId</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> public </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">RbacUserId</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">3</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="create-restricted-connection">Create restricted connection<a href="https://www.sea-ql.org/blog/2025-09-30-sea-orm-rbac/#create-restricted-connection" class="hash-link" aria-label="Direct link to Create restricted connection" title="Direct link to Create restricted connection">​</a></h4>
<p>This is the key step. Once a <code>RestrictedConnection</code> is created, it is bounded to the user for the lifetime of the object. It is cheap to create and destroy them, as they are just <code>Arc</code> inside.</p>
<p>The <code>RestrictedConnection</code> implements the standard <code>DatabaseConnection</code> API, so it can be used in place of a normal <code>DbConn</code>.</p>
<p>All queries made through SeaORM, including through Entity (<code>ActiveModel</code>) or lower level APIs (<code>Insert</code>) are audited. Only queries with matching permissions will be executed. DDL (i.e. <code>ALTER</code>) and raw SQL are not supported for now, so they will be rejected.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">RestrictedConnection</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">restricted_for</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">admin</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>By writing functions only accepting <code>RestrictedConnection</code>, you can safeguard all operations within the scope of the function, as there is no way from a type system sense for it to degrade into normal <code>DatabaseConnection</code>. (In Rust we normally don't do singleton / global scope, so any operation having global side effects is very obvious.)</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)">// admin can create bakery</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token function" style="color:rgb(0, 0, 255)">operation</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">restricted_for</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">admin</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">operation</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">RestrictedConnection</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Result</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DbErr</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> seaside_bakery </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">bakery</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"SeaSide Bakery"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_owned</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        profit_margin</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">10.2</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token class-name" style="color:rgb(38, 127, 153)">Default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> res </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Bakery</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">insert</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">seaside_bakery</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">exec</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> bakery</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Option</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token namespace">bakery</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Bakery</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">find_by_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">res</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">last_insert_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">one</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">bakery</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unwrap</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"SeaSide Bakery"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Ok</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)">// manager can't create bakery</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token function" style="color:rgb(0, 0, 255)">operation</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">restricted_for</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">manager</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">operation</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">RestrictedConnection</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Result</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DbErr</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token macro property">assert!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token macro property">matches!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Bakery</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">insert</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">bakery</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">exec</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Err</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">DbErr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">AccessDenied</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Ok</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)">// manager can create cake &amp; baker</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token function" style="color:rgb(0, 0, 255)">operation</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">restricted_for</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">manager</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">operation</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">RestrictedConnection</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Result</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DbErr</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">insert</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"Cheesecake"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_owned</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        price</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        bakery_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Some</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        gluten_free</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token boolean">false</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token class-name" style="color:rgb(38, 127, 153)">Default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">exec</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">// transaction is supported: using async closure</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">transaction</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token plain">_</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> _</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DbErr</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token closure-params closure-punctuation punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token closure-params">txn</span><span class="token closure-params closure-punctuation punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Box</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">pin</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">move</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">insert</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"Chocolate"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_owned</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                price</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">3</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                bakery_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Some</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                gluten_free</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token boolean">true</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token class-name" style="color:rgb(38, 127, 153)">Default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">exec</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">txn</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token class-name" style="color:rgb(38, 127, 153)">Ok</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">// transaction using the begin / commit API</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> txn</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">RestrictedTransaction</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">begin</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token namespace">baker</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">insert</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">baker</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"Master Baker"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_owned</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        contact_details</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        bakery_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Some</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token class-name" style="color:rgb(38, 127, 153)">Default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">exec</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">txn</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    txn</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">commit</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Ok</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>That's it! I hope the information above can get you started.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://www.sea-ql.org/blog/2025-09-30-sea-orm-rbac/#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion">​</a></h2>
<p>RBAC is a new feature in SeaORM 2.0. We'd love for you to try it out and help shape the final release by <a href="https://github.com/SeaQL/sea-orm/discussions/2548" target="_blank" rel="noopener noreferrer">sharing your feedback</a>.</p>
<p>The RBAC engine is a first class construct in SeaORM, implemented underneath the application layer but above the database layer.</p>
<p>We believe this is the most robust approach: if it's implemented on the web framework level, it's easy to forget permission checks or some code paths can accidentally escape. Plus it will work for your application, whether you're building REST, gRPC, or GraphQL servers.</p>
<p>In SeaORM, analysis is done on SeaQuery AST, so it's almost free - we already have the AST in memory. Thanks to SeaQuery's feature-rich API, you can construct any complex query, including CTEs!</p>
<p>Compared to using the database engine's native access control capabilities, SeaORM is much easier to setup, reason about, and develop with. Plus it is database generic, so you can use it with SQLite.</p>
<p>Everything, including the code and rules is defined in one place, so you have a single source of truth. We believe Rust and SeaQL ecosystem is the best way to build performant, scalable and robust applications!</p>
<p>We'll dive into GraphQL with Seaography in the next post, so keep an eye out for the next update!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="sql-server-support">SQL Server Support<a href="https://www.sea-ql.org/blog/2025-09-30-sea-orm-rbac/#sql-server-support" class="hash-link" aria-label="Direct link to SQL Server Support" title="Direct link to SQL Server Support">​</a></h2>
<p><a href="https://www.sea-ql.org/SeaORM-X/" target="_blank" rel="noopener noreferrer">SQL Server for SeaORM</a> offers the same SeaORM API for MSSQL. We ported all test cases and examples, complemented by MSSQL specific documentation. If you are building enterprise software, you can <a href="https://forms.office.com/r/1MuRPJmYBR" target="_blank" rel="noopener noreferrer">request commercial access</a>. It is currently based on SeaORM 1.0, but we will offer free upgrade to existing users when SeaORM 2.0 is finalized, including RBAC support.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="️-seaorm-pro-professional-admin-panel">🖥️ SeaORM Pro: Professional Admin Panel<a href="https://www.sea-ql.org/blog/2025-09-30-sea-orm-rbac/#%EF%B8%8F-seaorm-pro-professional-admin-panel" class="hash-link" aria-label="Direct link to 🖥️ SeaORM Pro: Professional Admin Panel" title="Direct link to 🖥️ SeaORM Pro: Professional Admin Panel">​</a></h2>
<img src="https://www.sea-ql.org/blog/img/sea-orm-pro-light.png#light">
<img src="https://www.sea-ql.org/blog/img/sea-orm-pro-dark.png#dark">
<p><a href="https://www.sea-ql.org/sea-orm-pro/" target="_blank" rel="noopener noreferrer">SeaORM Pro</a> is an admin panel solution allowing you to quickly and easily launch an admin panel for your application - frontend development skills not required, but certainly nice to have!</p>
<p>Features:</p>
<ul>
<li>Full CRUD</li>
<li>Built on React + GraphQL</li>
<li>Built-in GraphQL resolver</li>
<li>Customize the UI with TOML config</li>
<li>Custom GraphQL endpoints <em>(new in 2.0)</em></li>
<li>Role Based Access Control <em>(new in 2.0)</em></li>
</ul>
<p>SeaORM Pro will be updated to support the latest features in SeaORM 2.0, RBAC support is now available for preview in <a href="https://www.sea-ql.org/sea-orm-pro/docs/introduction/sea-orm-pro-plus/" target="_blank" rel="noopener noreferrer">SeaORM Pro Plus</a>.</p>
<img src="https://www.sea-ql.org/blog/img/sea-orm-pro-rbac-editor-light.png#light">
<img src="https://www.sea-ql.org/blog/img/sea-orm-pro-rbac-editor-dark.png#dark">
<p>RBAC-related features in SeaORM Pro Plus:</p>
<ul>
<li>Permission editor GUI</li>
<li>Role hierarchy visualization</li>
<li>User role assignment</li>
<li>Add/remove user overrides</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="sponsors">Sponsors<a href="https://www.sea-ql.org/blog/2025-09-30-sea-orm-rbac/#sponsors" class="hash-link" aria-label="Direct link to Sponsors" title="Direct link to Sponsors">​</a></h2>
<p>If you feel generous, a small donation will be greatly appreciated, and goes a long way towards sustaining the organization.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="gold-sponsor">Gold Sponsor<a href="https://www.sea-ql.org/blog/2025-09-30-sea-orm-rbac/#gold-sponsor" class="hash-link" aria-label="Direct link to Gold Sponsor" title="Direct link to Gold Sponsor">​</a></h3>
<a href="https://qdx.co/"><img src="https://www.sea-ql.org/static/sponsors/QDX.svg" width="128"></a>
<p><a href="https://qdx.co/" target="_blank" rel="noopener noreferrer">QDX</a> pioneers quantum dynamics–powered drug discovery, leveraging AI and supercomputing to accelerate molecular modeling.
We're grateful to QDX for sponsoring the development of SeaORM, the SQL toolkit that powers their data intensive applications.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="github-sponsors">GitHub Sponsors<a href="https://www.sea-ql.org/blog/2025-09-30-sea-orm-rbac/#github-sponsors" class="hash-link" aria-label="Direct link to GitHub Sponsors" title="Direct link to GitHub Sponsors">​</a></h3>
<p>A big shout out to our <a href="https://github.com/sponsors/SeaQL" target="_blank" rel="noopener noreferrer">GitHub sponsors</a> 😇:</p>
<div class="row"><div class="col col--12 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--lg" href="https://github.com/subscribepro"><img src="https://avatars.githubusercontent.com/u/8466133?v=4"></a><div class="avatar__intro"><div class="avatar__name">Subscribe Pro</div></div></div></div></div>
<br>
<div class="row"><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/ryanswrt"><img src="https://avatars.githubusercontent.com/u/87781?u=10a9d256e741f905f3dd2cf641de8b325720732e&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">Ryan Swart</div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/OteroRafael"><img src="https://avatars.githubusercontent.com/u/175388115?v=4"></a><div class="avatar__intro"><div class="avatar__name">OteroRafael</div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/higumachan"><img src="https://avatars.githubusercontent.com/u/1011298?u=de4c2f0d0929c2c6dc433981912f794d0e50f2cd&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">Yuta Hinokuma</div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/wh7f"><img src="https://avatars.githubusercontent.com/u/59872041?v=4"></a><div class="avatar__intro"><div class="avatar__name">wh7f</div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/marcson909"><img src="https://avatars.githubusercontent.com/u/16665353?v=4"></a><div class="avatar__intro"><div class="avatar__name">MS</div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/numeusxyz"><img src="https://avatars.githubusercontent.com/u/82152211?v=4"></a><div class="avatar__intro"><div class="avatar__name">Numeus</div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/data-intuitive"><img src="https://avatars.githubusercontent.com/u/15045722?v=4"></a><div class="avatar__intro"><div class="avatar__name">Data Intuitive</div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/caido-community"><img src="https://avatars.githubusercontent.com/u/168573261?v=4"></a><div class="avatar__intro"><div class="avatar__name">Caido Community</div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/marcusbuffett"><img src="https://avatars.githubusercontent.com/u/1834328?u=fd066d99cf4a6333bfb3927d1c756af4bb8baf7e&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">Marcus Buffett</div></div></div></div></div>
<br>
<div class="row"><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/yuly3"><img src="https://avatars.githubusercontent.com/u/25814001?u=4b57756e7d8060e48262a9edba687927fe7934a6&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">MasakiMiyazaki</div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/kallydev"><img src="https://avatars.githubusercontent.com/u/36319157?u=5be882aa4dbe7eea97b1a80a6473857369146df6&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">KallyDev</div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/manfredcml"><img src="https://avatars.githubusercontent.com/u/27536502?u=b71636bdabbc698458b32e2ac05c5771ad41097e&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">Manfred Lee</div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/tugascript"><img src="https://avatars.githubusercontent.com/u/64930104?u=ad9f63e8e221dbe71bf23de59e3611c99cda1181&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">Afonso Barracha</div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/deansheather"><img src="https://avatars.githubusercontent.com/u/11241812?u=260538c7d8b8c3c5350dba175ebb8294358441e0&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">Dean Sheather</div></div></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="rustacean-sticker-pack-">Rustacean Sticker Pack 🦀<a href="https://www.sea-ql.org/blog/2025-09-30-sea-orm-rbac/#rustacean-sticker-pack-" class="hash-link" aria-label="Direct link to Rustacean Sticker Pack 🦀" title="Direct link to Rustacean Sticker Pack 🦀">​</a></h2>
<p>The Rustacean Sticker Pack is the perfect way to express your passion for Rust.
Our stickers are made with a premium water-resistant vinyl with a unique matte finish.
Stick them on your laptop, notebook, or any gadget to show off your love for Rust!</p>
<p>Moreover, all proceeds contributes directly to the ongoing development of SeaQL projects.</p>
<p>Sticker Pack Contents:</p>
<ul>
<li>Logo of SeaQL projects: SeaQL, SeaORM, SeaQuery, Seaography, FireDBG</li>
<li>Mascot of SeaQL: Terres the Hermit Crab</li>
<li>Mascot of Rust: Ferris the Crab</li>
<li>The Rustacean word</li>
</ul>
<p><a href="https://www.sea-ql.org/sticker-pack/" target="_blank" rel="noopener noreferrer">Support SeaQL and get a Sticker Pack!</a></p>
<a href="https://www.sea-ql.org/sticker-pack/"><img style="border-radius:25px" alt="Rustacean Sticker Pack by SeaQL" src="https://www.sea-ql.org/static/sticker-pack-1s.jpg"></a>]]></content>
        <author>
            <name>SeaQL Team</name>
            <uri>https://github.com/SeaQL</uri>
        </author>
        <category label="news" term="news"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[SeaORM 2.0: A closer look]]></title>
        <id>https://www.sea-ql.org/blog/2025-09-24-sea-orm-2.0/</id>
        <link href="https://www.sea-ql.org/blog/2025-09-24-sea-orm-2.0/"/>
        <updated>2025-09-24T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[In the previous blog post, we highlighted some of the new features in SeaORM 2.0. In this post, we're going to take a closer look to some of the changes under the hood.]]></summary>
        <content type="html"><![CDATA[<img alt="SeaORM 2.0 Banner" src="https://www.sea-ql.org/blog/img/SeaORM%202.0%20Banner.png">
<p>In the <a href="https://www.sea-ql.org/blog/2025-09-16-sea-orm-2.0/" target="_blank" rel="noopener noreferrer">previous blog post</a>, we highlighted some of the new features in SeaORM 2.0. In this post, we're going to take a closer look to some of the changes under the hood.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="overhauled-entityinsert_many">Overhauled <code>Entity::insert_many</code><a href="https://www.sea-ql.org/blog/2025-09-24-sea-orm-2.0/#overhauled-entityinsert_many" class="hash-link" aria-label="Direct link to overhauled-entityinsert_many" title="Direct link to overhauled-entityinsert_many">​</a></h3>
<p><a href="https://github.com/SeaQL/sea-orm/pull/2628" target="_blank" rel="noopener noreferrer">#2628</a> We've received many issue reports around the <code>insert_many</code> API. Previously, <code>insert_many</code> shares the same helper struct with <code>insert_one</code>, which led to an awkard API:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> res </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Bakery</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">insert_many</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">std</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">iter</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">empty</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">on_empty_do_nothing</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// &lt;- you needed to add this,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                           </span><span class="token comment" style="color:rgb(0, 128, 0)">// otherwise insert empty [] would lead to error</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">exec</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token macro property">matches!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">res</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Ok</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">TryInsertResult</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Empty</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>After careful consideration, we made a number of changes in 2.0:</p>
<ol>
<li>removed APIs (e.g. <code>Insert::add</code>) that can panic</li>
<li>new helper struct <code>InsertMany</code>, <code>last_insert_id</code> is now <code>Option&lt;Value&gt;</code></li>
<li>on empty iterator, <code>None</code> (for <code>last_insert_id</code>) or <code>vec![]</code> (when returning) is returned on execution</li>
<li><code>TryInsert</code> API is unchanged</li>
</ol>
<p>i.e. now <code>last_insert_id</code> is <code>Option&lt;Value&gt;</code> for <code>InsertMany</code>:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">InsertManyResult</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">A</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModelTrait</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> last_insert_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Option</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">PrimaryKey</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">A</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">as</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">PrimaryKeyTrait</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ValueType</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>Which means the awkardness is removed:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> res </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">insert_many</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> _</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">exec</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">res</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">last_insert_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">None</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// insert nothing return None</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> res </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">insert_many</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">exec</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">res</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">last_insert_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Some</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// insert something return Some</span><br></span></code></pre></div></div>
<p>Exec with returning now returns a <code>Vec&lt;Model&gt;</code>, so it feels intuitive:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token macro property">assert!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">insert_many</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> _</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">exec_with_returning</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">is_empty</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// no footgun, nice</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">insert_many</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">NotSet</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            value</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"two"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">exec_with_returning</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unwrap</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            value</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"two"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>Same on conflict API as before:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> res </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">insert_many</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">3</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">4</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">on_conflict_do_nothing</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">exec</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token macro property">matches!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">conflict_insert</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Ok</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">TryInsertResult</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Conflicted</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="overhauled-connectiontrait-api">Overhauled <code>ConnectionTrait</code> API<a href="https://www.sea-ql.org/blog/2025-09-24-sea-orm-2.0/#overhauled-connectiontrait-api" class="hash-link" aria-label="Direct link to overhauled-connectiontrait-api" title="Direct link to overhauled-connectiontrait-api">​</a></h3>
<p><a href="https://github.com/SeaQL/sea-orm/pull/2657" target="_blank" rel="noopener noreferrer">#2657</a>
We overhauled the <code>ConnectionTrait</code> API. <code>execute</code>, <code>query_one</code>, <code>query_all</code>, <code>stream</code> now takes in SeaQuery statement instead of raw SQL statement.</p>
<p>So you don't have to access the backend to build the query yourself.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)">// old</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SelectStatement</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">find</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">filter</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into_query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> backend </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">get_database_backend</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> stmt </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> backend</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">build</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> rows </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">query_all</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">stmt</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// new</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SelectStatement</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">find</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">filter</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into_query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> rows </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">query_all</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>A new set of methods <code>execute_raw</code>, <code>query_one_raw</code>, <code>query_all_raw</code>, <code>stream_raw</code> is added, so you can still do the following:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> backend </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">get_database_backend</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> stmt </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> backend</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">build</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// new</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> rows </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">query_all_raw</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">stmt</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="better-error-handling-in-updateone--deleteone">Better error handling in <code>UpdateOne</code> / <code>DeleteOne</code><a href="https://www.sea-ql.org/blog/2025-09-24-sea-orm-2.0/#better-error-handling-in-updateone--deleteone" class="hash-link" aria-label="Direct link to better-error-handling-in-updateone--deleteone" title="Direct link to better-error-handling-in-updateone--deleteone">​</a></h3>
<p><a href="https://github.com/SeaQL/sea-orm/pull/2726" target="_blank" rel="noopener noreferrer">#2726</a> <code>UpdateOne</code> and <code>DeleteOne</code> no longer implement <code>QueryFilter</code> and <code>QueryTrait</code>
directly. Those implementations could expose an incomplete SQL query with an incomplete condition that touches too many records.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)">// bad: the following is basically update all</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">UpdateStatement</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Update</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">one</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into_query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>To generate the right condition, we must make sure that the primary key is set on the input <code>ActiveModel</code> by
calling the <code>validate()</code> method:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token class-name" style="color:rgb(38, 127, 153)">Update</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">one</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">active_model</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token operator" style="color:rgb(0, 0, 0)">+</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">validate</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// checks the query; may yield PrimaryKeyNotSet error</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">build</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">DbBackend</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Postgres</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><br></span></code></pre></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="potential-compile-errors">Potential compile errors<a href="https://www.sea-ql.org/blog/2025-09-24-sea-orm-2.0/#potential-compile-errors" class="hash-link" aria-label="Direct link to Potential compile errors" title="Direct link to Potential compile errors">​</a></h4>
<p>If you need to access the generated SQL query, convert into <code>ValidatedUpdateOne</code>/<code>ValidatedDeleteOne</code> first.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">error</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token constant" style="color:rgb(129, 31, 63)">E0599</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> no method named `build` found </span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> `</span><span class="token namespace">query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">update</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">UpdateOne</span><span class="token plain">` </span><span class="token keyword" style="color:rgb(0, 0, 255)">in</span><span class="token plain"> the current scope</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">   </span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> src</span><span class="token operator" style="color:rgb(0, 0, 0)">/</span><span class="token plain">entity</span><span class="token operator" style="color:rgb(0, 0, 0)">/</span><span class="token plain">column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">rs</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token number" style="color:rgb(9, 134, 88)">607</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token number" style="color:rgb(9, 134, 88)">22</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">/</span><span class="token plain">                 </span><span class="token class-name" style="color:rgb(38, 127, 153)">Update</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">one</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">active_model</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain">                     </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">build</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">DbBackend</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Postgres</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain">                     </span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token plain"> method not found </span><span class="token keyword" style="color:rgb(0, 0, 255)">in</span><span class="token plain"> `</span><span class="token class-name" style="color:rgb(38, 127, 153)">UpdateOne</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">A</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain">`</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token constant" style="color:rgb(129, 31, 63)">_____________________</span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="added-has_many_via-for-reverse-has-many-relation">Added <code>has_many_via</code> for reverse has many relation<a href="https://www.sea-ql.org/blog/2025-09-24-sea-orm-2.0/#added-has_many_via-for-reverse-has-many-relation" class="hash-link" aria-label="Direct link to added-has_many_via-for-reverse-has-many-relation" title="Direct link to added-has_many_via-for-reverse-has-many-relation">​</a></h3>
<p>Consider the following entities:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Clone, Debug, PartialEq, Eq, DeriveEntityModel)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(table_name = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"bakery"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(primary_key)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> manager_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> cashier_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">enum</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Relation</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(</span><br></span><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">        belongs_to = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"super::worker::Entity"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">,</span><br></span><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">        from = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"Column::ManagerId"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">,</span><br></span><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">        to = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"super::worker::Column::Id"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)"></span><br></span><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">    )]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Manager</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(</span><br></span><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">        belongs_to = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"super::worker::Entity"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">,</span><br></span><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">        from = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"Column::CashierId"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">,</span><br></span><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">        to = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"super::worker::Column::Id"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)"></span><br></span><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">    )]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Cashier</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Clone, Debug, PartialEq, Eq, DeriveEntityModel)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(table_name = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"worker"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(primary_key)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>There exist two relations between them:</p>
<div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">Bakery -</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> Worker </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">Manager</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">       -</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> Worker </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">Cashier</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><br></span></code></pre></div></div>
<p>It's now possible to define the inverse side of the relations in <code>Worker</code>:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Clone, Debug, PartialEq, Eq, DeriveEntityModel)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(table_name = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"worker"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(primary_key)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">enum</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Relation</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(has_many = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"super::bakery::Entity"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">, via = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"Relation::Manager"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">BakeryManager</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(has_many = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"super::bakery::Entity"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">, via = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"Relation::Cashier"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">BakeryCashier</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>These relations can then be used in queries:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token namespace">worker</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">find</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">join</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">JoinType</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">LeftJoin</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token namespace">worker</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Relation</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">BakeryManager</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">def</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">build</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">DbBackend</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Sqlite</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">r#"SELECT "worker"."id", "worker"."name" FROM "worker"</span><br></span><span class="token-line" style="color:#000000"><span class="token string" style="color:rgb(163, 21, 21)">       LEFT JOIN "bakery" ON "worker"."id" = "bakery"."manager_id""#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="use-of-transaction-with-generic-connections">Use of transaction with generic connections<a href="https://www.sea-ql.org/blog/2025-09-24-sea-orm-2.0/#use-of-transaction-with-generic-connections" class="hash-link" aria-label="Direct link to Use of transaction with generic connections" title="Direct link to Use of transaction with generic connections">​</a></h3>
<p>You can already use <code>TransactionTrait</code> as a generic parameter to define functions accepting any connection object that can initiate transactions.</p>
<p>In SeaORM 2.0, there are new database-connection-like objects: <code>RestrictedConnection</code> and <code>RestrictedTransaction</code>. They implement <code>ConnectionTrait</code> and <code>TransactionTrait</code>, and behaves just like normal <code>DatabaseConnection</code>s except that they performs additional checks on queries.</p>
<table><thead><tr><th>Connection type</th><th>Associated transaction type</th></tr></thead><tbody><tr><td><code>DatabaseConnection</code></td><td><code>DatabaseTransaction</code></td></tr><tr><td><code>RestrictedConnection</code></td><td><code>RestrictedTransaction</code></td></tr></tbody></table>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)">// new connection type</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">RestrictedConnection</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    conn</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DatabaseConnection</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// just a wrapper</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    user_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">UserId</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">impl</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">TransactionTrait</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">RestrictedConnection</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">type</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Transaction</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">RestrictedTransaction</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// added associated type</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>Meaning the following would continue to work:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)">// accepts any one of DatabaseConnection / DatabaseTransaction / RestrictedConnection / RestrictedTransaction.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// nested transactions will be spawned for transaction objects</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">perform_actions</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">C</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">TransactionTrait</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token class-name" style="color:rgb(38, 127, 153)">C</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    actions</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token class-name" style="color:rgb(38, 127, 153)">Action</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Result</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DbErr</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> txn </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">begin</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> action </span><span class="token keyword" style="color:rgb(0, 0, 255)">in</span><span class="token plain"> actions </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        txn</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">execute</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token function" style="color:rgb(0, 0, 255)">perform</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">action</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    txn</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">commit</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="removing-panics-from-api">Removing panics from API<a href="https://www.sea-ql.org/blog/2025-09-24-sea-orm-2.0/#removing-panics-from-api" class="hash-link" aria-label="Direct link to Removing panics from API" title="Direct link to Removing panics from API">​</a></h3>
<p>SeaORM has a large API surface. We've already removed a great number of <code>unwrap</code>s from the codebase in 1.0 release, but some panics due to "mis-use of API" can still happen.</p>
<p>Once again, we've tried to remove the remaining panics.</p>
<ul>
<li><a href="https://github.com/SeaQL/sea-orm/pull/2630" target="_blank" rel="noopener noreferrer">#2630</a> Added new error variant <code>BackendNotSupported</code>. Previously, it panics with e.g. "Database backend doesn't support RETURNING"</li>
</ul>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> result </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">insert_many</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">exec_with_returning_keys</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">if</span><span class="token plain"> db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">support_returning</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">// Postgres and SQLite</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">result</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unwrap</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">else</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">// MySQL</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token macro property">assert!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token macro property">matches!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">result</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Err</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">DbErr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">BackendNotSupported</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<ul>
<li><a href="https://github.com/SeaQL/sea-orm/pull/2627" target="_blank" rel="noopener noreferrer">#2627</a> Added new error variant <code>PrimaryKeyNotSet</code>. Previously, it panics with "PrimaryKey is not set"</li>
</ul>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token macro property">assert!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token macro property">matches!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Update</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">one</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token class-name" style="color:rgb(38, 127, 153)">Default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">exec</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Err</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">DbErr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">PrimaryKeyNotSet</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<ul>
<li><a href="https://github.com/SeaQL/sea-orm/pull/2634" target="_blank" rel="noopener noreferrer">#2634</a> Remove panics in <code>Schema::create_enum_from_active_enum</code></li>
</ul>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)">// method can now return None</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">create_enum_from_active_enum</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">A</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Option</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">TypeCreateStatement</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><br></span></code></pre></div></div>
<ul>
<li><a href="https://github.com/SeaQL/sea-orm/pull/2628" target="_blank" rel="noopener noreferrer">#2628</a> Remove panickable APIs from insert</li>
</ul>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">/// Add a Model to `Insert`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">///</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">/// # Panics</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">///</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">/// Panics if the rows have different column sets from what've previously</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">/// been cached in the query statement</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">add</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">M</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">mut</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> m</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">M</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">Self</span><br></span></code></pre></div></div>
<ul>
<li><a href="https://github.com/SeaQL/sea-orm/pull/2637" target="_blank" rel="noopener noreferrer">#2637</a> Remove panics in loader</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="enhancements">Enhancements<a href="https://www.sea-ql.org/blog/2025-09-24-sea-orm-2.0/#enhancements" class="hash-link" aria-label="Direct link to Enhancements" title="Direct link to Enhancements">​</a></h2>
<p>These are small touch‑ups, but added up they can make a big difference.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="added-shorthand-for-postgres--any">Added shorthand for Postgres<code> = ANY</code><a href="https://www.sea-ql.org/blog/2025-09-24-sea-orm-2.0/#added-shorthand-for-postgres--any" class="hash-link" aria-label="Direct link to added-shorthand-for-postgres--any" title="Direct link to added-shorthand-for-postgres--any">​</a></h3>
<p>Added <code>ColumnTrait::eq_any</code> as a shorthand for the <code> = ANY</code> operator. Postgres only.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)">// old: have to import sea-query</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">use</span><span class="token plain"> </span><span class="token namespace">sea_orm</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">sea_query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token class-name" style="color:rgb(38, 127, 153)">Expr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token namespace">extension</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">postgres</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">PgFunc</span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">find</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">filter</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">// have to qualify column manually</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Expr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">eq</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">PgFunc</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">any</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token macro property">vec!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token number" style="color:rgb(9, 134, 88)">4</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">5</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// new: just use sea-orm</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">find</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">filter</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">eq_any</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token macro property">vec!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token number" style="color:rgb(9, 134, 88)">4</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">5</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">build</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">DbBackend</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Postgres</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">r#"SELECT "cake"."id", "cake"."name" FROM "cake"</span><br></span><span class="token-line" style="color:#000000"><span class="token string" style="color:rgb(163, 21, 21)">       WHERE "cake"."id" = ANY(ARRAY [4,5])"#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="added-big_pk_auto">Added <code>big_pk_auto</code><a href="https://www.sea-ql.org/blog/2025-09-24-sea-orm-2.0/#added-big_pk_auto" class="hash-link" aria-label="Direct link to added-big_pk_auto" title="Direct link to added-big_pk_auto">​</a></h3>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)">// old</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">pk_auto</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">T</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">IntoIden</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">T</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token function" style="color:rgb(0, 0, 255)">integer</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">auto_increment</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">primary_key</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">take</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// new: same as above but use big integer</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">big_pk_auto</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">T</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">IntoIden</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">T</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token function" style="color:rgb(0, 0, 255)">big_integer</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">auto_increment</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">primary_key</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">take</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="added-chronoutc-to-entity-prelude">Added <code>chrono::Utc</code> to entity prelude<a href="https://www.sea-ql.org/blog/2025-09-24-sea-orm-2.0/#added-chronoutc-to-entity-prelude" class="hash-link" aria-label="Direct link to added-chronoutc-to-entity-prelude" title="Direct link to added-chronoutc-to-entity-prelude">​</a></h3>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">type</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">ChronoUtc</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">chrono</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Utc</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>We can now rely on <code>sea-orm</code>'s re-export:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)">// old: chrono has to be added in Cargo.toml</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> ts</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">ChronoDateTimeUtc</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">chrono</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Utc</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">now</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// new: use sea-orm's re-export</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> ts</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">ChronoDateTimeUtc</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">ChronoUtc</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">now</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="breaking-changes">Breaking changes<a href="https://www.sea-ql.org/blog/2025-09-24-sea-orm-2.0/#breaking-changes" class="hash-link" aria-label="Direct link to Breaking changes" title="Direct link to Breaking changes">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="use-static-str-in-identifiers">Use <code>&amp;'static str</code> in identifiers<a href="https://www.sea-ql.org/blog/2025-09-24-sea-orm-2.0/#use-static-str-in-identifiers" class="hash-link" aria-label="Direct link to use-static-str-in-identifiers" title="Direct link to use-static-str-in-identifiers">​</a></h3>
<p><a href="https://github.com/SeaQL/sea-orm/pull/2667" target="_blank" rel="noopener noreferrer">#2667</a> Changed <code>IdenStatic</code> and <code>EntityName</code> definition. This change stemmed from the <a href="https://www.sea-ql.org/blog/2025-08-30-sea-query-1.0/#revamped-iden-type-system" target="_blank" rel="noopener noreferrer">revamp of the <code>Iden</code> type system</a> in SeaQuery, in which <code>&amp;'static str</code> now has slightly less overhead.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">trait</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">IdenStatic</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">as_str</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token lifetime-annotation symbol">'static</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">str</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// added static lifetime</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">trait</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">EntityName</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">table_name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token lifetime-annotation symbol">'static</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">str</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// added static lifetime</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="querybuilder-is-no-longer-object-safe"><code>QueryBuilder</code> is no longer object safe<a href="https://www.sea-ql.org/blog/2025-09-24-sea-orm-2.0/#querybuilder-is-no-longer-object-safe" class="hash-link" aria-label="Direct link to querybuilder-is-no-longer-object-safe" title="Direct link to querybuilder-is-no-longer-object-safe">​</a></h3>
<p>Removed <code>DbBackend::get_query_builder()</code> because <code>QueryBuilder</code> is no longer object safe. This change improved query building performance by 5-10%.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">impl</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DbBackend</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">// This is removed</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">get_query_builder</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Box</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token keyword" style="color:rgb(0, 0, 255)">dyn</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">QueryBuilder</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>Previously <code>dyn SqlWriter</code> is used everywhere.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">prepare_table_create_statement</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    create</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token class-name" style="color:rgb(38, 127, 153)">TableCreateStatement</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    sql</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">mut</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">dyn</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SqlWriter</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>Now, it's a generic method:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">prepare_table_create_statement</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    create</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token class-name" style="color:rgb(38, 127, 153)">TableCreateStatement</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    sql</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">mut</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">impl</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SqlWriter</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// note the impl</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>This change shouldn't impact most users because we have the following API:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">trait</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">StatementBuilder</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">build</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> db_backend</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token class-name" style="color:rgb(38, 127, 153)">DbBackend</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Statement</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// implemented for SelectStatement, InsertStatement, UpdateStatement, DeleteStatement, etc</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="changed-database-connection">Changed <code>Database Connection</code><a href="https://www.sea-ql.org/blog/2025-09-24-sea-orm-2.0/#changed-database-connection" class="hash-link" aria-label="Direct link to changed-database-connection" title="Direct link to changed-database-connection">​</a></h3>
<p><a href="https://github.com/SeaQL/sea-orm/pull/2671" target="_blank" rel="noopener noreferrer">#2671</a> <code>DatabaseConnection</code> is changed from enum to struct. The original enum is moved into <code>DatabaseConnection::inner</code>. The new enum is named <code>DatabaseConnectionType</code>.</p>
<p>This allows <code>DatabaseConnection</code> to hold additional metadata.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)">// old</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">enum</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">DatabaseConnection</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">SqlxMySqlPoolConnection</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">crate</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">SqlxMySqlPoolConnection</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">SqlxPostgresPoolConnection</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">crate</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">SqlxPostgresPoolConnection</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">SqlxSqlitePoolConnection</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">crate</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">SqlxSqlitePoolConnection</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// new</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">DatabaseConnection</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> inner</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DatabaseConnectionType</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">enum</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">DatabaseConnectionType</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">SqlxMySqlPoolConnection</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">crate</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">SqlxMySqlPoolConnection</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">SqlxPostgresPoolConnection</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">crate</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">SqlxPostgresPoolConnection</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">SqlxSqlitePoolConnection</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">crate</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">SqlxSqlitePoolConnection</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="removed-derive-custom-column">Removed <code>Derive Custom Column</code><a href="https://www.sea-ql.org/blog/2025-09-24-sea-orm-2.0/#removed-derive-custom-column" class="hash-link" aria-label="Direct link to removed-derive-custom-column" title="Direct link to removed-derive-custom-column">​</a></h3>
<p><a href="https://github.com/SeaQL/sea-orm/pull/2667" target="_blank" rel="noopener noreferrer">#2667</a> Removed <code>DeriveCustomColumn</code> macro and <code>default_as_str</code> trait method. This was a legacy of the expanded entity format.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)">// This is no longer supported:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Copy, Clone, Debug, EnumIter, DeriveCustomColumn)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">enum</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">impl</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">IdenStatic</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">as_str</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">str</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">match</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token keyword" style="color:rgb(0, 0, 255)">Self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Name</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=&gt;</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"my_name"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            _ </span><span class="token operator" style="color:rgb(0, 0, 0)">=&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">default_as_str</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)">// Do the following instead:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Copy, Clone, Debug, EnumIter, DeriveColumn)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">enum</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(column_name = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"my_name"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="upgrades">Upgrades<a href="https://www.sea-ql.org/blog/2025-09-24-sea-orm-2.0/#upgrades" class="hash-link" aria-label="Direct link to Upgrades" title="Direct link to Upgrades">​</a></h2>
<ul>
<li><code>tokio</code> is now used in place of <code>async-std</code> in sea-orm-cli and examples as async-std has been deprecated.</li>
<li>Returning is now enabled for SQLite by default. SQLite introduced returning in <code>3.35</code> which was released in 2021, it should be the default by now.</li>
<li><a href="https://github.com/SeaQL/sea-orm/pull/2596" target="_blank" rel="noopener noreferrer">#2596</a> Upgraded Rust Edition to 2024</li>
<li>Upgraded <code>strum</code> to <code>0.27</code></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="sql-server-support">SQL Server Support<a href="https://www.sea-ql.org/blog/2025-09-24-sea-orm-2.0/#sql-server-support" class="hash-link" aria-label="Direct link to SQL Server Support" title="Direct link to SQL Server Support">​</a></h2>
<p><a href="https://www.sea-ql.org/SeaORM-X/" target="_blank" rel="noopener noreferrer">SQL Server for SeaORM</a> offers the same SeaORM API for MSSQL. We ported all test cases and examples, complemented by MSSQL specific documentation. If you are building enterprise software, you can <a href="https://forms.office.com/r/1MuRPJmYBR" target="_blank" rel="noopener noreferrer">request commercial access</a>. It is currently based on SeaORM 1.0, but we will offer free upgrade to existing users when SeaORM 2.0 is finalized.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="️-seaorm-pro-professional-admin-panel">🖥️ SeaORM Pro: Professional Admin Panel<a href="https://www.sea-ql.org/blog/2025-09-24-sea-orm-2.0/#%EF%B8%8F-seaorm-pro-professional-admin-panel" class="hash-link" aria-label="Direct link to 🖥️ SeaORM Pro: Professional Admin Panel" title="Direct link to 🖥️ SeaORM Pro: Professional Admin Panel">​</a></h2>
<img src="https://www.sea-ql.org/blog/img/sea-orm-pro-light.png#light">
<img src="https://www.sea-ql.org/blog/img/sea-orm-pro-dark.png#dark">
<p><a href="https://www.sea-ql.org/sea-orm-pro/" target="_blank" rel="noopener noreferrer">SeaORM Pro</a> is an admin panel solution allowing you to quickly and easily launch an admin panel for your application - frontend development skills not required, but certainly nice to have!</p>
<p>SeaORM Pro will be updated to support the latest features in SeaORM 2.0.</p>
<p>Features:</p>
<ul>
<li>Full CRUD</li>
<li>Built on React + GraphQL</li>
<li>Built-in GraphQL resolver</li>
<li>Customize the UI with TOML config</li>
<li>Custom GraphQL endpoints <em>(new in 2.0)</em></li>
<li>Role Based Access Control <em>(new in 2.0)</em></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="more-to-come">More to come<a href="https://www.sea-ql.org/blog/2025-09-24-sea-orm-2.0/#more-to-come" class="hash-link" aria-label="Direct link to More to come" title="Direct link to More to come">​</a></h2>
<p>SeaORM 2.0 is shaping up to be our most significant release yet - with a few breaking changes, plenty of enhancements, and a clear focus on developer experience. We'll dive into Role Based Access Control in the next post, so keep an eye out for the next update!</p>
<p>SeaORM 2.0 will launch alongside SeaQuery 1.0. If you make extensive use of SeaORM's underlying query builder, we recommend checking out our earlier blog post on <a href="https://www.sea-ql.org/blog/2025-08-30-sea-query-1.0/" target="_blank" rel="noopener noreferrer">SeaQuery 1.0</a> to get familiar with the changes.</p>
<p>SeaORM 2.0 has reached its release candidate phase. We'd love for you to try it out and help shape the final release by <a href="https://github.com/SeaQL/sea-orm/discussions/2548" target="_blank" rel="noopener noreferrer">sharing your feedback</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="sponsors">Sponsors<a href="https://www.sea-ql.org/blog/2025-09-24-sea-orm-2.0/#sponsors" class="hash-link" aria-label="Direct link to Sponsors" title="Direct link to Sponsors">​</a></h2>
<p>If you feel generous, a small donation will be greatly appreciated, and goes a long way towards sustaining the organization.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="gold-sponsor">Gold Sponsor<a href="https://www.sea-ql.org/blog/2025-09-24-sea-orm-2.0/#gold-sponsor" class="hash-link" aria-label="Direct link to Gold Sponsor" title="Direct link to Gold Sponsor">​</a></h3>
<a href="https://qdx.co/"><img src="https://www.sea-ql.org/static/sponsors/QDX.svg" width="128"></a>
<p><a href="https://qdx.co/" target="_blank" rel="noopener noreferrer">QDX</a> pioneers quantum dynamics–powered drug discovery, leveraging AI and supercomputing to accelerate molecular modeling.
We're grateful to QDX for sponsoring the development of SeaORM, the SQL toolkit that powers their data intensive applications.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="github-sponsors">GitHub Sponsors<a href="https://www.sea-ql.org/blog/2025-09-24-sea-orm-2.0/#github-sponsors" class="hash-link" aria-label="Direct link to GitHub Sponsors" title="Direct link to GitHub Sponsors">​</a></h3>
<p>A big shout out to our <a href="https://github.com/sponsors/SeaQL" target="_blank" rel="noopener noreferrer">GitHub sponsors</a> 😇:</p>
<div class="row"><div class="col col--12 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--lg" href="https://github.com/subscribepro"><img src="https://avatars.githubusercontent.com/u/8466133?v=4"></a><div class="avatar__intro"><div class="avatar__name">Subscribe Pro</div></div></div></div></div>
<br>
<div class="row"><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/holly-hacker"><img src="https://avatars.githubusercontent.com/u/13605369?u=9566a44f2d869f337a4909836487bb4a29c23b72&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">Variant9</div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/ryanswrt"><img src="https://avatars.githubusercontent.com/u/87781?u=10a9d256e741f905f3dd2cf641de8b325720732e&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">Ryan Swart</div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/OteroRafael"><img src="https://avatars.githubusercontent.com/u/175388115?v=4"></a><div class="avatar__intro"><div class="avatar__name">OteroRafael</div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/higumachan"><img src="https://avatars.githubusercontent.com/u/1011298?u=de4c2f0d0929c2c6dc433981912f794d0e50f2cd&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">Yuta Hinokuma</div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/wh7f"><img src="https://avatars.githubusercontent.com/u/59872041?v=4"></a><div class="avatar__intro"><div class="avatar__name">wh7f</div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/marcson909"><img src="https://avatars.githubusercontent.com/u/16665353?v=4"></a><div class="avatar__intro"><div class="avatar__name">MS</div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/numeusxyz"><img src="https://avatars.githubusercontent.com/u/82152211?v=4"></a><div class="avatar__intro"><div class="avatar__name">Numeus</div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/data-intuitive"><img src="https://avatars.githubusercontent.com/u/15045722?v=4"></a><div class="avatar__intro"><div class="avatar__name">Data Intuitive</div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/caido-community"><img src="https://avatars.githubusercontent.com/u/168573261?v=4"></a><div class="avatar__intro"><div class="avatar__name">Caido Community</div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/marcusbuffett"><img src="https://avatars.githubusercontent.com/u/1834328?u=fd066d99cf4a6333bfb3927d1c756af4bb8baf7e&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">Marcus Buffett</div></div></div></div></div>
<br>
<div class="row"><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/yuly3"><img src="https://avatars.githubusercontent.com/u/25814001?u=4b57756e7d8060e48262a9edba687927fe7934a6&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">MasakiMiyazaki</div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/kallydev"><img src="https://avatars.githubusercontent.com/u/36319157?u=5be882aa4dbe7eea97b1a80a6473857369146df6&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">KallyDev</div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/manfredcml"><img src="https://avatars.githubusercontent.com/u/27536502?u=b71636bdabbc698458b32e2ac05c5771ad41097e&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">Manfred Lee</div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/tugascript"><img src="https://avatars.githubusercontent.com/u/64930104?u=ad9f63e8e221dbe71bf23de59e3611c99cda1181&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">Afonso Barracha</div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/deansheather"><img src="https://avatars.githubusercontent.com/u/11241812?u=260538c7d8b8c3c5350dba175ebb8294358441e0&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">Dean Sheather</div></div></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="rustacean-sticker-pack-">Rustacean Sticker Pack 🦀<a href="https://www.sea-ql.org/blog/2025-09-24-sea-orm-2.0/#rustacean-sticker-pack-" class="hash-link" aria-label="Direct link to Rustacean Sticker Pack 🦀" title="Direct link to Rustacean Sticker Pack 🦀">​</a></h2>
<p>The Rustacean Sticker Pack is the perfect way to express your passion for Rust.
Our stickers are made with a premium water-resistant vinyl with a unique matte finish.
Stick them on your laptop, notebook, or any gadget to show off your love for Rust!</p>
<p>Moreover, all proceeds contributes directly to the ongoing development of SeaQL projects.</p>
<p>Sticker Pack Contents:</p>
<ul>
<li>Logo of SeaQL projects: SeaQL, SeaORM, SeaQuery, Seaography, FireDBG</li>
<li>Mascot of SeaQL: Terres the Hermit Crab</li>
<li>Mascot of Rust: Ferris the Crab</li>
<li>The Rustacean word</li>
</ul>
<p><a href="https://www.sea-ql.org/sticker-pack/" target="_blank" rel="noopener noreferrer">Support SeaQL and get a Sticker Pack!</a></p>
<a href="https://www.sea-ql.org/sticker-pack/"><img style="border-radius:25px" alt="Rustacean Sticker Pack by SeaQL" src="https://www.sea-ql.org/static/sticker-pack-1s.jpg"></a>]]></content>
        <author>
            <name>SeaQL Team</name>
            <uri>https://github.com/SeaQL</uri>
        </author>
        <category label="news" term="news"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Sneak Peek at SeaORM 2.0]]></title>
        <id>https://www.sea-ql.org/blog/2025-09-16-sea-orm-2.0/</id>
        <link href="https://www.sea-ql.org/blog/2025-09-16-sea-orm-2.0/"/>
        <updated>2025-09-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[SeaORM 1.0 debuted on 2024-08-04. Over the past year, we've shipped 16 minor releases - staying true to our promise of delivering new features without compromising stability.]]></summary>
        <content type="html"><![CDATA[<img alt="SeaORM 2.0 Banner" src="https://www.sea-ql.org/blog/img/SeaORM%202.0%20Banner.png">
<p>SeaORM 1.0 debuted on 2024-08-04. Over the past year, we've shipped 16 minor releases - staying true to our promise of delivering new features without compromising stability.</p>
<p>While building new features in 1.0, we often found ourselves bending over backwards to avoid breaking changes, which meant leaving in a few bits that aren't exactly elegant, intuitive, or frankly, "footgun".</p>
<p>To make SeaORM friendlier and more intuitive for newcomers (and a little kinder to seasoned users too), we've decided it's time for a 2.0 release - one that embraces necessary breaking changes to clean things up and set a stronger foundation for the future.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="10-new-features">1.0 New Features<a href="https://www.sea-ql.org/blog/2025-09-16-sea-orm-2.0/#10-new-features" class="hash-link" aria-label="Direct link to 1.0 New Features" title="Direct link to 1.0 New Features">​</a></h2>
<p>If you haven't been following every update, here's a quick tour of some quality-of-life improvements you can start using right now. Otherwise, you can skip to the <a href="https://www.sea-ql.org/blog/2025-09-16-sea-orm-2.0/#20-new-features">2.0 section</a>.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="nested-select">Nested Select<a href="https://www.sea-ql.org/blog/2025-09-16-sea-orm-2.0/#nested-select" class="hash-link" aria-label="Direct link to Nested Select" title="Direct link to Nested Select">​</a></h3>
<p>This is the most requested feature by far, and we've implemented nested select in SeaORM. We've added <a href="https://github.com/SeaQL/sea-orm/pull/2686" target="_blank" rel="noopener noreferrer">nested <code>alias</code></a> and <a href="https://github.com/SeaQL/sea-orm/pull/2720" target="_blank" rel="noopener noreferrer">ActiveEnum support</a> too.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">use</span><span class="token plain"> </span><span class="token namespace">sea_orm</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">DerivePartialModel</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(DerivePartialModel)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(entity = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"cake::Entity"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">, from_query_result)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">CakeWithFruit</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(nested)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    fruit</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Option</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Fruit</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(DerivePartialModel)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(entity = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"fruit::Entity"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">, from_query_result)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Fruit</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> cakes</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Vec</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">CakeWithFruit</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">find</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">left_join</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">fruit</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into_partial_model</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">all</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="partialmodel---activemodel">PartialModel -&gt; ActiveModel<a href="https://www.sea-ql.org/blog/2025-09-16-sea-orm-2.0/#partialmodel---activemodel" class="hash-link" aria-label="Direct link to PartialModel -> ActiveModel" title="Direct link to PartialModel -> ActiveModel">​</a></h3>
<p><code>DerivePartialModel</code> got another extension to derive <a href="https://docs.rs/sea-orm/latest/sea_orm/entity/trait.IntoActiveModel.html" target="_blank" rel="noopener noreferrer"><code>IntoActiveModel</code></a> additionally. Absent attributes will be filled with <code>NotSet</code>. This allows you to use partial models to perform insert / updates as well.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(DerivePartialModel)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(entity = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"cake::Entity"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">, into_active_model)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">PartialCake</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> partial_cake </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">PartialCake</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">12</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"Lemon Drizzle"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_owned</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// this is now possible:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token plain">partial_cake</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into_active_model</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">12</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"Lemon Drizzle"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_owned</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token class-name" style="color:rgb(38, 127, 153)">Default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="insert-active-models-with-non-uniform-column-sets">Insert active models with non-uniform column sets<a href="https://www.sea-ql.org/blog/2025-09-16-sea-orm-2.0/#insert-active-models-with-non-uniform-column-sets" class="hash-link" aria-label="Direct link to Insert active models with non-uniform column sets" title="Direct link to Insert active models with non-uniform column sets">​</a></h3>
<p>Insert many now allows active models to have different column sets. Previously, it'd panic when encountering this. Missing columns will be filled with <code>NULL</code>. This makes seeding data a seamless operation.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> apple </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">cake_filling</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    cake_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveValue</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    filling_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveValue</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">NotSet</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> orange </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">cake_filling</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    cake_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveValue</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">NotSet</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    filling_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveValue</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">3</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Insert</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token namespace">cake_filling</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">add_many</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">apple</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> orange</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">build</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">DbBackend</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Postgres</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">r#"INSERT INTO "cake_filling" ("cake_id", "filling_id") VALUES (2, NULL), (NULL, 3)"#</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="support-postgres-pgvector--ipnetwork">Support Postgres PgVector &amp; IpNetwork<a href="https://www.sea-ql.org/blog/2025-09-16-sea-orm-2.0/#support-postgres-pgvector--ipnetwork" class="hash-link" aria-label="Direct link to Support Postgres PgVector &amp; IpNetwork" title="Direct link to Support Postgres PgVector &amp; IpNetwork">​</a></h3>
<p>Under feature flag <code>postgres-vector</code> / <code>with-ipnetwork</code>.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(table_name = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"demo_table"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(primary_key)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> embedding</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">PgVector</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> ipaddress</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">IpNetwork</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="20-new-features">2.0 New Features<a href="https://www.sea-ql.org/blog/2025-09-16-sea-orm-2.0/#20-new-features" class="hash-link" aria-label="Direct link to 2.0 New Features" title="Direct link to 2.0 New Features">​</a></h2>
<p>These are small touch‑ups, but added up they can make a big difference.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="nested-select-on-any-model">Nested Select on any Model<a href="https://www.sea-ql.org/blog/2025-09-16-sea-orm-2.0/#nested-select-on-any-model" class="hash-link" aria-label="Direct link to Nested Select on any Model" title="Direct link to Nested Select on any Model">​</a></h3>
<p><a href="https://github.com/SeaQL/sea-orm/pull/2642" target="_blank" rel="noopener noreferrer">#2642</a> Wait... we've seen this before? No, there is a small detail here: now every Model can be used in nested select! This requires a small breaking change to basically derive <code>PartialModelTrait</code> on regular <code>Model</code>s. And also notice the removed <code>from_query_result</code>.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">use</span><span class="token plain"> </span><span class="token namespace">sea_orm</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">DerivePartialModel</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(DerivePartialModel)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(entity = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"cake::Entity"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// &lt;- from_query_result not needed</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">CakeWithFruit</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(nested)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    fruit</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Option</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token namespace">fruit</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// &lt;- this is just a regular Model</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> cakes</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Vec</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">CakeWithFruit</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">find</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">left_join</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">fruit</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into_partial_model</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">all</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="wrapper-type-as-primary-key">Wrapper type as primary key<a href="https://www.sea-ql.org/blog/2025-09-16-sea-orm-2.0/#wrapper-type-as-primary-key" class="hash-link" aria-label="Direct link to Wrapper type as primary key" title="Direct link to Wrapper type as primary key">​</a></h3>
<p><a href="https://github.com/SeaQL/sea-orm/pull/2643" target="_blank" rel="noopener noreferrer">#2643</a> Wrapper type derived with <code>DeriveValueType</code> can now be used as primary key. Now you can embrace Rust's type system to make your code more robust!</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Clone, Debug, PartialEq, Eq, DeriveEntityModel)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(table_name = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"my_value_type"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(primary_key)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">MyInteger</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Clone, Debug, PartialEq, Eq, DeriveValueType)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">MyInteger</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// only for i8 | i16 | i32 | i64 | u8 | u16 | u32 | u64</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="multi-part-unique-keys">Multi-part unique keys<a href="https://www.sea-ql.org/blog/2025-09-16-sea-orm-2.0/#multi-part-unique-keys" class="hash-link" aria-label="Direct link to Multi-part unique keys" title="Direct link to Multi-part unique keys">​</a></h3>
<p><a href="https://github.com/SeaQL/sea-orm/pull/2651" target="_blank" rel="noopener noreferrer">#2651</a> You can now define unique keys that span multiple columns in Entity.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Clone, Debug, PartialEq, Eq, DeriveEntityModel)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(table_name = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"lineitem"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(primary_key)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(unique_key = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"item"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> order_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(unique_key = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"item"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> cake_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> stmts </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Schema</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">backend</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">create_index_from_entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">lineitem</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    stmts</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token number" style="color:rgb(9, 134, 88)">0</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Index</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">create</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"idx-lineitem-item"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">lineitem</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">lineitem</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">OrderId</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">lineitem</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">CakeId</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unique</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">take</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    backend</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">build</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">stmts</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token number" style="color:rgb(9, 134, 88)">0</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">r#"CREATE UNIQUE INDEX "idx-lineitem-item" ON "lineitem" ("order_id", "cake_id")"#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="allow-missing-fields-when-using-activemodelfrom_json">Allow missing fields when using <code>ActiveModel::from_json</code><a href="https://www.sea-ql.org/blog/2025-09-16-sea-orm-2.0/#allow-missing-fields-when-using-activemodelfrom_json" class="hash-link" aria-label="Direct link to allow-missing-fields-when-using-activemodelfrom_json" title="Direct link to allow-missing-fields-when-using-activemodelfrom_json">​</a></h3>
<p><a href="https://github.com/SeaQL/sea-orm/pull/2599" target="_blank" rel="noopener noreferrer">#2599</a> Improved utility of <code>ActiveModel::from_json</code> when dealing with inputs coming from REST APIs.</p>
<p>Consider the following Entity:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Clone, Debug, PartialEq, Eq, DeriveEntityModel, Serialize, Deserialize)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(table_name = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"cake"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(primary_key)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain">      </span><span class="token comment" style="color:rgb(0, 128, 0)">// &lt;- not nullable</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>Previously, the following would result in error <code>missing field "id"</code>. The usual solution is to add <code>#[serde(skip_deserializing)]</code> to the Model.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token macro property">assert!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">from_json</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token macro property">json!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token string" style="color:rgb(163, 21, 21)">"name"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"Apple Pie"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">is_err</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>Now, the above will just work. The ActiveModel will be partially filled:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">from_json</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token macro property">json!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token string" style="color:rgb(163, 21, 21)">"name"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"Apple Pie"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unwrap</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">NotSet</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"Apple Pie"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_owned</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>How does it work under the hood? It's actually <a href="http://localhost:3000/blog/2025-06-01-whats-new-in-sea-orm-1.1/#added-default_values-to-activemodeltrait" target="_blank" rel="noopener noreferrer">quite interesting</a>. This requires a small breaking to the trait bound of the method.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="20-exciting-new-features">2.0 Exciting New Features<a href="https://www.sea-ql.org/blog/2025-09-16-sea-orm-2.0/#20-exciting-new-features" class="hash-link" aria-label="Direct link to 2.0 Exciting New Features" title="Direct link to 2.0 Exciting New Features">​</a></h2>
<p>We've planned some exciting new features for SeaORM too.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ergonomic-raw-sql">Ergonomic Raw SQL<a href="https://www.sea-ql.org/blog/2025-09-16-sea-orm-2.0/#ergonomic-raw-sql" class="hash-link" aria-label="Direct link to Ergonomic Raw SQL" title="Direct link to Ergonomic Raw SQL">​</a></h3>
<p>While already explained in detail in a <a href="https://www.sea-ql.org/blog/2025-08-15-sea-query-raw-sql/" target="_blank" rel="noopener noreferrer">previous blog post</a>, we've integrated the <code>raw_sql!</code> macro nicely into SeaORM. It's like the <code>format!</code> macro but without the risk of SQL injection. It supports nested parameter interpolation, array and tuple expansion, and even repeating group!</p>
<p>It's not a ground-breaking new feature, as similar functions exist in other dynamic languages. But it does unlock exciting new ways to use SeaORM. After all, SeaORM isn't just an ORM; it's a flexible SQL toolkit you can tailour to your own programming style. Use it as a backend-agnostic SQLx wrapper, SeaQuery with built-in connection management, or a lightweight ORM with enchanted raw SQL. The choice is yours!</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="find-model-by-raw-sql">Find Model by raw SQL<a href="https://www.sea-ql.org/blog/2025-09-16-sea-orm-2.0/#find-model-by-raw-sql" class="hash-link" aria-label="Direct link to Find Model by raw SQL" title="Direct link to Find Model by raw SQL">​</a></h4>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> item </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Item</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> cake</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Option</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">find</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">from_raw_sql</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token macro property">raw_sql!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Postgres</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token string" style="color:rgb(163, 21, 21)">r#"SELECT "cake"."id", "cake"."name" FROM "cake" WHERE "id" = {item.id}"#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">one</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="find-custom-model-by-raw-sql">Find custom Model by raw SQL<a href="https://www.sea-ql.org/blog/2025-09-16-sea-orm-2.0/#find-custom-model-by-raw-sql" class="hash-link" aria-label="Direct link to Find custom Model by raw SQL" title="Direct link to Find custom Model by raw SQL">​</a></h4>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(FromQueryResult)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Cake</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(nested)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    bakery</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Option</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Bakery</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(FromQueryResult)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Bakery</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(alias = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"bakery_name"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> cake_ids </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">3</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">4</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// expanded by the `..` operator</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> cake</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Option</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Cake</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Cake</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">find_by_statement</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token macro property">raw_sql!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Sqlite</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">r#"SELECT "cake"."name", "bakery"."name" AS "bakery_name"</span><br></span><span class="token-line" style="color:#000000"><span class="token string" style="color:rgb(163, 21, 21)">       FROM "cake"</span><br></span><span class="token-line" style="color:#000000"><span class="token string" style="color:rgb(163, 21, 21)">       LEFT JOIN "bakery" ON "cake"."bakery_id" = "bakery"."id"</span><br></span><span class="token-line" style="color:#000000"><span class="token string" style="color:rgb(163, 21, 21)">       WHERE "cake"."id" IN ({..cake_ids})"#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">one</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="paginate-raw-sql-query">Paginate raw SQL query<a href="https://www.sea-ql.org/blog/2025-09-16-sea-orm-2.0/#paginate-raw-sql-query" class="hash-link" aria-label="Direct link to Paginate raw SQL query" title="Direct link to Paginate raw SQL query">​</a></h4>
<p>You can paginate <a href="https://docs.rs/sea-orm/*/sea_orm/struct.SelectorRaw.html" target="_blank" rel="noopener noreferrer"><code>SelectorRaw</code></a> and fetch <code>Model</code> in batches.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> ids </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token macro property">vec!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">3</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">4</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">mut</span><span class="token plain"> cake_pages </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">find</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">from_raw_sql</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token macro property">raw_sql!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Postgres</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token string" style="color:rgb(163, 21, 21)">r#"SELECT "cake"."id", "cake"."name" FROM "cake" WHERE "id" IN ({..ids})"#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">paginate</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">10</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">while</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Some</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">cakes</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> cake_pages</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">fetch_and_next</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">// Do something on cakes: Vec&lt;cake::Model&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="role-based-access-control">Role Based Access Control<a href="https://www.sea-ql.org/blog/2025-09-16-sea-orm-2.0/#role-based-access-control" class="hash-link" aria-label="Direct link to Role Based Access Control" title="Direct link to Role Based Access Control">​</a></h3>
<p><a href="https://github.com/SeaQL/sea-orm/pull/2683" target="_blank" rel="noopener noreferrer">#2683</a> We will cover this in detail in a future blog post, but here's a sneak peek.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="seaorm-rbac">SeaORM RBAC<a href="https://www.sea-ql.org/blog/2025-09-16-sea-orm-2.0/#seaorm-rbac" class="hash-link" aria-label="Direct link to SeaORM RBAC" title="Direct link to SeaORM RBAC">​</a></h4>
<ol>
<li>A hierarchical RBAC engine that is table scoped<!-- -->
<ul>
<li>a user has 1 (and only 1) role</li>
<li>a role has a set of permissions on a set of resources<!-- -->
<ul>
<li>permissions here are CRUD operations and resources are tables</li>
<li>but the engine is generic so can be used for other things</li>
</ul>
</li>
<li>roles have hierarchy, and can inherit permissions from multiple roles</li>
<li>there is a wildcard <code>*</code> (opt-in) to grant all permissions or resources</li>
<li>individual users can have rules override</li>
</ul>
</li>
<li>A set of Entities to load / store the access control rules to / from database</li>
<li>A query auditor that dissect queries for necessary permissions (implemented in SeaQuery)</li>
<li>Integration of RBAC into SeaORM in form of <code>RestrictedConnection</code>.
It implements <code>ConnectionTrait</code>, behaves like a normal connection, but will audit all queries and perform permission check before execution,
and reject them accordingly. All Entity operations except raw SQL are supported.
Complex nested joins, <code>INSERT INTO SELECT FROM</code>, and even CTE queries are supported.</li>
</ol>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)">// set the rules</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">rbac</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">add_roles</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">db_conn</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token string" style="color:rgb(163, 21, 21)">"admin"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"manager"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"public"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">rbac</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">add_role_permissions</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">db_conn</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"admin"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token string" style="color:rgb(163, 21, 21)">"create"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token string" style="color:rgb(163, 21, 21)">"bakery"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// load rules from database</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">db_conn</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">load_rbac</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// admin can create bakery</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">RestrictedConnection</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> db_conn</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">restricted_for</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">admin</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> seaside_bakery </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">bakery</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"SeaSide Bakery"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_owned</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token class-name" style="color:rgb(38, 127, 153)">Default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Bakery</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">insert</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">seaside_bakery</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">exec</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">is_ok</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// manager cannot create bakery</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">RestrictedConnection</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> db_conn</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">restricted_for</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">manager</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token macro property">matches!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Bakery</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">insert</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">bakery</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">exec</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Err</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">DbErr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">AccessDenied</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// transaction works too</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> txn</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">RestrictedTransaction</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">begin</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token namespace">baker</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">insert</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">baker</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"Master Baker"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_owned</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    bakery_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Some</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token class-name" style="color:rgb(38, 127, 153)">Default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">exec</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">txn</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">txn</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">commit</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="️-seaorm-pro-professional-admin-panel">🖥️ SeaORM Pro: Professional Admin Panel<a href="https://www.sea-ql.org/blog/2025-09-16-sea-orm-2.0/#%EF%B8%8F-seaorm-pro-professional-admin-panel" class="hash-link" aria-label="Direct link to 🖥️ SeaORM Pro: Professional Admin Panel" title="Direct link to 🖥️ SeaORM Pro: Professional Admin Panel">​</a></h2>
<img src="https://www.sea-ql.org/blog/img/sea-orm-pro-light.png#light">
<img src="https://www.sea-ql.org/blog/img/sea-orm-pro-dark.png#dark">
<p><a href="https://www.sea-ql.org/sea-orm-pro/" target="_blank" rel="noopener noreferrer">SeaORM Pro</a> is an admin panel solution allowing you to quickly and easily launch an admin panel for your application - frontend development skills not required, but certainly nice to have!</p>
<p>Features:</p>
<ul>
<li>Full CRUD</li>
<li>Built on React + GraphQL</li>
<li>Built-in GraphQL resolver</li>
<li>Customize the UI with simple TOML</li>
<li>RBAC (coming soon with SeaORM 2.0)</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="more-to-come">More to come<a href="https://www.sea-ql.org/blog/2025-09-16-sea-orm-2.0/#more-to-come" class="hash-link" aria-label="Direct link to More to come" title="Direct link to More to come">​</a></h2>
<p>SeaORM 2.0 is shaping up to be our most significant release yet - with a few breaking changes, plenty of enhancements, and a clear focus on developer experience. We'll unpack everything in the posts to come, so keep an eye out for the next update!</p>
<p>SeaORM 2.0 will launch alongside SeaQuery 1.0. If you make extensive use of SeaORM's underlying query builder, we recommend checking out our earlier blog post on <a href="https://www.sea-ql.org/blog/2025-08-30-sea-query-1.0/" target="_blank" rel="noopener noreferrer">SeaQuery 1.0</a> to get familiar with the changes.</p>
<p>If you have suggestions on breaking changes, you are welcome to post them in the <a href="https://github.com/SeaQL/sea-orm/discussions/2548" target="_blank" rel="noopener noreferrer">discussions</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="sponsors">Sponsors<a href="https://www.sea-ql.org/blog/2025-09-16-sea-orm-2.0/#sponsors" class="hash-link" aria-label="Direct link to Sponsors" title="Direct link to Sponsors">​</a></h2>
<p>If you feel generous, a small donation will be greatly appreciated, and goes a long way towards sustaining the organization.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="gold-sponsor">Gold Sponsor<a href="https://www.sea-ql.org/blog/2025-09-16-sea-orm-2.0/#gold-sponsor" class="hash-link" aria-label="Direct link to Gold Sponsor" title="Direct link to Gold Sponsor">​</a></h3>
<a href="https://qdx.co/"><img src="https://www.sea-ql.org/static/sponsors/QDX.svg" width="128"></a>
<p><a href="https://qdx.co/" target="_blank" rel="noopener noreferrer">QDX</a> pioneers quantum dynamics–powered drug discovery, leveraging AI and supercomputing to accelerate molecular modeling.
We're grateful to QDX for sponsoring the development of SeaORM, the SQL toolkit that powers their data intensive applications.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="github-sponsors">GitHub Sponsors<a href="https://www.sea-ql.org/blog/2025-09-16-sea-orm-2.0/#github-sponsors" class="hash-link" aria-label="Direct link to GitHub Sponsors" title="Direct link to GitHub Sponsors">​</a></h3>
<p>A big shout out to our <a href="https://github.com/sponsors/SeaQL" target="_blank" rel="noopener noreferrer">GitHub sponsors</a> 😇:</p>
<div class="row"><div class="col col--12 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--lg" href="https://github.com/subscribepro"><img src="https://avatars.githubusercontent.com/u/8466133?v=4"></a><div class="avatar__intro"><div class="avatar__name">Subscribe Pro</div></div></div></div></div>
<br>
<div class="row"><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/holly-hacker"><img src="https://avatars.githubusercontent.com/u/13605369?u=9566a44f2d869f337a4909836487bb4a29c23b72&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">Variant9</div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/ryanswrt"><img src="https://avatars.githubusercontent.com/u/87781?u=10a9d256e741f905f3dd2cf641de8b325720732e&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">Ryan Swart</div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/OteroRafael"><img src="https://avatars.githubusercontent.com/u/175388115?v=4"></a><div class="avatar__intro"><div class="avatar__name">OteroRafael</div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/higumachan"><img src="https://avatars.githubusercontent.com/u/1011298?u=de4c2f0d0929c2c6dc433981912f794d0e50f2cd&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">Yuta Hinokuma</div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/wh7f"><img src="https://avatars.githubusercontent.com/u/59872041?v=4"></a><div class="avatar__intro"><div class="avatar__name">wh7f</div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/marcson909"><img src="https://avatars.githubusercontent.com/u/16665353?v=4"></a><div class="avatar__intro"><div class="avatar__name">MS</div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/numeusxyz"><img src="https://avatars.githubusercontent.com/u/82152211?v=4"></a><div class="avatar__intro"><div class="avatar__name">Numeus</div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/data-intuitive"><img src="https://avatars.githubusercontent.com/u/15045722?v=4"></a><div class="avatar__intro"><div class="avatar__name">Data Intuitive</div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/caido-community"><img src="https://avatars.githubusercontent.com/u/168573261?v=4"></a><div class="avatar__intro"><div class="avatar__name">Caido Community</div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/marcusbuffett"><img src="https://avatars.githubusercontent.com/u/1834328?u=fd066d99cf4a6333bfb3927d1c756af4bb8baf7e&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">Marcus Buffett</div></div></div></div></div>
<br>
<div class="row"><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/yuly3"><img src="https://avatars.githubusercontent.com/u/25814001?u=4b57756e7d8060e48262a9edba687927fe7934a6&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">MasakiMiyazaki</div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/kallydev"><img src="https://avatars.githubusercontent.com/u/36319157?u=5be882aa4dbe7eea97b1a80a6473857369146df6&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">KallyDev</div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/manfredcml"><img src="https://avatars.githubusercontent.com/u/27536502?u=b71636bdabbc698458b32e2ac05c5771ad41097e&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">Manfred Lee</div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/tugascript"><img src="https://avatars.githubusercontent.com/u/64930104?u=ad9f63e8e221dbe71bf23de59e3611c99cda1181&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">Afonso Barracha</div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/deansheather"><img src="https://avatars.githubusercontent.com/u/11241812?u=260538c7d8b8c3c5350dba175ebb8294358441e0&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">Dean Sheather</div></div></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="rustacean-sticker-pack-">Rustacean Sticker Pack 🦀<a href="https://www.sea-ql.org/blog/2025-09-16-sea-orm-2.0/#rustacean-sticker-pack-" class="hash-link" aria-label="Direct link to Rustacean Sticker Pack 🦀" title="Direct link to Rustacean Sticker Pack 🦀">​</a></h2>
<p>The Rustacean Sticker Pack is the perfect way to express your passion for Rust.
Our stickers are made with a premium water-resistant vinyl with a unique matte finish.
Stick them on your laptop, notebook, or any gadget to show off your love for Rust!</p>
<p>Moreover, all proceeds contributes directly to the ongoing development of SeaQL projects.</p>
<p>Sticker Pack Contents:</p>
<ul>
<li>Logo of SeaQL projects: SeaQL, SeaORM, SeaQuery, Seaography, FireDBG</li>
<li>Mascot of SeaQL: Terres the Hermit Crab</li>
<li>Mascot of Rust: Ferris the Crab</li>
<li>The Rustacean word</li>
</ul>
<p><a href="https://www.sea-ql.org/sticker-pack/" target="_blank" rel="noopener noreferrer">Support SeaQL and get a Sticker Pack!</a></p>
<a href="https://www.sea-ql.org/sticker-pack/"><img style="border-radius:25px" alt="Rustacean Sticker Pack by SeaQL" src="https://www.sea-ql.org/static/sticker-pack-1s.jpg"></a>]]></content>
        <author>
            <name>SeaQL Team</name>
            <uri>https://github.com/SeaQL</uri>
        </author>
        <category label="news" term="news"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[The road to SeaQuery 1.0]]></title>
        <id>https://www.sea-ql.org/blog/2025-08-30-sea-query-1.0/</id>
        <link href="https://www.sea-ql.org/blog/2025-08-30-sea-query-1.0/"/>
        <updated>2025-08-30T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[SeaQuery 0.1.0 was first released on 2020-12-16 - it's been a few years! Since then, there have been 32 releases, each introducing a set of new features. As with many software projects, the organic evolution driven by a diverse community of open source contributors has led to occasional inconsistencies across the codebase. It's a good problem to have, and a testament to our vibrant community. But now, it's time to stabilize SeaQuery and address some of these issues.]]></summary>
        <content type="html"><![CDATA[<img alt="SeaQuery 1.0 Banner" src="https://www.sea-ql.org/blog/img/SeaQuery%201.0%20Banner.png">
<p>SeaQuery 0.1.0 was first released on 2020-12-16 - it's been a few years! Since then, there have been 32 releases, each introducing a set of new features. As with many software projects, the organic evolution driven by a diverse community of open source contributors has led to occasional inconsistencies across the codebase. It's a good problem to have, and a testament to our vibrant community. But now, it's time to stabilize SeaQuery and address some of these issues.</p>
<p>A very brief recap of important SeaQuery verisons:</p>
<table><thead><tr><th>version</th><th>date</th><th>notes</th></tr></thead><tbody><tr><td><a href="https://github.com/SeaQL/sea-query/releases/tag/0.1.0" target="_blank" rel="noopener noreferrer">0.1.0</a></td><td>2020-12-16</td><td><a href="https://www.reddit.com/r/rust/comments/kkle6j/seaquery_is_a_database_agnostic_runtime_query/" target="_blank" rel="noopener noreferrer">initial release</a></td></tr><tr><td><a href="https://github.com/SeaQL/sea-query/releases/tag/0.16.0" target="_blank" rel="noopener noreferrer">0.16.0</a></td><td>2021-09-02</td><td><a href="https://www.sea-ql.org/blog/2021-09-20-introducing-sea-orm/" target="_blank" rel="noopener noreferrer">SeaORM 0.1</a></td></tr><tr><td><a href="https://github.com/SeaQL/sea-query/releases/tag/0.30.0" target="_blank" rel="noopener noreferrer">0.30.0</a></td><td>2023-07-20</td><td>SeaORM 0.12</td></tr><tr><td><a href="https://github.com/SeaQL/sea-query/releases/tag/0.31.0" target="_blank" rel="noopener noreferrer">0.31.0</a></td><td>2024-08-02</td><td><a href="https://www.sea-ql.org/blog/2024-08-04-sea-orm-1.0/" target="_blank" rel="noopener noreferrer">SeaORM 1.0</a></td></tr><tr><td><a href="https://github.com/SeaQL/sea-query/releases/tag/0.32.0" target="_blank" rel="noopener noreferrer">0.32.0</a></td><td>2024-10-17</td><td>SeaORM 1.1</td></tr><tr><td><a href="https://github.com/SeaQL/sea-query/releases/tag/0.32.7" target="_blank" rel="noopener noreferrer">0.32.7</a></td><td>2025-08-06</td><td>latest version</td></tr></tbody></table>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="architectural-changes">Architectural changes<a href="https://www.sea-ql.org/blog/2025-08-30-sea-query-1.0/#architectural-changes" class="hash-link" aria-label="Direct link to Architectural changes" title="Direct link to Architectural changes">​</a></h2>
<p>There are a few architectural changes that can only be made by breaking the API, so let's go through them one by one:</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="forbid-unsafe-code">Forbid unsafe code<a href="https://www.sea-ql.org/blog/2025-08-30-sea-query-1.0/#forbid-unsafe-code" class="hash-link" aria-label="Direct link to Forbid unsafe code" title="Direct link to Forbid unsafe code">​</a></h3>
<p><a href="https://github.com/SeaQL/sea-query/pull/930" target="_blank" rel="noopener noreferrer">#930</a>
<code>#![forbid(unsafe_code)]</code> has been added to all workspace crates, ensuring that SeaQuery no longer contains any unsafe code. While only one instance of unsafe was previously used, and has now been removed, this change reinforces our commitment to maintaining code quality.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="unified-expr-and-simpleexpr-as-one-type">Unified <code>Expr</code> and <code>SimpleExpr</code> as one type<a href="https://www.sea-ql.org/blog/2025-08-30-sea-query-1.0/#unified-expr-and-simpleexpr-as-one-type" class="hash-link" aria-label="Direct link to unified-expr-and-simpleexpr-as-one-type" title="Direct link to unified-expr-and-simpleexpr-as-one-type">​</a></h3>
<p><a href="https://github.com/SeaQL/sea-query/pull/890" target="_blank" rel="noopener noreferrer">#890</a> Previously, a lot of operator methods (e.g. <code>eq</code>) were duplicated across <code>Expr</code> and <code>SimpleExpr</code>, but the list of methods was slightly different for each. Also, it wasn't clear when to use each of the two types. The type conversions were sometimes non-obvious. It complicated the type system and made writing generic code difficult.</p>
<p>In 0.32.0, almost a year ago, we added <code>ExprTrait</code> (<a href="https://github.com/SeaQL/sea-query/pull/771" target="_blank" rel="noopener noreferrer">#771</a>) to standardize and share the list of methods, and to allow calling them on other "lower-level" types like so: <code>1_i32.cast_as("REAL")</code>. At that time, we decided to keep the original inherent methods for compatibility, at the cost of ~1300 lines of code bloat.</p>
<p>Later, we looked into the <code>Expr</code> vs <code>SimpleExpr</code> distinction. It turned out that <code>Expr</code> was originally meant to be a "namespace" of static constructors for <code>SimpleExpr</code>, similar to <a href="https://docs.rs/sea-query/0.32.7/sea_query/func/struct.Func.html" target="_blank" rel="noopener noreferrer"><code>Func</code></a> vs <a href="https://docs.rs/sea-query/0.32.7/sea_query/func/struct.FunctionCall.html" target="_blank" rel="noopener noreferrer"><code>FunctionCall</code></a>. Unlike <code>Func</code>, which is a unit struct, <code>Expr</code> has data fields, which led to <code>Expr</code>s being passed around, making it hard for functions to accept / return "expression fragments".</p>
<p>In 1.0, <code>SimpleExpr</code> is "merged into" <code>Expr</code>, meaning that <code>SimpleExpr</code> is now just a type alias of <code>Expr</code>. Both names can be used interchangeably. A lot of redundant type conversions (<code>.into()</code>) and generic code (<code>T: ExprTrait</code>) can now be removed.</p>
<p>The resulting "merged" type has all methods from the two original types, except for the methods defined by <code>ExprTrait</code>. Those inherent methods have been removed and have saved us 1300 lines of code.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">enum</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Expr</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// the AST node enum</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnRef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Tuple</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Vec</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Expr</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">type</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Expr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// now: just an alias</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">impl</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Expr</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">equals</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">C</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">C</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">Self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// removed</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">trait</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">ExprTrait</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Sized</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">equals</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">C</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">C</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Expr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// please use this</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="potential-compile-errors">Potential compile errors<a href="https://www.sea-ql.org/blog/2025-08-30-sea-query-1.0/#potential-compile-errors" class="hash-link" aria-label="Direct link to Potential compile errors" title="Direct link to Potential compile errors">​</a></h4>
<p>If you implemented some trait for both of those types, two impls for one type will no longer compile and you'll need to delete one of the impls.</p>
<p>If you encounter the following error, please add <code>use sea_query::ExprTrait</code> in scope.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">error</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token constant" style="color:rgb(129, 31, 63)">E0599</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> no method named `like` found </span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">enum</span><span class="token plain"> `</span><span class="token namespace">sea_query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Expr</span><span class="token plain">` </span><span class="token keyword" style="color:rgb(0, 0, 255)">in</span><span class="token plain"> the current scope</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain">         </span><span class="token class-name" style="color:rgb(38, 127, 153)">Expr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">entity_name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">*</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">like</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">s</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain">     </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">like</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">L</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> like</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">L</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Expr</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain">        </span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token plain"> the method is available </span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> `</span><span class="token namespace">sea_query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Expr</span><span class="token plain">` here</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token closure-params closure-punctuation punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token closure-params"></span><br></span><span class="token-line" style="color:#000000"><span class="token closure-params">    </span><span class="token closure-params operator" style="color:rgb(0, 0, 0)">=</span><span class="token closure-params"> help</span><span class="token closure-params punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token closure-params"> items from traits can only be used </span><span class="token closure-params keyword" style="color:rgb(0, 0, 255)">if</span><span class="token closure-params"> the </span><span class="token closure-params keyword" style="color:rgb(0, 0, 255)">trait</span><span class="token closure-params"> </span><span class="token closure-params type-definition class-name" style="color:rgb(38, 127, 153)">is</span><span class="token closure-params"> </span><span class="token closure-params keyword" style="color:rgb(0, 0, 255)">in</span><span class="token closure-params"> scope</span><br></span><span class="token-line" style="color:#000000"><span class="token closure-params">help</span><span class="token closure-params punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token closure-params"> </span><span class="token closure-params keyword" style="color:rgb(0, 0, 255)">trait</span><span class="token closure-params"> `</span><span class="token closure-params class-name" style="color:rgb(38, 127, 153)">ExprTrait</span><span class="token closure-params">` which provides `like` is implemented but not </span><span class="token closure-params keyword" style="color:rgb(0, 0, 255)">in</span><span class="token closure-params"> scope</span><span class="token closure-params punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token closure-params"> perhaps you want to import it</span><br></span><span class="token-line" style="color:#000000"><span class="token closure-params">    </span><span class="token closure-params closure-punctuation punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">+</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">use</span><span class="token plain"> </span><span class="token namespace">sea_query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ExprTrait</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">error</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token constant" style="color:rgb(129, 31, 63)">E0308</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> mismatched types</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> src</span><span class="token operator" style="color:rgb(0, 0, 0)">/</span><span class="token plain">sqlite</span><span class="token operator" style="color:rgb(0, 0, 0)">/</span><span class="token plain">discovery</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">rs</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token number" style="color:rgb(9, 134, 88)">27</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token number" style="color:rgb(9, 134, 88)">57</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">   </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">   </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain">             </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">and_where</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Expr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Alias</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"type"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">eq</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"table"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">   </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain">                                                      </span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token plain"> expected `</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Expr</span><span class="token plain">`</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> found `</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">str</span><span class="token plain">`</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">   </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain">                                                      </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">   </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain">                                                      arguments to this method are incorrect</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">   </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">   </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> note</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> expected reference `</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token namespace">sea_query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Expr</span><span class="token plain">`</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">              found reference `</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token lifetime-annotation symbol">'static</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">str</span><span class="token plain">`</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="revamped-iden-type-system">Revamped <code>Iden</code> type system.<a href="https://www.sea-ql.org/blog/2025-08-30-sea-query-1.0/#revamped-iden-type-system" class="hash-link" aria-label="Direct link to revamped-iden-type-system" title="Direct link to revamped-iden-type-system">​</a></h3>
<p><a href="https://github.com/SeaQL/sea-query/pull/909" target="_blank" rel="noopener noreferrer">#909</a>
Previously, <code>DynIden</code> is lazily rendered, i.e. the identifier is only constructed while serializing the AST. Now, it's an eagerly rendered string <code>Cow&lt;'static, str&gt;</code>, constructed while constructing the AST.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">type</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">DynIden</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SeaRc</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token keyword" style="color:rgb(0, 0, 255)">dyn</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Iden</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain">               </span><span class="token comment" style="color:rgb(0, 128, 0)">// old</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">DynIden</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">crate</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Cow</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token lifetime-annotation symbol">'static</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">str</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// new</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">SeaRc</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">I</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">crate</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">RcOrArc</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">I</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain">       </span><span class="token comment" style="color:rgb(0, 128, 0)">// old</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">SeaRc</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain">                                 </span><span class="token comment" style="color:rgb(0, 128, 0)">// new</span><br></span></code></pre></div></div>
<p>The implications of this new design are:</p>
<ol>
<li>Type info is erased from <code>Iden</code> early</li>
<li><code>SeaRc</code> is no longer an alias to <code>Rc</code> / <code>Arc</code>. As such, <code>Send</code> / <code>Sync</code> is removed from the trait <code>Iden</code></li>
</ol>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SeaRc</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">clone</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">from_tbl</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain">      </span><span class="token comment" style="color:rgb(0, 128, 0)">// old</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token operator" style="color:rgb(0, 0, 0)">+</span><span class="token plain"> from_tbl</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">clone</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain">             </span><span class="token comment" style="color:rgb(0, 128, 0)">// new</span><br></span></code></pre></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="potential-compile-errors-1">Potential compile errors<a href="https://www.sea-ql.org/blog/2025-08-30-sea-query-1.0/#potential-compile-errors-1" class="hash-link" aria-label="Direct link to Potential compile errors" title="Direct link to Potential compile errors">​</a></h4>
<p>The method signature of <code>Iden::unquoted</code> is changed. If you're implementing <code>Iden</code> manually, you can modify it like below:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">error</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token constant" style="color:rgb(129, 31, 63)">E0050</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> method `unquoted` has </span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token plain"> parameters but the declaration </span><span class="token keyword" style="color:rgb(0, 0, 255)">in</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">trait</span><span class="token plain"> `</span><span class="token namespace">types</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Iden</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token plain">unquoted` has </span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> src</span><span class="token operator" style="color:rgb(0, 0, 0)">/</span><span class="token plain">tests_cfg</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">rs</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token number" style="color:rgb(9, 134, 88)">31</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token number" style="color:rgb(9, 134, 88)">17</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">   </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">   </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain">     </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">unquoted</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> s</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">mut</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">dyn</span><span class="token plain"> </span><span class="token namespace">std</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">fmt</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Write</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">   </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain">                 </span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token plain"> expected </span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token plain"> parameter</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> found </span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">   </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> src</span><span class="token operator" style="color:rgb(0, 0, 0)">/</span><span class="token plain">types</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">rs</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token number" style="color:rgb(9, 134, 88)">63</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token number" style="color:rgb(9, 134, 88)">17</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">   </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">   </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain">     </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">unquoted</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">str</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">   </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain">                 </span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">trait</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">requires</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token plain"> parameter</span><br></span></code></pre></div></div>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">impl</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Iden</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Glyph</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">unquoted</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> s</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">mut</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">dyn</span><span class="token plain"> </span><span class="token namespace">fmt</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Write</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token operator" style="color:rgb(0, 0, 0)">+</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">unquoted</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">str</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token plain">     </span><span class="token macro property">write!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token plain">         s</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token plain">         </span><span class="token string" style="color:rgb(163, 21, 21)">"{}"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token keyword" style="color:rgb(0, 0, 255)">match</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                </span><span class="token keyword" style="color:rgb(0, 0, 255)">Self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=&gt;</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"glyph"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                </span><span class="token keyword" style="color:rgb(0, 0, 255)">Self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=&gt;</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"id"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                </span><span class="token keyword" style="color:rgb(0, 0, 255)">Self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Tokens</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=&gt;</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"tokens"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token plain">     </span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token plain">     </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unwrap</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="aliasnew-is-no-longer-needed"><code>Alias::new</code> is no longer needed<a href="https://www.sea-ql.org/blog/2025-08-30-sea-query-1.0/#aliasnew-is-no-longer-needed" class="hash-link" aria-label="Direct link to aliasnew-is-no-longer-needed" title="Direct link to aliasnew-is-no-longer-needed">​</a></h3>
<p><a href="https://github.com/SeaQL/sea-query/pull/882" target="_blank" rel="noopener noreferrer">#882</a>
SeaQuery encourages you to define all column / table identifiers in one place and use them throughout the project. But there are places where an alias is needed once off. Now <code>&amp;'static str</code> is an <code>Iden</code>, so it can be used in all places where <code>Alias</code> are needed. The <code>Alias</code> type remains for backwards compatibility, so existing code should still compile. This can reduce the verbosity of code, for example:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> query </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">select</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">from</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Character</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">expr_as</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Func</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">count</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Expr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Character</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Alias</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"count"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token operator" style="color:rgb(0, 0, 0)">+</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">expr_as</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Func</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">count</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Expr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Character</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"count"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_owned</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Alias</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token macro property">format!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"r{i}"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into_iden</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token operator" style="color:rgb(0, 0, 0)">+</span><span class="token plain"> </span><span class="token macro property">format!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"r{i}"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into_iden</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="unboxed-value-variants">Unboxed <code>Value</code> variants<a href="https://www.sea-ql.org/blog/2025-08-30-sea-query-1.0/#unboxed-value-variants" class="hash-link" aria-label="Direct link to unboxed-value-variants" title="Direct link to unboxed-value-variants">​</a></h3>
<p><a href="https://github.com/SeaQL/sea-query/pull/925" target="_blank" rel="noopener noreferrer">#925</a>
Most <code>Value</code> variants are now unboxed (except <code>BigDecimal</code> and <code>Array</code>). Previously the size is 24 bytes, now it's 32.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">std</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">mem</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">size_of</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Value</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>If you were constructing / pattern matching <code>Value</code> variants manually, <code>Box::new</code> can now be removed and pattern matching is simpler.</p>
<p>It also improved performance because memory allocation and indirection is removed in most cases.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="potential-compile-errors-2">Potential compile errors<a href="https://www.sea-ql.org/blog/2025-08-30-sea-query-1.0/#potential-compile-errors-2" class="hash-link" aria-label="Direct link to Potential compile errors" title="Direct link to Potential compile errors">​</a></h4>
<p>If you encounter the following error, simply remove the <code>Box</code></p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">error</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token constant" style="color:rgb(129, 31, 63)">E0308</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> mismatched types</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain">  </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Value</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Some</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Box</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">string_value</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain">               </span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token plain"> expected `</span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token plain">`</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> found `</span><span class="token class-name" style="color:rgb(38, 127, 153)">Box</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain">`</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain">               </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain">               arguments to this </span><span class="token keyword" style="color:rgb(0, 0, 255)">enum</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">variant</span><span class="token plain"> are incorrect</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="non_exhaustive-ast-node-enums"><code>non_exhaustive</code> AST node enums<a href="https://www.sea-ql.org/blog/2025-08-30-sea-query-1.0/#non_exhaustive-ast-node-enums" class="hash-link" aria-label="Direct link to non_exhaustive-ast-node-enums" title="Direct link to non_exhaustive-ast-node-enums">​</a></h3>
<p><a href="https://github.com/SeaQL/sea-query/pull/891" target="_blank" rel="noopener noreferrer">#891</a>
<code>#[non_exhaustive]</code> are added to all AST node enums. It allows us to add new features and extend the AST without breaking the API.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token operator" style="color:rgb(0, 0, 0)">+</span><span class="token plain"> </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[non_exhaustive]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">enum</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Mode</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Creation</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Alter</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">TableAlter</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="potential-compile-errors-3">Potential compile errors<a href="https://www.sea-ql.org/blog/2025-08-30-sea-query-1.0/#potential-compile-errors-3" class="hash-link" aria-label="Direct link to Potential compile errors" title="Direct link to Potential compile errors">​</a></h4>
<p>If you encounter the following error, please add a wildcard match <code>_ =&gt; {..}</code></p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">error</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token constant" style="color:rgb(129, 31, 63)">E0004</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> non</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token plain">exhaustive patterns</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> `</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">_` not covered</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain">     </span><span class="token keyword" style="color:rgb(0, 0, 255)">match</span><span class="token plain"> table_ref </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain">           </span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token plain"> pattern `</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">_` not covered</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">note</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> `</span><span class="token class-name" style="color:rgb(38, 127, 153)">TableRef</span><span class="token plain">` defined here</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">enum</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">TableRef</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> note</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> the matched value is of </span><span class="token keyword" style="color:rgb(0, 0, 255)">type</span><span class="token plain"> `</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token class-name" style="color:rgb(38, 127, 153)">TableRef</span><span class="token plain">`</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> note</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> `</span><span class="token class-name" style="color:rgb(38, 127, 153)">TableRef</span><span class="token plain">` is marked </span><span class="token keyword" style="color:rgb(0, 0, 255)">as</span><span class="token plain"> non</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token plain">exhaustive</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> so a wildcard `_` is necessary to </span><span class="token keyword" style="color:rgb(0, 0, 255)">match</span><span class="token plain"> exhaustively</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">help</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> ensure that all possible cases are being handled by adding a </span><span class="token keyword" style="color:rgb(0, 0, 255)">match</span><span class="token plain"> arm with a wildcard pattern or an explicit pattern </span><span class="token keyword" style="color:rgb(0, 0, 255)">as</span><span class="token plain"> shown</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">TableRef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">FunctionCall</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">_</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> tbl</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SeaRc</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">clone</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">tbl</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">_ </span><span class="token operator" style="color:rgb(0, 0, 0)">=&gt;</span><span class="token plain"> </span><span class="token macro property">todo!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="reworked-tableref-and-columnref">Reworked <code>TableRef</code> and <code>ColumnRef</code><a href="https://www.sea-ql.org/blog/2025-08-30-sea-query-1.0/#reworked-tableref-and-columnref" class="hash-link" aria-label="Direct link to reworked-tableref-and-columnref" title="Direct link to reworked-tableref-and-columnref">​</a></h3>
<p><a href="https://github.com/SeaQL/sea-query/pull/927" target="_blank" rel="noopener noreferrer">#927</a>
Previously, the <code>TableRef</code> variants are a product of all valid combinations of <code>Option&lt;Database&gt;</code>, <code>Option&lt;Schema&gt;</code>, <code>Table</code> and <code>Option&lt;Alias&gt;</code>. It is excessive and makes pattern matching difficult.</p>
<p>Now they're collapsed into one. It makes constructing and pattern-matching <code>TableRef</code> / <code>ColumnRef</code> much easier.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)">// the following variants are collapsed into one:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">enum</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">TableRef</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">DynIden</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">SchemaTable</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">DynIden</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DynIden</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">DatabaseSchemaTable</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">DynIden</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DynIden</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DynIden</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">TableAlias</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">DynIden</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DynIden</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">SchemaTableAlias</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">DynIden</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DynIden</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DynIden</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">DatabaseSchemaTableAlias</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">DynIden</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DynIden</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DynIden</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DynIden</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// now it's just:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">enum</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">TableRef</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">TableName</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Option</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">DynIden</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// optional Alias</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">DatabaseName</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DynIden</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">SchemaName</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Option</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">DatabaseName</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DynIden</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">/// A table name, potentially qualified as [database.][schema.]table</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">TableName</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Option</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">SchemaName</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DynIden</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>Similarly for <code>ColumnRef</code>:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)">// before</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">enum</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">ColumnRef</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">DynIden</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">TableColumn</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">DynIden</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DynIden</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">SchemaTableColumn</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">DynIden</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DynIden</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DynIden</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Asterisk</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">TableAsterisk</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">DynIden</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// now</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">enum</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">ColumnRef</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">/// A column name, potentially qualified as [database.][schema.][table.]column</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnName</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">/// An `*` expression, potentially qualified as [database.][schema.][table.]*</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Asterisk</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Option</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">TableName</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">ColumnName</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Option</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">TableName</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DynIden</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="potential-compile-errors-4">Potential compile errors<a href="https://www.sea-ql.org/blog/2025-08-30-sea-query-1.0/#potential-compile-errors-4" class="hash-link" aria-label="Direct link to Potential compile errors" title="Direct link to Potential compile errors">​</a></h4>
<p><code>TableRef</code></p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">error</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token constant" style="color:rgb(129, 31, 63)">E0061</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> this </span><span class="token keyword" style="color:rgb(0, 0, 255)">enum</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">variant</span><span class="token plain"> takes </span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token plain"> arguments but </span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token plain"> argument was supplied</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">   </span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> src</span><span class="token operator" style="color:rgb(0, 0, 0)">/</span><span class="token plain">entity</span><span class="token operator" style="color:rgb(0, 0, 0)">/</span><span class="token plain">relation</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">rs</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token number" style="color:rgb(9, 134, 88)">526</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token number" style="color:rgb(9, 134, 88)">15</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain">  </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain">     from_tbl</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">TableRef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"foo"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into_iden</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token closure-params closure-punctuation punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token closure-params">               </span><span class="token closure-params operator" style="color:rgb(0, 0, 0)">^</span><span class="token closure-params operator" style="color:rgb(0, 0, 0)">^</span><span class="token closure-params operator" style="color:rgb(0, 0, 0)">^</span><span class="token closure-params operator" style="color:rgb(0, 0, 0)">^</span><span class="token closure-params operator" style="color:rgb(0, 0, 0)">^</span><span class="token closure-params operator" style="color:rgb(0, 0, 0)">^</span><span class="token closure-params operator" style="color:rgb(0, 0, 0)">^</span><span class="token closure-params operator" style="color:rgb(0, 0, 0)">^</span><span class="token closure-params operator" style="color:rgb(0, 0, 0)">^</span><span class="token closure-params operator" style="color:rgb(0, 0, 0)">^</span><span class="token closure-params operator" style="color:rgb(0, 0, 0)">^</span><span class="token closure-params operator" style="color:rgb(0, 0, 0)">^</span><span class="token closure-params operator" style="color:rgb(0, 0, 0)">^</span><span class="token closure-params operator" style="color:rgb(0, 0, 0)">^</span><span class="token closure-params operator" style="color:rgb(0, 0, 0)">^</span><span class="token closure-params operator" style="color:rgb(0, 0, 0)">-</span><span class="token closure-params operator" style="color:rgb(0, 0, 0)">-</span><span class="token closure-params operator" style="color:rgb(0, 0, 0)">-</span><span class="token closure-params operator" style="color:rgb(0, 0, 0)">-</span><span class="token closure-params operator" style="color:rgb(0, 0, 0)">-</span><span class="token closure-params operator" style="color:rgb(0, 0, 0)">-</span><span class="token closure-params operator" style="color:rgb(0, 0, 0)">-</span><span class="token closure-params operator" style="color:rgb(0, 0, 0)">-</span><span class="token closure-params operator" style="color:rgb(0, 0, 0)">-</span><span class="token closure-params operator" style="color:rgb(0, 0, 0)">-</span><span class="token closure-params operator" style="color:rgb(0, 0, 0)">-</span><span class="token closure-params operator" style="color:rgb(0, 0, 0)">-</span><span class="token closure-params operator" style="color:rgb(0, 0, 0)">-</span><span class="token closure-params operator" style="color:rgb(0, 0, 0)">-</span><span class="token closure-params operator" style="color:rgb(0, 0, 0)">-</span><span class="token closure-params operator" style="color:rgb(0, 0, 0)">-</span><span class="token closure-params operator" style="color:rgb(0, 0, 0)">-</span><span class="token closure-params operator" style="color:rgb(0, 0, 0)">-</span><span class="token closure-params operator" style="color:rgb(0, 0, 0)">-</span><span class="token closure-params"></span><br></span><span class="token-line" style="color:#000000"><span class="token closure-params">    </span><span class="token closure-params closure-punctuation punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token plain">                              </span><span class="token operator" style="color:rgb(0, 0, 0)">||</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain">                              </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain">expected `</span><span class="token class-name" style="color:rgb(38, 127, 153)">TableName</span><span class="token plain">`</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> found `</span><span class="token class-name" style="color:rgb(38, 127, 153)">DynIden</span><span class="token plain">`</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain">                              argument #</span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token plain"> of </span><span class="token keyword" style="color:rgb(0, 0, 255)">type</span><span class="token plain"> `</span><span class="token class-name" style="color:rgb(38, 127, 153)">Option</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">DynIden</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain">` is missing</span><br></span></code></pre></div></div>
<p>It's recommended to use the <code>IntoTableRef</code> trait to convert types instead of constructing AST manually.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">use</span><span class="token plain"> </span><span class="token namespace">sea_orm</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">sea_query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">IntoTableRef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">from_tbl</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"foo"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into_table_ref</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><br></span></code></pre></div></div>
<p><code>ColumnRef</code></p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">error</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token constant" style="color:rgb(129, 31, 63)">E0277</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> the </span><span class="token keyword" style="color:rgb(0, 0, 255)">trait</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">bound</span><span class="token plain"> `</span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">std</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">option</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Option</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">TableName</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token namespace">sea_query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnRef</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token namespace">sea_query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnRef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Asterisk</span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">IntoColumnRef</span><span class="token plain">` is not satisfied</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> src</span><span class="token operator" style="color:rgb(0, 0, 0)">/</span><span class="token plain">executor</span><span class="token operator" style="color:rgb(0, 0, 0)">/</span><span class="token plain">query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">rs</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token number" style="color:rgb(9, 134, 88)">1599</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token number" style="color:rgb(9, 134, 88)">21</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain">  </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain">             </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnRef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Asterisk</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain">              </span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token plain"> the </span><span class="token keyword" style="color:rgb(0, 0, 255)">trait</span><span class="token plain"> `</span><span class="token namespace">sea_query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Iden</span><span class="token plain">` is not implemented </span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">item</span><span class="token plain"> `</span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">std</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">option</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Option</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">TableName</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token namespace">sea_query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnRef</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token namespace">sea_query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnRef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Asterisk</span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain">`</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain">              </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain">              required by a bound introduced by this call</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">error</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token constant" style="color:rgb(129, 31, 63)">E0308</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> mismatched types</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> src</span><span class="token operator" style="color:rgb(0, 0, 0)">/</span><span class="token plain">executor</span><span class="token operator" style="color:rgb(0, 0, 0)">/</span><span class="token plain">query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">rs</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token number" style="color:rgb(9, 134, 88)">1607</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token number" style="color:rgb(9, 134, 88)">54</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain">  </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain">                 </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnRef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"id"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into_iden</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain">                                    </span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token operator" style="color:rgb(0, 0, 0)">^</span><span class="token plain"> expected `</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnName</span><span class="token plain">`</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> found `</span><span class="token class-name" style="color:rgb(38, 127, 153)">DynIden</span><span class="token plain">`</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain">                                    </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">|</span><span class="token plain">                                    arguments to this </span><span class="token keyword" style="color:rgb(0, 0, 255)">enum</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">variant</span><span class="token plain"> are incorrect</span><br></span></code></pre></div></div>
<p>In the former case <code>Asterisk</code> has an additional inner <code>Option&lt;TableName&gt;</code>, you can simply put <code>None</code>.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnRef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Asterisk</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">None</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><br></span></code></pre></div></div>
<p>In the latter case, <code>&amp;'static str</code> can now be used in most methods that accepts <code>ColumnRef</code>.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token class-name" style="color:rgb(38, 127, 153)">Expr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"id"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="new-features">New Features<a href="https://www.sea-ql.org/blog/2025-08-30-sea-query-1.0/#new-features" class="hash-link" aria-label="Direct link to New Features" title="Direct link to New Features">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="query-audit">Query Audit<a href="https://www.sea-ql.org/blog/2025-08-30-sea-query-1.0/#query-audit" class="hash-link" aria-label="Direct link to Query Audit" title="Direct link to Query Audit">​</a></h3>
<p><a href="https://github.com/SeaQL/sea-query/pull/908" target="_blank" rel="noopener noreferrer">#908</a>
In order to support Role Based Access Control (RBAC) in SeaORM, a given SQL query has to be analyzed to determine what permissions are needed to act on which resources.</p>
<p>It supports all the query types: <code>SELECT</code>, <code>INSERT</code>, <code>UPDATE</code>, <code>DELETE</code> and CTE. This requires the <code>audit</code> feature flag.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> query </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">select</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">columns</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token class-name" style="color:rgb(38, 127, 153)">Char</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Character</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">from</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Char</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">left_join</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Font</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Expr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Char</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Char</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">FontId</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">equals</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Font</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Font</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">inner_join</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Glyph</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Expr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Char</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Char</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Character</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">equals</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Glyph</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Glyph</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Image</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">take</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">PostgresQueryBuilder</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">r#"SELECT "character"</span><br></span><span class="token-line" style="color:#000000"><span class="token string" style="color:rgb(163, 21, 21)">    FROM "character"</span><br></span><span class="token-line" style="color:#000000"><span class="token string" style="color:rgb(163, 21, 21)">    LEFT JOIN "font" ON "character"."font_id" = "font"."id"</span><br></span><span class="token-line" style="color:#000000"><span class="token string" style="color:rgb(163, 21, 21)">    INNER JOIN "glyph" ON "character"."character" = "glyph"."image""#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">audit</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">selected_tables</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Char</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into_iden</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Font</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into_iden</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Glyph</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into_iden</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ergonomic-raw-sql">Ergonomic raw SQL<a href="https://www.sea-ql.org/blog/2025-08-30-sea-query-1.0/#ergonomic-raw-sql" class="hash-link" aria-label="Direct link to Ergonomic raw SQL" title="Direct link to Ergonomic raw SQL">​</a></h3>
<p><a href="https://github.com/SeaQL/sea-query/pull/952" target="_blank" rel="noopener noreferrer">#952</a>
This is already covered in a previous <a href="https://www.sea-ql.org/blog/2025-08-15-sea-query-raw-sql/" target="_blank" rel="noopener noreferrer">blog post</a>.
In case you've missed it, we've created a new <code>raw_query!</code> macro with neat features to make writing raw SQL queries more ergononmic.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> a </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">B</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> b</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> b </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">B</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> b</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> c </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"A"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> d </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token macro property">vec!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token number" style="color:rgb(9, 134, 88)">3</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">4</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">5</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> query </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">sea_query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token macro property">raw_query!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">PostgresQueryBuilder</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">r#"SELECT ("size_w" + {a}) * {b.b} FROM "glyph"</span><br></span><span class="token-line" style="color:#000000"><span class="token string" style="color:rgb(163, 21, 21)">       WHERE "image" LIKE {c} AND "id" IN ({..d})"#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">sql</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">r#"SELECT ("size_w" + $1) * $2 FROM "glyph"</span><br></span><span class="token-line" style="color:#000000"><span class="token string" style="color:rgb(163, 21, 21)">       WHERE "image" LIKE $3 AND "id" IN ($4, $5, $6)"#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">values</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Values</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token macro property">vec!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"A"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">3</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">4</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">5</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>The snippet above demonstrated:</p>
<ol>
<li>named parameter: <code>{a}</code> injected</li>
<li>nested parameter access: <code>{b.b}</code> inner access</li>
<li>array expansion: <code>{..d}</code> expanded into three parameters</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="breaking-changes">Breaking Changes<a href="https://www.sea-ql.org/blog/2025-08-30-sea-query-1.0/#breaking-changes" class="hash-link" aria-label="Direct link to Breaking Changes" title="Direct link to Breaking Changes">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="replaced-serial-with-generated-by-default-as-identity-postgres">Replaced <code>SERIAL</code> with <code>GENERATED BY DEFAULT AS IDENTITY</code> (Postgres)<a href="https://www.sea-ql.org/blog/2025-08-30-sea-query-1.0/#replaced-serial-with-generated-by-default-as-identity-postgres" class="hash-link" aria-label="Direct link to replaced-serial-with-generated-by-default-as-identity-postgres" title="Direct link to replaced-serial-with-generated-by-default-as-identity-postgres">​</a></h3>
<p><a href="https://github.com/SeaQL/sea-query/pull/918" target="_blank" rel="noopener noreferrer">#918</a>
<code>SERIAL</code> is deprecated in Postgres because identity column (<code>GENERATED AS IDENTITY</code>) is more modern and, for example, can avoid sequence number quirks.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> table </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">create</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Char</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Char</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">integer</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">not_null</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">auto_increment</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">primary_key</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_owned</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">PostgresQueryBuilder</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token string" style="color:rgb(163, 21, 21)">r#"CREATE TABLE "character" ("#</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token string" style="color:rgb(163, 21, 21)">r#""id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,"#</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token string" style="color:rgb(163, 21, 21)">r#")"#</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">join</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">" "</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>If you need to support legacy systems you can still do:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> table </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">create</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Char</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Char</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">custom</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"serial"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">not_null</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">primary_key</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_owned</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">PostgresQueryBuilder</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token string" style="color:rgb(163, 21, 21)">r#"CREATE TABLE "character" ("#</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token string" style="color:rgb(163, 21, 21)">r#""id" serial NOT NULL PRIMARY KEY"#</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token string" style="color:rgb(163, 21, 21)">r#")"#</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">join</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">" "</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="changed-intoxxx-traits-into-intoxxx">Changed <code>IntoXXX</code> traits into <code>Into&lt;XXX&gt;</code><a href="https://www.sea-ql.org/blog/2025-08-30-sea-query-1.0/#changed-intoxxx-traits-into-intoxxx" class="hash-link" aria-label="Direct link to changed-intoxxx-traits-into-intoxxx" title="Direct link to changed-intoxxx-traits-into-intoxxx">​</a></h3>
<p>Changed <code>IntoCondition</code> (etc) traits to be defined as <code>trait IntoCondition: Into&lt;Condition&gt;</code>.
A blanket impl is added.
Now <code>IntoCondition</code> and <code>Into&lt;Condition&gt;</code> are completely interchangable, but you can still use <code>.into_condition()</code> for readability.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)">// before</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">trait</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">IntoCondition</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">into_condition</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Condition</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// now</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">trait</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">IntoCondition</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Into</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Condition</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">into_condition</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Condition</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">impl</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">T</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">IntoCondition</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">T</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">where</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">T</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Into</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Condition</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>If you have manually implemented <code>Into*</code> traits, it may cause conflicts. You
should rewrite your impls as as <code>impl From&lt;..&gt; for TableRef</code>.</p>
<p>Full list of changed traits:</p>
<ul>
<li><code>IntoColumnDef</code> <a href="https://github.com/SeaQL/sea-query/pull/975" target="_blank" rel="noopener noreferrer">#975</a></li>
<li><code>IntoColumnRef</code> <a href="https://github.com/SeaQL/sea-query/pull/959" target="_blank" rel="noopener noreferrer">#959</a></li>
<li><code>IntoCondition</code> <a href="https://github.com/SeaQL/sea-query/pull/939" target="_blank" rel="noopener noreferrer">#939</a></li>
<li><code>IntoIden</code> <a href="https://github.com/SeaQL/sea-query/pull/973" target="_blank" rel="noopener noreferrer">#973</a></li>
<li><code>IntoIndexColumn</code> <a href="https://github.com/SeaQL/sea-query/pull/976" target="_blank" rel="noopener noreferrer">#976</a></li>
<li><code>IntoLikeExpr</code> <a href="https://github.com/SeaQL/sea-query/pull/974" target="_blank" rel="noopener noreferrer">#974</a></li>
<li><code>IntoTableRef</code> <a href="https://github.com/SeaQL/sea-query/pull/958" target="_blank" rel="noopener noreferrer">#958</a></li>
<li><code>IntoTypeRef</code> <a href="https://github.com/SeaQL/sea-query/pull/969" target="_blank" rel="noopener noreferrer">#969</a></li>
<li><code>IntoValueTuple</code> <a href="https://github.com/SeaQL/sea-query/pull/960" target="_blank" rel="noopener noreferrer">#960</a></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="performance-improvements">Performance Improvements<a href="https://www.sea-ql.org/blog/2025-08-30-sea-query-1.0/#performance-improvements" class="hash-link" aria-label="Direct link to Performance Improvements" title="Direct link to Performance Improvements">​</a></h2>
<p>We benchmarked the query-building process - and found out that the bulk of the overhead came from serializing queries into strings, not from the AST building. By optimizing the string handling part of the serialization process, we improved the query-building performance by up to 15%!</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="replaced-write-with-write_str">Replaced <code>write!</code> with <code>write_str</code><a href="https://www.sea-ql.org/blog/2025-08-30-sea-query-1.0/#replaced-write-with-write_str" class="hash-link" aria-label="Direct link to replaced-write-with-write_str" title="Direct link to replaced-write-with-write_str">​</a></h3>
<p><a href="https://github.com/SeaQL/sea-query/pull/947" target="_blank" rel="noopener noreferrer">#947</a>
This simple but not-so-obvious change by far contributed the biggest gain.</p>
<p>We won't go into the details here, as there are two tracking issues in rust-lang:</p>
<ul>
<li>format_args! is slow <a href="https://github.com/rust-lang/rust/issues/76490" target="_blank" rel="noopener noreferrer">rust/#76490</a></li>
<li>Tracking issue for improving std::fmt::Arguments and format_args!() <a href="https://github.com/rust-lang/rust/issues/99012" target="_blank" rel="noopener noreferrer">rust/#99012</a></li>
</ul>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)">// before</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">write!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    sql</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">"CONSTRAINT {}{}{} "</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">quote</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">left</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">quote</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">right</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// now</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">sql</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">write_str</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"CONSTRAINT "</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">sql</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">write_char</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">quote</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">left</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">sql</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">write_str</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">sql</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">write_char</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">quote</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">right</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">sql</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">write_str</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">" "</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="refactored-writer-to-avoid-string-allocation">Refactored Writer to avoid string allocation<a href="https://www.sea-ql.org/blog/2025-08-30-sea-query-1.0/#refactored-writer-to-avoid-string-allocation" class="hash-link" aria-label="Direct link to Refactored Writer to avoid string allocation" title="Direct link to Refactored Writer to avoid string allocation">​</a></h3>
<p><a href="https://github.com/SeaQL/sea-query/pull/945" target="_blank" rel="noopener noreferrer">#945</a>
Less strings is better!</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)">// before: an intermediate string is allocated</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> value</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">value_to_string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">value</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">write!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">sql</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"{value}"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// now: write to the buffer directly</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">write_value</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">sql</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> value</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">write_value</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> sql</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">mut</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">dyn</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Write</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> value</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Value</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="refactored-tokenizer-to-avoid-string-allocation">Refactored Tokenizer to avoid string allocation<a href="https://www.sea-ql.org/blog/2025-08-30-sea-query-1.0/#refactored-tokenizer-to-avoid-string-allocation" class="hash-link" aria-label="Direct link to Refactored Tokenizer to avoid string allocation" title="Direct link to Refactored Tokenizer to avoid string allocation">​</a></h3>
<p><a href="https://github.com/SeaQL/sea-query/pull/952" target="_blank" rel="noopener noreferrer">#952</a> Note that the tokenizer is not part of the runtime query-building code path, but still worth mentioning.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)">// before</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">enum</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Token</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Quoted</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Unquoted</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Space</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Punctuation</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// now</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">enum</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Token</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token lifetime-annotation symbol">'a</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Quoted</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token lifetime-annotation symbol">'a</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">str</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Unquoted</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token lifetime-annotation symbol">'a</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">str</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Space</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token lifetime-annotation symbol">'a</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">str</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Punctuation</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token lifetime-annotation symbol">'a</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">str</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="release-plan">Release Plan<a href="https://www.sea-ql.org/blog/2025-08-30-sea-query-1.0/#release-plan" class="hash-link" aria-label="Direct link to Release Plan" title="Direct link to Release Plan">​</a></h2>
<p><a href="https://github.com/SeaQL/sea-query/blob/master/CHANGELOG.md#100---pending" target="_blank" rel="noopener noreferrer">SeaQuery 1.0</a> is currently an <code>rc</code> release, and we plan to finalize it soon - meaning no more major breaking changes. If you feel adventurous or want to use some of the latest features, you can upgrade today. Please let us know the problems you faced, this will help us and the community. If you have ideas / feedback please <a href="https://github.com/SeaQL/sea-query/discussions/795" target="_blank" rel="noopener noreferrer">join the discussion</a> on GitHub!</p>
<p>As SeaORM is based on top of SeaQuery, the breaking changes above would impact SeaORM users as well. We tried to minimize the impact to SeaORM users that use SeaQuery lightly and most migrations can be done mechanically.</p>
<p>After SeaQuery 1.0, it will be the most exciting release - SeaORM 2.0!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="our-new-team">Our New Team<a href="https://www.sea-ql.org/blog/2025-08-30-sea-query-1.0/#our-new-team" class="hash-link" aria-label="Direct link to Our New Team" title="Direct link to Our New Team">​</a></h2>
<p>SeaQuery 1.0 wouldn't have happened without two contributors who joined us recently - <a href="https://github.com/Expurple" target="_blank" rel="noopener noreferrer">Dmitrii Aleksandrov</a> and <a href="https://github.com/Huliiiiii" target="_blank" rel="noopener noreferrer">Huliiiiii</a>. They've made huge contributions that helped define this release, and we're super grateful for the effort and care they've poured into the project.</p>
<br>
<div class="row"><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--m" href="https://github.com/tyt2y3"><img src="https://avatars.githubusercontent.com/u/1782664?v=4"></a><div class="avatar__intro"><div class="avatar__name">Chris Tsang</div><small class="avatar__subtitle">Maintainer</small></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--m" href="https://github.com/Expurple"><img src="https://avatars.githubusercontent.com/u/56318093?v=4"></a><div class="avatar__intro"><div class="avatar__name">Dmitrii Aleksandrov</div><small class="avatar__subtitle">Maintainer</small></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--m" href="https://github.com/Huliiiiii"><img src="https://avatars.githubusercontent.com/u/134658521?v=4"></a><div class="avatar__intro"><div class="avatar__name">Huliiiiii</div><small class="avatar__subtitle">Contributor</small></div></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="sponsors">Sponsors<a href="https://www.sea-ql.org/blog/2025-08-30-sea-query-1.0/#sponsors" class="hash-link" aria-label="Direct link to Sponsors" title="Direct link to Sponsors">​</a></h2>
<p>If you feel generous, a small donation will be greatly appreciated, and goes a long way towards sustaining the organization.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="gold-sponsor">Gold Sponsor<a href="https://www.sea-ql.org/blog/2025-08-30-sea-query-1.0/#gold-sponsor" class="hash-link" aria-label="Direct link to Gold Sponsor" title="Direct link to Gold Sponsor">​</a></h4>
<a href="https://qdx.co/"><img src="https://www.sea-ql.org/static/sponsors/QDX.svg" width="128"></a>
<p><a href="https://qdx.co/" target="_blank" rel="noopener noreferrer">QDX</a> pioneers quantum dynamics–powered drug discovery, leveraging AI and supercomputing to accelerate molecular modeling.
We're grateful to QDX for sponsoring the development of SeaORM, the SQL toolkit that powers their data intensive applications.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="github-sponsors">GitHub Sponsors<a href="https://www.sea-ql.org/blog/2025-08-30-sea-query-1.0/#github-sponsors" class="hash-link" aria-label="Direct link to GitHub Sponsors" title="Direct link to GitHub Sponsors">​</a></h4>
<p>A big shout out to our <a href="https://github.com/sponsors/SeaQL" target="_blank" rel="noopener noreferrer">GitHub sponsors</a> 😇:</p>
<div class="row"><div class="col col--12 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--lg" href="https://github.com/subscribepro"><img src="https://avatars.githubusercontent.com/u/8466133?v=4"></a><div class="avatar__intro"><div class="avatar__name">Subscribe Pro</div></div></div></div></div>
<br>
<div class="row"><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/holly-hacker"><img src="https://avatars.githubusercontent.com/u/13605369?u=9566a44f2d869f337a4909836487bb4a29c23b72&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">Variant9</div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/vealth42"><img src="https://avatars.githubusercontent.com/u/184287790?u=d63fb7492a558799c21667a0ec1461b4d5e0f94c&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">vealth</div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/AurLemon"><img src="https://avatars.githubusercontent.com/u/67463076?v=4"></a><div class="avatar__intro"><div class="avatar__name">AurLemon</div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/ryanswrt"><img src="https://avatars.githubusercontent.com/u/87781?u=10a9d256e741f905f3dd2cf641de8b325720732e&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">Ryan Swart</div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/OteroRafael"><img src="https://avatars.githubusercontent.com/u/175388115?v=4"></a><div class="avatar__intro"><div class="avatar__name">OteroRafael</div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/higumachan"><img src="https://avatars.githubusercontent.com/u/1011298?u=de4c2f0d0929c2c6dc433981912f794d0e50f2cd&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">Yuta Hinokuma</div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/wh7f"><img src="https://avatars.githubusercontent.com/u/59872041?v=4"></a><div class="avatar__intro"><div class="avatar__name">wh7f</div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/marcson909"><img src="https://avatars.githubusercontent.com/u/16665353?v=4"></a><div class="avatar__intro"><div class="avatar__name">MS</div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/numeusxyz"><img src="https://avatars.githubusercontent.com/u/82152211?v=4"></a><div class="avatar__intro"><div class="avatar__name">Numeus</div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/data-intuitive"><img src="https://avatars.githubusercontent.com/u/15045722?v=4"></a><div class="avatar__intro"><div class="avatar__name">Data Intuitive</div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/caido-community"><img src="https://avatars.githubusercontent.com/u/168573261?v=4"></a><div class="avatar__intro"><div class="avatar__name">Caido Community</div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--md" href="https://github.com/marcusbuffett"><img src="https://avatars.githubusercontent.com/u/1834328?u=fd066d99cf4a6333bfb3927d1c756af4bb8baf7e&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">Marcus Buffett</div></div></div></div></div>
<br>
<div class="row"><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/yuly3"><img src="https://avatars.githubusercontent.com/u/25814001?u=4b57756e7d8060e48262a9edba687927fe7934a6&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">MasakiMiyazaki</div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/kallydev"><img src="https://avatars.githubusercontent.com/u/36319157?u=5be882aa4dbe7eea97b1a80a6473857369146df6&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">KallyDev</div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/manfredcml"><img src="https://avatars.githubusercontent.com/u/27536502?u=b71636bdabbc698458b32e2ac05c5771ad41097e&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">Manfred Lee</div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/tugascript"><img src="https://avatars.githubusercontent.com/u/64930104?u=ad9f63e8e221dbe71bf23de59e3611c99cda1181&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">Afonso Barracha</div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/deansheather"><img src="https://avatars.githubusercontent.com/u/11241812?u=260538c7d8b8c3c5350dba175ebb8294358441e0&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name">Dean Sheather</div></div></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="rustacean-sticker-pack-">Rustacean Sticker Pack 🦀<a href="https://www.sea-ql.org/blog/2025-08-30-sea-query-1.0/#rustacean-sticker-pack-" class="hash-link" aria-label="Direct link to Rustacean Sticker Pack 🦀" title="Direct link to Rustacean Sticker Pack 🦀">​</a></h2>
<p>The Rustacean Sticker Pack is the perfect way to express your passion for Rust.
Our stickers are made with a premium water-resistant vinyl with a unique matte finish.
Stick them on your laptop, notebook, or any gadget to show off your love for Rust!</p>
<p>Moreover, all proceeds contributes directly to the ongoing development of SeaQL projects.</p>
<p>Sticker Pack Contents:</p>
<ul>
<li>Logo of SeaQL projects: SeaQL, SeaORM, SeaQuery, Seaography, FireDBG</li>
<li>Mascot of SeaQL: Terres the Hermit Crab</li>
<li>Mascot of Rust: Ferris the Crab</li>
<li>The Rustacean word</li>
</ul>
<p><a href="https://www.sea-ql.org/sticker-pack/" target="_blank" rel="noopener noreferrer">Support SeaQL and get a Sticker Pack!</a></p>
<a href="https://www.sea-ql.org/sticker-pack/"><img style="border-radius:25px" alt="Rustacean Sticker Pack by SeaQL" src="https://www.sea-ql.org/static/sticker-pack-1s.jpg"></a>]]></content>
        <author>
            <name>SeaQL Team</name>
            <uri>https://github.com/SeaQL</uri>
        </author>
        <category label="news" term="news"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[SeaQuery just made writing raw SQL more enjoyable]]></title>
        <id>https://www.sea-ql.org/blog/2025-08-15-sea-query-raw-sql/</id>
        <link href="https://www.sea-ql.org/blog/2025-08-15-sea-query-raw-sql/"/>
        <updated>2025-08-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[You enjoy writing raw SQL queries, SeaQuery just made it better!]]></summary>
        <content type="html"><![CDATA[<img alt="SeaQuery 1.0 Banner" src="https://www.sea-ql.org/blog/img/SeaQuery%201.0%20Banner.png">
<p>You enjoy writing raw SQL queries, SeaQuery just made it better!</p>
<p>We've created a new <code>raw_query!</code> macro with neat features to make writing raw SQL queries more ergononmic.</p>
<p>The biggest headache when crafting complex queries is parameter binding, whether you use <code>?</code> or <code>$N</code> assigning parameters manually is laborious and error-prone.</p>
<p>SeaQuery's new <a href="https://docs.rs/sea-query/1.0.0-rc.9/sea_query/index.html#4-improved-raw-sql-ergonomics" target="_blank" rel="noopener noreferrer"><code>raw_query!</code></a> macro is designed to solve this exact problem.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="gist">Gist<a href="https://www.sea-ql.org/blog/2025-08-15-sea-query-raw-sql/#gist" class="hash-link" aria-label="Direct link to Gist" title="Direct link to Gist">​</a></h2>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> a </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">B</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> b</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> b </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">B</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> b</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> c </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"A"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> d </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token macro property">vec!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token number" style="color:rgb(9, 134, 88)">3</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">4</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">5</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> query </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">sea_query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token macro property">raw_query!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">PostgresQueryBuilder</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">r#"SELECT ("size_w" + {a}) * {b.b} FROM "glyph"</span><br></span><span class="token-line" style="color:#000000"><span class="token string" style="color:rgb(163, 21, 21)">       WHERE "image" LIKE {c} AND "id" IN ({..d})"#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">sql</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">r#"SELECT ("size_w" + $1) * $2 FROM "glyph"</span><br></span><span class="token-line" style="color:#000000"><span class="token string" style="color:rgb(163, 21, 21)">       WHERE "image" LIKE $3 AND "id" IN ($4, $5, $6)"#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">values</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Values</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token macro property">vec!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"A"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">3</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">4</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">5</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>There are several features packed into the snippet above!</p>
<p>Let's have a quick overview and we'll dive into the details:</p>
<ol>
<li>named parameter: <code>{a}</code> injected</li>
<li>nested parameter access: <code>{b.b}</code> inner access</li>
<li>array expansion: <code>{..d}</code> expanded into three parameters</li>
</ol>
<p>There are two more features that will be showcased later:</p>
<ol start="4">
<li>tuple expansion: <code>{values.0:2}</code></li>
<li>repeating group: <code>{..(values.0),}</code></li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="motivation">Motivation<a href="https://www.sea-ql.org/blog/2025-08-15-sea-query-raw-sql/#motivation" class="hash-link" aria-label="Direct link to Motivation" title="Direct link to Motivation">​</a></h2>
<p>While SeaQuery has long offered a way to build dynamic queries solving basically the same problem, not every one liked SeaQuery's code structure.</p>
<p>I recently came across this <a href="https://github.com/launchbadge/sqlx/issues/875" target="_blank" rel="noopener noreferrer">SQLx issue</a>, and was enticed to solve it.</p>
<p>I am heavily inspired by Rust's <code>format!</code> macro and other languages' template literals for string interpolation, and figured it could probably be achieved in Rust as well!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="challenges">Challenges<a href="https://www.sea-ql.org/blog/2025-08-15-sea-query-raw-sql/#challenges" class="hash-link" aria-label="Direct link to Challenges" title="Direct link to Challenges">​</a></h2>
<p>First, the above cannot be implemented with standard <code>macro_rules</code> because of caller hygiene, such that expanded code cannot access the variables in the surrounding scope. But proc macros do not have this limitation.</p>
<p>Second, if we want to expand an array, the number of elements cannot be known until runtime. So a compile-time approach couldn't work.</p>
<p>Third, we have to support all of Rust's primitive and container types as well as third party data types.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="dive-in">Dive in<a href="https://www.sea-ql.org/blog/2025-08-15-sea-query-raw-sql/#dive-in" class="hash-link" aria-label="Direct link to Dive in" title="Direct link to Dive in">​</a></h2>
<p>Let's take a look at what the above code expands into!</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> a </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">B</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    b</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> b </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">B</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> b</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> c </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"A"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> d </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">_</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">into_vec</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[rustc_box]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">alloc</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">boxed</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Box</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token number" style="color:rgb(9, 134, 88)">3</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">4</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">5</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> query </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">use</span><span class="token plain"> </span><span class="token namespace">sea_query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">raw_sql</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token operator" style="color:rgb(0, 0, 0)">*</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">mut</span><span class="token plain"> builder </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">RawSqlQueryBuilder</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">sea_query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">PostgresQueryBuilder</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    builder</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">push_fragment</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"SELECT (\"size_w\" + "</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">push_parameters</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">push_fragment</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">") * "</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">push_parameters</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">push_fragment</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">" FROM \"glyph\"\n        WHERE \"image\" LIKE "</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">push_parameters</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">push_fragment</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">" AND \"id\" IN ("</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">push_parameters</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">d</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">len</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">push_fragment</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">")"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> sql </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> builder</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">finish</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">mut</span><span class="token plain"> query </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">seaql</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">sql</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    query </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">bind</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">a</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    query </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">bind</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">b</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">b</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    query </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">bind</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">c</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> v </span><span class="token keyword" style="color:rgb(0, 0, 255)">in</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">d</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">iter</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        query </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">bind</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">v</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    query</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>I created <code>RawSqlQueryBuilder</code> that is somewhat similar to SeaQuery's query building backend. It serializes the query string in a single pass.</p>
<p>The derive macro first tokenize and parse the raw SQL to identify the splice points, and then call a special method <code>push_parameters</code> to push a variable number of parameters. This can be numbered, i.e. for Postgres.</p>
<p>After finishing the SQL building part, it then proceeds to bind the parameters. This mechanism is designed around SQLx's query API.</p>
<p>If the variable has a spread <code>..</code> operator, we'd loop over it and bind all items.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="other-ideas">Other ideas<a href="https://www.sea-ql.org/blog/2025-08-15-sea-query-raw-sql/#other-ideas" class="hash-link" aria-label="Direct link to Other ideas" title="Direct link to Other ideas">​</a></h3>
<p>Originally I wanted to implement auto-expansion, meaning if the parameter is a container type, we'd expand it automagically. But there are quite a few special cases - most importantly <code>Vec&lt;u8&gt;</code> is used as bytes and should be bound as a single parameter. Moreover, in Postgres you can use arrays directly, and so we can't decide whether to expand.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="more-goodies">More goodies<a href="https://www.sea-ql.org/blog/2025-08-15-sea-query-raw-sql/#more-goodies" class="hash-link" aria-label="Direct link to More goodies" title="Direct link to More goodies">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="tuple-expansion">Tuple expansion<a href="https://www.sea-ql.org/blog/2025-08-15-sea-query-raw-sql/#tuple-expansion" class="hash-link" aria-label="Direct link to Tuple expansion" title="Direct link to Tuple expansion">​</a></h3>
<p>There are two more features that'll make your life much easier.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> var </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"2"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_owned</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">3</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> query </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">sea_query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token macro property">raw_query!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">PostgresQueryBuilder</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">"SELECT {var.0}, {var.1}, {var.2}"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> new_query </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">sea_query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token macro property">raw_query!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">PostgresQueryBuilder</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">r#"SELECT {var.0:2}"#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> new_query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>We can already support accessing tuple members, why not offer a range operator?</p>
<p>The <code>:</code> token is chosen because it somewhat resembles the Python operator. <code>[0:2]</code> is un-natural because tuple members in Rust can only be accessed by <code>.0</code>. Feel free to offer your thoughts!</p>
<p>It's not possible to automatically expand a tuple like an array because its arity (the number of elements) is not known at the time the macro is expanded. If the tuple consists of elements with a uniform type, it can be made iterable like a vector by implementing the appropriate traits. However, that approach doesn't apply in the case above, where the tuple's structure is not uniform.</p>
<p>You can do inserts with this:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> values </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"2"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">3</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> query </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">sea_query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token macro property">raw_query!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">MysqlQueryBuilder</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">"INSERT INTO `glyph` (`aspect`, `image`, `font_size`) VALUES ({values.0:2})"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">sql</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">"INSERT INTO `glyph` (`aspect`, `image`, `font_size`) VALUES (?, ?, ?)"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">values</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Values</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token macro property">vec!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"2"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">3</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>You may ask, then how do we insert multiple elements? Which brings us to the next feature:</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="repeating-group">Repeating Group<a href="https://www.sea-ql.org/blog/2025-08-15-sea-query-raw-sql/#repeating-group" class="hash-link" aria-label="Direct link to Repeating Group" title="Direct link to Repeating Group">​</a></h2>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> values </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token macro property">vec!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"2"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">3</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">4</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"5"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">6</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> query </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">sea_query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token macro property">raw_query!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">PostgresQueryBuilder</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">r#"INSERT INTO "glyph" ("aspect", "image", "font_size")</span><br></span><span class="token-line" style="color:#000000"><span class="token string" style="color:rgb(163, 21, 21)">       VALUES {..(values.0:2),}"#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">sql</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">r#"INSERT INTO "glyph" ("aspect", "image", "font_size")</span><br></span><span class="token-line" style="color:#000000"><span class="token string" style="color:rgb(163, 21, 21)">       VALUES ($1, $2, $3), ($4, $5, $6)"#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>This syntax almost looks like regex now. Please let me explain:</p>
<p>It's expanded upon the previous example, in which <code>values.0:2</code> means tuple expansion. We want to repeat this tuple as a group, surrounded by parenthesis, so we wrap it with <code>()</code>. Then we apply the same spread operator <code>..</code> to expand the vector of tuples. Finally, the trailing <code>,</code> means they should be connected with <code>,</code>.</p>
<p>This repeating group is not fully-generalized yet, but is quite flexible:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Item</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    a</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    b</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    c</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">u16</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> values </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token macro property">vec!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Item</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> a</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> b</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"2"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_owned</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> c</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">3</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Item</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> a</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">4</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> b</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"5"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_owned</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> c</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">6</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> query </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">sea_query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token macro property">raw_query!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">PostgresQueryBuilder</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">r#"INSERT INTO "glyph" ("aspect", "image", "font_size")</span><br></span><span class="token-line" style="color:#000000"><span class="token string" style="color:rgb(163, 21, 21)">       VALUES {..(values.a, values.b, values.c),}"#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>This is equivalent to the previous example.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="sqlx-integration">SQLx Integration<a href="https://www.sea-ql.org/blog/2025-08-15-sea-query-raw-sql/#sqlx-integration" class="hash-link" aria-label="Direct link to SQLx Integration" title="Direct link to SQLx Integration">​</a></h2>
<p>SeaQuery offers tight SQLx integration. So in practice you can do (requires <code>sqlx-utils</code> feature flag):</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">mut</span><span class="token plain"> sql</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> res </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">sea_query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">sqlx</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">sqlite</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token macro property">query!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    sql </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">r#"INSERT INTO "character"</span><br></span><span class="token-line" style="color:#000000"><span class="token string" style="color:rgb(163, 21, 21)">             ("uuid", "font_size", "character")</span><br></span><span class="token-line" style="color:#000000"><span class="token string" style="color:rgb(163, 21, 21)">             VALUES {..(values.0:2),}"#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">execute</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">pool</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>Note the salient <code>sql</code> variable. SQLx's <code>Query</code> object can only borrow the SQL as <code>&amp;str</code>, and so someone has to own the <code>String</code>. I couldn't think of a better API, suggestions welcome.</p>
<p>It calls the underlying <a href="https://docs.rs/sqlx/latest/sqlx/query/struct.Query.html" target="_blank" rel="noopener noreferrer"><code>Query</code></a>'s bind method directly, so no extra copy is involved. This is the lowest possible overhead!</p>
<p>One final example:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">mut</span><span class="token plain"> character </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Character</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> font_size</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">0</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">character</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">font_size </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">18</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> res </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">sea_query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">sqlx</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">sqlite</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token macro property">query!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    sql </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">r#"UPDATE "character"</span><br></span><span class="token-line" style="color:#000000"><span class="token string" style="color:rgb(163, 21, 21)">             SET "font_size" = {character.font_size}</span><br></span><span class="token-line" style="color:#000000"><span class="token string" style="color:rgb(163, 21, 21)">             WHERE "id" = {character.id}"#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">execute</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">pool</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>Full example can be found <a href="https://github.com/SeaQL/sea-query/blob/master/examples/sqlx_sqlite/src/main.rs" target="_blank" rel="noopener noreferrer">here</a>.</p>
<p>It almost feels like a mini ORM ... although <a href="https://github.com/SeaQL/sea-orm" target="_blank" rel="noopener noreferrer">SeaORM 🐚</a> is still highly recommended by us!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="seaquery-10">SeaQuery 1.0<a href="https://www.sea-ql.org/blog/2025-08-15-sea-query-raw-sql/#seaquery-10" class="hash-link" aria-label="Direct link to SeaQuery 1.0" title="Direct link to SeaQuery 1.0">​</a></h2>
<p>This is just one of many new features we've added while preparing <a href="https://www.sea-ql.org/blog/2025-08-30-sea-query-1.0/" target="_blank" rel="noopener noreferrer">SeaQuery 1.0</a>. This is currently an <code>rc</code> release, but we plan to finalize it soon. If you have ideas please <a href="https://github.com/SeaQL/sea-query/discussions/795" target="_blank" rel="noopener noreferrer">join the discussion</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="rustacean-sticker-pack-">Rustacean Sticker Pack 🦀<a href="https://www.sea-ql.org/blog/2025-08-15-sea-query-raw-sql/#rustacean-sticker-pack-" class="hash-link" aria-label="Direct link to Rustacean Sticker Pack 🦀" title="Direct link to Rustacean Sticker Pack 🦀">​</a></h2>
<p>The Rustacean Sticker Pack is the perfect way to express your passion for Rust.
Our stickers are made with a premium water-resistant vinyl with a unique matte finish.
Stick them on your laptop, notebook, or any gadget to show off your love for Rust!</p>
<p>Moreover, all proceeds contributes directly to the ongoing development of SeaQL projects.</p>
<p>Sticker Pack Contents:</p>
<ul>
<li>Logo of SeaQL projects: SeaQL, SeaORM, SeaQuery, Seaography, FireDBG</li>
<li>Mascot of SeaQL: Terres the Hermit Crab</li>
<li>Mascot of Rust: Ferris the Crab</li>
<li>The Rustacean word</li>
</ul>
<p><a href="https://www.sea-ql.org/sticker-pack/" target="_blank" rel="noopener noreferrer">Support SeaQL and get a Sticker Pack!</a></p>
<a href="https://www.sea-ql.org/sticker-pack/"><img style="border-radius:25px" alt="Rustacean Sticker Pack by SeaQL" src="https://www.sea-ql.org/static/sticker-pack-1s.jpg"></a>]]></content>
        <author>
            <name>SeaQL Team</name>
            <uri>https://github.com/SeaQL</uri>
        </author>
        <category label="news" term="news"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[What's new in SeaORM 1.1.12]]></title>
        <id>https://www.sea-ql.org/blog/2025-06-01-whats-new-in-sea-orm-1.1/</id>
        <link href="https://www.sea-ql.org/blog/2025-06-01-whats-new-in-sea-orm-1.1/"/>
        <updated>2025-06-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This blog post summarizes the new features and enhancements introduced in SeaORM 1.1:]]></summary>
        <content type="html"><![CDATA[<img alt="SeaORM 1.0 Banner" src="https://www.sea-ql.org/blog/img/SeaORM%201.0%20Banner.png">
<p>This blog post summarizes the new features and enhancements introduced in SeaORM <code>1.1</code>:</p>
<ul>
<li>2025-03-30 <a href="https://github.com/SeaQL/sea-orm/releases/tag/1.1.8" target="_blank" rel="noopener noreferrer"><code>1.1.8</code></a></li>
<li>2025-04-14 <a href="https://github.com/SeaQL/sea-orm/releases/tag/1.1.9" target="_blank" rel="noopener noreferrer"><code>1.1.9</code></a></li>
<li>2025-04-14 <a href="https://github.com/SeaQL/sea-orm/releases/tag/1.1.10" target="_blank" rel="noopener noreferrer"><code>1.1.10</code></a></li>
<li>2025-05-07 <a href="https://github.com/SeaQL/sea-orm/releases/tag/1.1.11" target="_blank" rel="noopener noreferrer"><code>1.1.11</code></a></li>
<li>2025-05-27 <a href="https://github.com/SeaQL/sea-orm/releases/tag/1.1.12" target="_blank" rel="noopener noreferrer"><code>1.1.12</code></a></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="new-features">New Features<a href="https://www.sea-ql.org/blog/2025-06-01-whats-new-in-sea-orm-1.1/#new-features" class="hash-link" aria-label="Direct link to New Features" title="Direct link to New Features">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="implement-derivevaluetype-for-enum-strings">Implement <code>DeriveValueType</code> for enum strings<a href="https://www.sea-ql.org/blog/2025-06-01-whats-new-in-sea-orm-1.1/#implement-derivevaluetype-for-enum-strings" class="hash-link" aria-label="Direct link to implement-derivevaluetype-for-enum-strings" title="Direct link to implement-derivevaluetype-for-enum-strings">​</a></h3>
<p><code>DeriveValueType</code> now supports <code>enum</code> types. It offers a simpler alternative to <code>DeriveActiveEnum</code> for client-side enums backed by string database types.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(DeriveValueType)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(value_type = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"String"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">enum</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Tag</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Hard</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Soft</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// `from_str` defaults to `std::str::FromStr::from_str`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">impl</span><span class="token plain"> </span><span class="token namespace">std</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token keyword" style="color:rgb(0, 0, 255)">str</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">FromStr</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Tag</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">type</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Err</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">sea_orm</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">sea_query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ValueTypeErr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">from_str</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">s</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">str</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Result</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token keyword" style="color:rgb(0, 0, 255)">Self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">Self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Err</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// `to_str` defaults to `std::string::ToString::to_string`.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">impl</span><span class="token plain"> </span><span class="token namespace">std</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">fmt</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Display</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Tag</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">fmt</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> f</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">mut</span><span class="token plain"> </span><span class="token namespace">std</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">fmt</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Formatter</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token lifetime-annotation symbol">'_</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token namespace">std</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">fmt</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Result</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>The following trait impl are generated, removing the boilerplate previously needed:</p>
<details class="details_lb9f alert alert--info details_b_Ee" data-collapsed="true"><summary>DeriveValueType expansion</summary><div><div class="collapsibleContent_i85q"><div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[automatically_derived]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">impl</span><span class="token plain"> </span><span class="token namespace">std</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">convert</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">From</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Tag</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> </span><span class="token namespace">sea_orm</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Value</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">from</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">source</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Tag</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">Self</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token namespace">std</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">string</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ToString</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">to_string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">source</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[automatically_derived]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">impl</span><span class="token plain"> </span><span class="token namespace">sea_orm</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">TryGetable</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Tag</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">try_get_by</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">I</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token namespace">sea_orm</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColIdx</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">res</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token namespace">sea_orm</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">QueryResult</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> idx</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">I</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token namespace">std</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">result</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Result</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token keyword" style="color:rgb(0, 0, 255)">Self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token namespace">sea_orm</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">TryGetError</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> string </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">try_get_by</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">res</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> idx</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token namespace">std</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token keyword" style="color:rgb(0, 0, 255)">str</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">FromStr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">from_str</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">map_err</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token closure-params closure-punctuation punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token closure-params">err</span><span class="token closure-params closure-punctuation punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token plain"> </span><span class="token namespace">sea_orm</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">TryGetError</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">DbErr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">sea_orm</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">DbErr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Type</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token macro property">format!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"{err:?}"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[automatically_derived]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">impl</span><span class="token plain"> </span><span class="token namespace">sea_orm</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">sea_query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ValueType</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Tag</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">try_from</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">v</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token namespace">sea_orm</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Value</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token namespace">std</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">result</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Result</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token keyword" style="color:rgb(0, 0, 255)">Self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token namespace">sea_orm</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">sea_query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ValueTypeErr</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> string </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">as</span><span class="token plain"> </span><span class="token namespace">sea_orm</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">sea_query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ValueType</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">try_from</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">v</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token namespace">std</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token keyword" style="color:rgb(0, 0, 255)">str</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">FromStr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">from_str</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">map_err</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token closure-params closure-punctuation punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token closure-params">_</span><span class="token closure-params closure-punctuation punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token plain"> </span><span class="token namespace">sea_orm</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">sea_query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ValueTypeErr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">type_name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token namespace">std</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">string</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token macro property">stringify!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Tag</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_owned</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">array_type</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token namespace">sea_orm</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">sea_query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ArrayType</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token namespace">sea_orm</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">sea_query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ArrayType</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">column_type</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token namespace">sea_orm</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">sea_query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnType</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token namespace">sea_orm</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">sea_query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnType</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">sea_orm</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">sea_query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">StringLen</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">None</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[automatically_derived]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">impl</span><span class="token plain"> </span><span class="token namespace">sea_orm</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">sea_query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Nullable</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Tag</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">null</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token namespace">sea_orm</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Value</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token namespace">sea_orm</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Value</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">None</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div></div></div></details>
<p>You can override from_str and to_str with custom functions, which is especially useful if you're using <a href="https://docs.rs/strum/latest/strum/derive.Display.html" target="_blank" rel="noopener noreferrer"><code>strum::Display</code></a> and <a href="https://docs.rs/strum/latest/strum/derive.EnumString.html" target="_blank" rel="noopener noreferrer"><code>strum::EnumString</code></a>, or manually implemented methods:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(DeriveValueType)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(</span><br></span><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">    value_type = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"String"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">,</span><br></span><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">    from_str = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"Tag::from_str"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">,</span><br></span><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">    to_str = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"Tag::to_str"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)"></span><br></span><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">enum</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Tag</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Color</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Grey</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">impl</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Tag</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">from_str</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">s</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">str</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Result</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token keyword" style="color:rgb(0, 0, 255)">Self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">ValueTypeErr</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">to_str</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token lifetime-annotation symbol">'static</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">str</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="support-postgres-ipnetwork">Support Postgres IpNetwork<a href="https://www.sea-ql.org/blog/2025-06-01-whats-new-in-sea-orm-1.1/#support-postgres-ipnetwork" class="hash-link" aria-label="Direct link to Support Postgres IpNetwork" title="Direct link to Support Postgres IpNetwork">​</a></h3>
<p><a href="https://github.com/SeaQL/sea-orm/pull/2395" target="_blank" rel="noopener noreferrer">#2395</a> (under feature flag <code>with-ipnetwork</code>)</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)">// Model</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Clone, Debug, PartialEq, Eq, DeriveEntityModel)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(table_name = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"host_network"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(primary_key)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> ipaddress</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">IpNetwork</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(column_type = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"Cidr"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> network</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">IpNetwork</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// Schema</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token namespace">sea_query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">create</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">host_network</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">host_network</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">integer</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">not_null</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">auto_increment</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">primary_key</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">host_network</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Ipaddress</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">inet</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">not_null</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">host_network</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Network</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">cidr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">not_null</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_owned</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// CRUD</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token namespace">host_network</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    ipaddress</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">IpNetwork</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Ipv6Addr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    network</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">IpNetwork</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Ipv4Addr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token class-name" style="color:rgb(38, 127, 153)">Default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="added-default_values-to-activemodeltrait">Added <code>default_values</code> to <code>ActiveModelTrait</code><a href="https://www.sea-ql.org/blog/2025-06-01-whats-new-in-sea-orm-1.1/#added-default_values-to-activemodeltrait" class="hash-link" aria-label="Direct link to added-default_values-to-activemodeltrait" title="Direct link to added-default_values-to-activemodeltrait">​</a></h3>
<p>The <code>ActiveModel::default()</code> returns <code>ActiveModel { .. NotSet }</code> by default (it can also be overridden).</p>
<p>We've added a new method <code>default_values()</code> which would set all fields to their actual <code>Default::default()</code> values.</p>
<p>This fills in a gap in the type system to help with serde. A real-world use case is to improve <code>ActiveModel::from_json</code>, an upcoming <a href="https://github.com/SeaQL/sea-orm/pull/2599" target="_blank" rel="noopener noreferrer">new feature</a> (which is a breaking change, sadly).</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(DeriveEntityModel)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(table_name = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"fruit"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(primary_key)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> cake_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Option</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> type_without_default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token namespace">active_enums</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Tea</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token namespace">fruit</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">default_values</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token namespace">fruit</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">0</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// integer</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">""</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        cake_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">None</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// option</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        type_without_default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">NotSet</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// not available</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>If you are interested in how this works under the hood, a new method <a href="https://docs.rs/sea-query/latest/sea_query/value/enum.Value.html#method.dummy_value" target="_blank" rel="noopener noreferrer"><code>Value::dummy_value</code></a> is added in SeaQuery:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">use</span><span class="token plain"> </span><span class="token namespace">sea_orm</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">sea_query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Value</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> v </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Value</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Int</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">None</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> n </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> v</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">dummy_value</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">n</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Value</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Int</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Some</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">0</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>The real magic happens with a set of new traits, <a href="https://docs.rs/sea-orm/latest/sea_orm/value/trait.DefaultActiveValue.html" target="_blank" rel="noopener noreferrer"><code>DefaultActiveValue</code></a>, <a href="https://docs.rs/sea-orm/latest/sea_orm/value/trait.DefaultActiveValueNone.html" target="_blank" rel="noopener noreferrer"><code>DefaultActiveValueNone</code></a> and <a href="https://docs.rs/sea-orm/latest/sea_orm/value/trait.DefaultActiveValueNotSet.html" target="_blank" rel="noopener noreferrer"><code>DefaultActiveValueNotSet</code></a>, and taking advantage of Rust's autoref specialization mechanism used by <a href="https://github.com/dtolnay/case-studies/blob/master/autoref-specialization/README.md" target="_blank" rel="noopener noreferrer">anyhow</a>:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">use</span><span class="token plain"> </span><span class="token namespace">sea_orm</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">value</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token class-name" style="color:rgb(38, 127, 153)">DefaultActiveValue</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DefaultActiveValueNone</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DefaultActiveValueNotSet</span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> v </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveValue</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">NotSet</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">default_value</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">v</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveValue</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">0</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> v </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveValue</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Option</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">NotSet</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">default_value</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">v</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveValue</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">None</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> v </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveValue</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">NotSet</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">default_value</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">v</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveValue</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">""</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_owned</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> v </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveValue</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Option</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">NotSet</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">default_value</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">v</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveValue</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">None</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> v </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveValue</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">TimeDateTime</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">NotSet</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">default_value</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token macro property">matches!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">v</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveValue</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">_</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>This enables progressive enhancements based on the traits of the individual <code>ActiveValue</code> type.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="make-sea-orm-cli--sea-orm-migration-dependencies-optional">Make sea-orm-cli &amp; sea-orm-migration dependencies optional<a href="https://www.sea-ql.org/blog/2025-06-01-whats-new-in-sea-orm-1.1/#make-sea-orm-cli--sea-orm-migration-dependencies-optional" class="hash-link" aria-label="Direct link to Make sea-orm-cli &amp; sea-orm-migration dependencies optional" title="Direct link to Make sea-orm-cli &amp; sea-orm-migration dependencies optional">​</a></h3>
<p><a href="https://github.com/SeaQL/sea-orm/pull/2367" target="_blank" rel="noopener noreferrer">#2367</a></p>
<p>Some engineering teams prefer vendoring <code>sea-orm-cli</code> into their own project as part of the cargo workspace, and so would like to have more control of the dependency graph. This change makes it possible to pick the exact features needed by your project.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="enhancements">Enhancements<a href="https://www.sea-ql.org/blog/2025-06-01-whats-new-in-sea-orm-1.1/#enhancements" class="hash-link" aria-label="Direct link to Enhancements" title="Direct link to Enhancements">​</a></h2>
<ul>
<li>Impl <code>IntoCondition</code> for <code>RelationDef</code> <a href="https://github.com/SeaQL/sea-orm/pull/2587" target="_blank" rel="noopener noreferrer">#2587</a><br>
This allows using <code>RelationDef</code> directly where the query API expects an <code>IntoCondition</code></li>
</ul>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> query </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">select</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">from</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">fruit</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">inner_join</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token namespace">fruit</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Relation</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Cake</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">def</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_owned</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">MysqlQueryBuilder</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">r#"SELECT  FROM `fruit` INNER JOIN `cake` ON `fruit`.`cake_id` = `cake`.`id`"#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">PostgresQueryBuilder</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">r#"SELECT  FROM "fruit" INNER JOIN "cake" ON "fruit"."cake_id" = "cake"."id""#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">SqliteQueryBuilder</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">r#"SELECT  FROM "fruit" INNER JOIN "cake" ON "fruit"."cake_id" = "cake"."id""#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<ul>
<li>Use fully-qualified syntax for ActiveEnum associated type <a href="https://github.com/SeaQL/sea-orm/pull/2552" target="_blank" rel="noopener noreferrer">#2552</a></li>
<li>Added <code>try_getable_postgres_array!(Vec&lt;u8&gt;)</code> (to support <code>bytea[]</code>) <a href="https://github.com/SeaQL/sea-orm/pull/2503" target="_blank" rel="noopener noreferrer">#2503</a></li>
<li>Accept <code>LikeExpr</code> in <code>like</code> and <code>not_like</code> <a href="https://github.com/SeaQL/sea-orm/pull/2549" target="_blank" rel="noopener noreferrer">#2549</a></li>
<li>Loader: retain only unique key values in the query condition <a href="https://github.com/SeaQL/sea-orm/pull/2569" target="_blank" rel="noopener noreferrer">#2569</a></li>
<li>Add proxy transaction impl <a href="https://github.com/SeaQL/sea-orm/pull/2573" target="_blank" rel="noopener noreferrer">#2573</a></li>
<li>Relax <code>TransactionError</code>'s trait bound for errors to allow <code>anyhow::Error</code> <a href="https://github.com/SeaQL/sea-orm/pull/2602" target="_blank" rel="noopener noreferrer">#2602</a></li>
<li>[sea-orm-cli] Fix <code>PgVector</code> codegen <a href="https://github.com/SeaQL/sea-orm/pull/2589" target="_blank" rel="noopener noreferrer">#2589</a></li>
<li>[sea-orm-cli] Support postgres array in expanded format <a href="https://github.com/SeaQL/sea-orm/pull/2545" target="_blank" rel="noopener noreferrer">#2545</a></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="bug-fixes">Bug fixes<a href="https://www.sea-ql.org/blog/2025-06-01-whats-new-in-sea-orm-1.1/#bug-fixes" class="hash-link" aria-label="Direct link to Bug fixes" title="Direct link to Bug fixes">​</a></h2>
<ul>
<li>Quote type properly in <code>AsEnum</code> casting <a href="https://github.com/SeaQL/sea-orm/pull/2570" target="_blank" rel="noopener noreferrer">#2570</a></li>
</ul>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token namespace">lunch_set</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">find</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">select_only</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">lunch_set</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Tea</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">build</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">DbBackend</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Postgres</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">r#"SELECT CAST("lunch_set"."tea" AS "text") FROM "lunch_set""#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">// "text" is now quoted; will work for "text"[] as well</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<ul>
<li>Include custom <code>column_name</code> in DeriveColumn <code>Column::from_str</code> impl <a href="https://github.com/SeaQL/sea-orm/pull/2603" target="_blank" rel="noopener noreferrer">#2603</a></li>
</ul>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(DeriveEntityModel)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(column_name = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"lAsTnAmE"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    last_name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token macro property">matches!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">from_str</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"lAsTnAmE"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unwrap</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">LastName</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<ul>
<li>Check if url is well-formed before parsing (avoid panic) <a href="https://github.com/SeaQL/sea-orm/pull/2558" target="_blank" rel="noopener noreferrer">#2558</a></li>
</ul>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> db </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Database</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">connect</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"postgre://sea:sea@localhost/bakery"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// note the missing `s`; results in `DbErr::Conn`</span><br></span></code></pre></div></div>
<ul>
<li><code>QuerySelect::column_as</code> method cast ActiveEnum column <a href="https://github.com/SeaQL/sea-orm/pull/2551" target="_blank" rel="noopener noreferrer">#2551</a></li>
</ul>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Debug, FromQueryResult, PartialEq)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">SelectResult</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    tea_alias</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Option</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Tea</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">SelectResult</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        tea_alias</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Some</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Tea</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">EverydayTea</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">find</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">select_only</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">column_as</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Tea</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"tea_alias"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into_model</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">one</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unwrap</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<ul>
<li>Fix unicode string enum <a href="https://github.com/SeaQL/sea-orm/pull/2218" target="_blank" rel="noopener noreferrer">#2218</a></li>
</ul>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(rs_type = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"String"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">, db_type = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"String(StringLen::None)"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">enum</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">SeaORM</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(string_value = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"씨오알엠"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    씨오알엠</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="upgrades">Upgrades<a href="https://www.sea-ql.org/blog/2025-06-01-whats-new-in-sea-orm-1.1/#upgrades" class="hash-link" aria-label="Direct link to Upgrades" title="Direct link to Upgrades">​</a></h2>
<ul>
<li>Upgrade sqlx to 0.8.4 <a href="https://github.com/SeaQL/sea-orm/pull/2562" target="_blank" rel="noopener noreferrer">#2562</a></li>
<li>Upgrade <code>sea-query</code> to <code>0.32.5</code></li>
<li>Upgrade <code>sea-schema</code> to <code>0.16.2</code></li>
<li>Upgrade <code>heck</code> to <code>0.5</code> <a href="https://github.com/SeaQL/sea-orm/pull/2218" target="_blank" rel="noopener noreferrer">#2218</a></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="house-keeping">House Keeping<a href="https://www.sea-ql.org/blog/2025-06-01-whats-new-in-sea-orm-1.1/#house-keeping" class="hash-link" aria-label="Direct link to House Keeping" title="Direct link to House Keeping">​</a></h2>
<ul>
<li>Replace <code>once_cell</code> crate with <code>std</code> equivalent <a href="https://github.com/SeaQL/sea-orm/pull/2524" target="_blank" rel="noopener noreferrer">#2524</a>
(available since rust 1.80)</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="release-planning">Release Planning<a href="https://www.sea-ql.org/blog/2025-06-01-whats-new-in-sea-orm-1.1/#release-planning" class="hash-link" aria-label="Direct link to Release Planning" title="Direct link to Release Planning">​</a></h2>
<p><a href="https://www.sea-ql.org/blog/2024-08-04-sea-orm-1.0/" target="_blank" rel="noopener noreferrer">SeaORM 1.0</a> is a stable release. As demonstrated, we are able to ship many new features without breaking the API. The 1.1 version will be maintained until October 2025, and we'll likely release a 1.2 version with some breaking changes afterwards.</p>
<p>The underlying library SeaQuery will undergo an overhaul and be promoted to 1.0.</p>
<p>If you have suggestions on breaking changes, you are welcome to post them in the discussions:</p>
<ul>
<li><a href="https://github.com/SeaQL/sea-orm/discussions/2548" target="_blank" rel="noopener noreferrer">Wanted breaking changes in SeaORM</a></li>
<li><a href="https://github.com/SeaQL/sea-query/discussions/795" target="_blank" rel="noopener noreferrer">Wanted breaking changes in SeaQuery</a></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="sql-server-support">SQL Server Support<a href="https://www.sea-ql.org/blog/2025-06-01-whats-new-in-sea-orm-1.1/#sql-server-support" class="hash-link" aria-label="Direct link to SQL Server Support" title="Direct link to SQL Server Support">​</a></h2>
<p>We've been beta-testing <a href="https://www.sea-ql.org/SeaORM-X/" target="_blank" rel="noopener noreferrer">SQL Server for SeaORM</a> for a while. SeaORM X offers the same SeaORM API for MSSQL. We ported all test cases and most examples, complemented by MSSQL specific documentation. If you are building enterprise software for your company, you can <a href="https://forms.office.com/r/1MuRPJmYBR" target="_blank" rel="noopener noreferrer">request commercial access</a>.</p>
<p>Features:</p>
<ul>
<li>SeaQuery + SeaSchema</li>
<li>Entity generation with sea-orm-cli</li>
<li>GraphQL with Seaography</li>
<li>Nested transaction, connection pooling and multi-async runtime</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="️-seaorm-pro-professional-admin-panel">🖥️ SeaORM Pro: Professional Admin Panel<a href="https://www.sea-ql.org/blog/2025-06-01-whats-new-in-sea-orm-1.1/#%EF%B8%8F-seaorm-pro-professional-admin-panel" class="hash-link" aria-label="Direct link to 🖥️ SeaORM Pro: Professional Admin Panel" title="Direct link to 🖥️ SeaORM Pro: Professional Admin Panel">​</a></h2>
<img src="https://www.sea-ql.org/blog/img/sea-orm-pro-light.png#light">
<img src="https://www.sea-ql.org/blog/img/sea-orm-pro-dark.png#dark">
<p><a href="https://www.sea-ql.org/sea-orm-pro/" target="_blank" rel="noopener noreferrer">SeaORM Pro</a> is an admin panel solution allowing you to quickly and easily launch an admin panel for your application - frontend development skills not required, but certainly nice to have!</p>
<p>Features:</p>
<ul>
<li>Full CRUD</li>
<li>Built on React + GraphQL</li>
<li>Built-in GraphQL resolver</li>
<li>Customize the UI with simple TOML</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="getting-started">Getting Started<a href="https://www.sea-ql.org/blog/2025-06-01-whats-new-in-sea-orm-1.1/#getting-started" class="hash-link" aria-label="Direct link to Getting Started" title="Direct link to Getting Started">​</a></h3>
<ul>
<li><a href="https://github.com/SeaQL/sea-orm-pro" target="_blank" rel="noopener noreferrer">Example Repo</a></li>
<li><a href="https://www.sea-ql.org/sea-orm-pro/docs/install-and-config/getting-started-loco/" target="_blank" rel="noopener noreferrer">Getting Started with Loco</a></li>
<li><a href="https://www.sea-ql.org/sea-orm-pro/docs/install-and-config/getting-started-axum/" target="_blank" rel="noopener noreferrer">Getting Started with Axum</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="latest-features">Latest features<a href="https://www.sea-ql.org/blog/2025-06-01-whats-new-in-sea-orm-1.1/#latest-features" class="hash-link" aria-label="Direct link to Latest features" title="Direct link to Latest features">​</a></h3>
<p>The <a href="https://github.com/SeaQL/sea-orm-pro/releases/tag/0.2.0" target="_blank" rel="noopener noreferrer">latest release</a> of SeaORM Pro has a new feature, <a href="https://www.sea-ql.org/sea-orm-pro/docs/raw-table-config/editor/" target="_blank" rel="noopener noreferrer">Model Editor</a>. Instead of updating data in a pop-up dialog, editor offers a dedicated page with deep link to view and update data. It also offers more control to the UI layout.</p>
<img src="https://www.sea-ql.org/blog/img/raw-table-config-table-editor.png#light">
<img src="https://www.sea-ql.org/blog/img/raw-table-config-table-editor-dark.png#dark">
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="sponsor">Sponsor<a href="https://www.sea-ql.org/blog/2025-06-01-whats-new-in-sea-orm-1.1/#sponsor" class="hash-link" aria-label="Direct link to Sponsor" title="Direct link to Sponsor">​</a></h2>
<p>If you feel generous, a small donation will be greatly appreciated, and goes a long way towards sustaining the organization.</p>
<p>A big shout out to our <a href="https://github.com/sponsors/SeaQL" target="_blank" rel="noopener noreferrer">GitHub sponsors</a> 😇:</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="gold-sponsors">Gold Sponsors<a href="https://www.sea-ql.org/blog/2025-06-01-whats-new-in-sea-orm-1.1/#gold-sponsors" class="hash-link" aria-label="Direct link to Gold Sponsors" title="Direct link to Gold Sponsors">​</a></h4>
<a href="https://qdx.co/"><img src="https://www.sea-ql.org/static/sponsors/QDX.svg" width="128"></a>
<p><a href="https://qdx.co/" target="_blank" rel="noopener noreferrer">QDX</a> pioneers quantum dynamics–powered drug discovery, leveraging AI and supercomputing to accelerate molecular modeling.
We're grateful to QDX for sponsoring the development of SeaORM, the SQL toolkit that powers their data intensive applications.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="github-sponsors">GitHub Sponsors<a href="https://www.sea-ql.org/blog/2025-06-01-whats-new-in-sea-orm-1.1/#github-sponsors" class="hash-link" aria-label="Direct link to GitHub Sponsors" title="Direct link to GitHub Sponsors">​</a></h4>
<div class="row"><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--m" href="https://github.com/numeusxyz"><img src="https://avatars.githubusercontent.com/u/82152211?s=200&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Numeus</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--m" href="https://github.com/caido-community"><img src="https://avatars.githubusercontent.com/u/168573261?s=200&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Caido</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--m" href="https://github.com/data-intuitive"><img src="https://avatars.githubusercontent.com/u/15045722?s=200&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Data Intuitive</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--m" href="https://github.com/marcusbuffett"><img src="https://avatars.githubusercontent.com/u/1834328?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Marcus Buffett</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--m" href="https://github.com/marcson909"><img src="https://avatars.githubusercontent.com/u/16665353?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>MS</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--m" href="https://github.com/wh7f"><img src="https://avatars.githubusercontent.com/u/59872041?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>wh7f</p></div></div></div></div></div>
<br>
<div class="row"><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/tugascript"><img src="https://avatars.githubusercontent.com/u/64930104?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Afonso Barracha</p></div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/deansheather"><img src="https://avatars.githubusercontent.com/u/11241812?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Dean Sheather</p></div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/kallydev"><img src="https://avatars.githubusercontent.com/u/36319157?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>KallyDev</p></div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/manfredcml"><img src="https://avatars.githubusercontent.com/u/27536502?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Manfred Lee</p></div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/yuly3"><img src="https://avatars.githubusercontent.com/u/25814001?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>MasakiMiyazaki</p></div></div></div></div></div>]]></content>
        <author>
            <name>SeaQL Team</name>
            <uri>https://github.com/SeaQL</uri>
        </author>
        <category label="news" term="news"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[What's new in SeaORM 1.1.7]]></title>
        <id>https://www.sea-ql.org/blog/2025-03-08-whats-new-in-sea-orm-1.1/</id>
        <link href="https://www.sea-ql.org/blog/2025-03-08-whats-new-in-sea-orm-1.1/"/>
        <updated>2025-03-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This blog post summarizes the new features and enhancements introduced in SeaORM 1.1:]]></summary>
        <content type="html"><![CDATA[<img alt="SeaORM 1.0 Banner" src="https://www.sea-ql.org/blog/img/SeaORM%201.0%20Banner.png">
<p>This blog post summarizes the new features and enhancements introduced in SeaORM <code>1.1</code>:</p>
<ul>
<li>2024-10-15 <a href="https://github.com/SeaQL/sea-orm/releases/tag/1.1.0" target="_blank" rel="noopener noreferrer"><code>1.1.0</code></a></li>
<li>2024-11-04 <a href="https://github.com/SeaQL/sea-orm/releases/tag/1.1.1" target="_blank" rel="noopener noreferrer"><code>1.1.1</code></a></li>
<li>2024-12-02 <a href="https://github.com/SeaQL/sea-orm/releases/tag/1.1.2" target="_blank" rel="noopener noreferrer"><code>1.1.2</code></a></li>
<li>2024-12-24 <a href="https://github.com/SeaQL/sea-orm/releases/tag/1.1.3" target="_blank" rel="noopener noreferrer"><code>1.1.3</code></a></li>
<li>2025-01-10 <a href="https://github.com/SeaQL/sea-orm/releases/tag/1.1.4" target="_blank" rel="noopener noreferrer"><code>1.1.4</code></a></li>
<li>2025-02-14 <a href="https://github.com/SeaQL/sea-orm/releases/tag/1.1.5" target="_blank" rel="noopener noreferrer"><code>1.1.5</code></a></li>
<li>2025-02-24 <a href="https://github.com/SeaQL/sea-orm/releases/tag/1.1.6" target="_blank" rel="noopener noreferrer"><code>1.1.6</code></a></li>
<li>2025-03-02 <a href="https://github.com/SeaQL/sea-orm/releases/tag/1.1.7" target="_blank" rel="noopener noreferrer"><code>1.1.7</code></a></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="new-features">New Features<a href="https://www.sea-ql.org/blog/2025-03-08-whats-new-in-sea-orm-1.1/#new-features" class="hash-link" aria-label="Direct link to New Features" title="Direct link to New Features">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="support-postgres-vector">Support Postgres Vector<a href="https://www.sea-ql.org/blog/2025-03-08-whats-new-in-sea-orm-1.1/#support-postgres-vector" class="hash-link" aria-label="Direct link to Support Postgres Vector" title="Direct link to Support Postgres Vector">​</a></h3>
<p><a href="https://github.com/SeaQL/sea-orm/pull/2500" target="_blank" rel="noopener noreferrer">#2500</a>
The popular <a href="https://github.com/pgvector/pgvector" target="_blank" rel="noopener noreferrer">pgvector</a> extension enables efficient storage and querying of high-dimensional vector data, supporting applications like similarity search, recommendation systems, and other AI tools.</p>
<p>Thanks to the contribution of <a href="https://github.com/28Smiles" target="_blank" rel="noopener noreferrer">@28Smiles</a>, <code>PgVector</code> is now integrated nicely into the SeaQL ecosystem (under feature flag <code>postgres-vector</code>).</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)">// Model</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(table_name = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"image_model"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(primary_key)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> embedding</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">PgVector</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// Schema</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token namespace">sea_query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">create</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">image_model</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">table_ref</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">integer</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">not_null</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">auto_increment</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">primary_key</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Embedding</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">vector</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">None</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">not_null</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// Insert</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">NotSet</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    embedding</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">PgVector</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">from</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token macro property">vec!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">3</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">insert</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="nested-objects-in-relational-queries">Nested Objects in Relational Queries<a href="https://www.sea-ql.org/blog/2025-03-08-whats-new-in-sea-orm-1.1/#nested-objects-in-relational-queries" class="hash-link" aria-label="Direct link to Nested Objects in Relational Queries" title="Direct link to Nested Objects in Relational Queries">​</a></h3>
<p><a href="https://github.com/SeaQL/sea-orm/pull/2508" target="_blank" rel="noopener noreferrer">#2508</a> <a href="https://github.com/SeaQL/sea-orm/pull/2179" target="_blank" rel="noopener noreferrer">#2179</a> <a href="https://github.com/SeaQL/sea-orm/pull/1716" target="_blank" rel="noopener noreferrer">#1716</a></p>
<p>We now have a good answer to <a href="https://www.sea-ql.org/blog/2022-05-14-faq-01/" target="_blank" rel="noopener noreferrer">Why SeaORM does not nest objects for parent-child relation</a>!</p>
<p>The latest improvements to the <code>FromQueryResult</code> and <code>DerivePartialModel</code> macros allows you to nest objects easily, simplifying the construction of complex queries.</p>
<p>To illustrate, let's take a look at the <a href="https://www.sea-ql.org/SeaORM/docs/relation/bakery-schema/" target="_blank" rel="noopener noreferrer">Bakery Schema</a> again.</p>
<p><img decoding="async" loading="lazy" src="https://raw.githubusercontent.com/SeaQL/sea-orm/refs/heads/master/tests/common/bakery_chain/bakery_chain_erd.png" alt="Bakery ERD" class="img_ev3q"></p>
<p>As a simple first example, we'd like to select <code>Cake</code> with <code>Bakery</code>:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(FromQueryResult)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Cake</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(nested)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    bakery</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Option</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Bakery</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(FromQueryResult)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Bakery</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(from_alias = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"bakery_id"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(from_alias = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"bakery_name"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    brand</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> cake</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Cake</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">find</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">select_only</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">column_as</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">bakery</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"bakery_id"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">column_as</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">bakery</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"bakery_name"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">left_join</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">bakery</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">order_by_asc</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into_model</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">one</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unwrap</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    cake</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Cake</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"Basque cheesecake"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        bakery</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Some</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Bakery</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">20</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            brand</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"Super Baker"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>Because the tables <code>cake</code> and <code>bakery</code> have some duplicate column names, we'd have to do custom selects. <code>select_only</code> here clears the default select list, and we apply aliases with <a href="https://docs.rs/sea-orm/latest/sea_orm/query/trait.QuerySelect.html#method.column_as" target="_blank" rel="noopener noreferrer"><code>column_as</code></a>. Then, in <code>FromQueryResult</code> we use <code>from_alias</code> to map the query result back to the nested struct.</p>
<p>You may wonder if there are ways to not do the alias and mapping? Yes! There's where <a href="https://docs.rs/sea-orm/latest/sea_orm/derive.DerivePartialModel.html" target="_blank" rel="noopener noreferrer"><code>DerivePartialModel</code></a> comes into play. The previous example can be written as:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(DerivePartialModel)]</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// FromQueryResult is no longer needed</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(entity = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"cake::Entity"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">, from_query_result)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Cake</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(nested)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    bakery</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Option</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Bakery</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(DerivePartialModel)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(entity = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"bakery::Entity"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">, from_query_result)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Bakery</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(from_col = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"Name"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    brand</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// same as previous example, but without the custom selects</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> cake</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Cake</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">find</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">left_join</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">bakery</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">order_by_asc</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into_partial_model</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">one</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unwrap</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>Under the hood, <code>bakery_</code> prefix will be added to the column alias in the SQL query.</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">SELECT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">"cake"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token string" style="color:rgb(163, 21, 21)">"id"</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">AS</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"id"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">"cake"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token string" style="color:rgb(163, 21, 21)">"name"</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">AS</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"name"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">"bakery"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token string" style="color:rgb(163, 21, 21)">"id"</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">AS</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"bakery_id"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">"bakery"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token string" style="color:rgb(163, 21, 21)">"name"</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">AS</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"bakery_brand"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">FROM</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"cake"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">LEFT</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">JOIN</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"bakery"</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">ON</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"cake"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token string" style="color:rgb(163, 21, 21)">"bakery_id"</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"bakery"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token string" style="color:rgb(163, 21, 21)">"id"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">ORDER</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">BY</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"cake"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token string" style="color:rgb(163, 21, 21)">"id"</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">ASC</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">LIMIT</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">1</span><br></span></code></pre></div></div>
<p>Now, let's look at one more advanced three-way join. Our join tree starts from Order:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token class-name" style="color:rgb(38, 127, 153)">Order</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Customer</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">LineItem</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Cake</span><br></span></code></pre></div></div>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Debug, DerivePartialModel, PartialEq)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(entity = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"order::Entity"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">, from_query_result)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Order</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    total</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Decimal</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(nested)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    customer</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Customer</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(nested)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    line</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">LineItem</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Debug, DerivePartialModel, PartialEq)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(entity = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"customer::Entity"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">, from_query_result)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Customer</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Debug, DerivePartialModel, PartialEq)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(entity = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"lineitem::Entity"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">, from_query_result)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">LineItem</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    price</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Decimal</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    quantity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(nested)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    cake</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Cake</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Debug, DerivePartialModel, PartialEq)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(entity = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"cake::Entity"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">, from_query_result)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Cake</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> items</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Vec</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Order</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">order</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">find</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">left_join</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">customer</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">left_join</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">lineitem</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">join</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">JoinType</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">LeftJoin</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token namespace">lineitem</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Relation</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Cake</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">def</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">order_by_asc</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">order</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">order_by_asc</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">lineitem</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into_partial_model</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">all</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    items</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Order</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">101</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            total</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Decimal</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">from</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">10</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            customer</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Customer</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"Bob"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_owned</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            line</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">LineItem</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                cake</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Cake</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"Cheesecake"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_owned</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                price</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Decimal</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">from</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                quantity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>That's it! Hope you like these new features, and a huge thanks to <a href="https://github.com/Goodjooy" target="_blank" rel="noopener noreferrer">@Goodjooy</a> for laying the foundation, <a href="https://github.com/jreppnow" target="_blank" rel="noopener noreferrer">@jreppnow</a> for implementing the nested logic, and everyone who participated in the discussion.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="bonus-partialmodel---activemodel">Bonus: PartialModel -&gt; ActiveModel<a href="https://www.sea-ql.org/blog/2025-03-08-whats-new-in-sea-orm-1.1/#bonus-partialmodel---activemodel" class="hash-link" aria-label="Direct link to Bonus: PartialModel -> ActiveModel" title="Direct link to Bonus: PartialModel -> ActiveModel">​</a></h4>
<p><a href="https://github.com/SeaQL/sea-orm/pull/2517" target="_blank" rel="noopener noreferrer">#2517</a>
<code>DerivePartialModel</code> got another extension to derive <a href="https://docs.rs/sea-orm/latest/sea_orm/entity/trait.IntoActiveModel.html" target="_blank" rel="noopener noreferrer"><code>IntoActiveModel</code></a> as well. Absent attributes will be filled with <code>NotSet</code>. This allows you to have a cake and eat it!</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(DerivePartialModel)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(entity = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"cake::Entity"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">, into_active_model)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">PartialCake</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> partial_cake </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">PartialCake</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">12</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"Lemon Drizzle"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_owned</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// this is now possible:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token plain">partial_cake</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into_active_model</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">12</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"Lemon Drizzle"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_owned</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token class-name" style="color:rgb(38, 127, 153)">Default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="three-way-select">Three way select<a href="https://www.sea-ql.org/blog/2025-03-08-whats-new-in-sea-orm-1.1/#three-way-select" class="hash-link" aria-label="Direct link to Three way select" title="Direct link to Three way select">​</a></h3>
<p><a href="https://github.com/SeaQL/sea-orm/pull/2518" target="_blank" rel="noopener noreferrer">#2518</a>
With PartialModel being so powerful, if you still need to do non-nested selects, there's <a href="https://docs.rs/sea-orm/latest/sea_orm/query/struct.SelectThree.html" target="_blank" rel="noopener noreferrer"><code>SelectThree</code></a>, an extension to <code>SelectTwo</code>:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token class-name" style="color:rgb(38, 127, 153)">Order</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Lineitem</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Cake</span><br></span></code></pre></div></div>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> items</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Vec</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">order</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Option</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token namespace">lineitem</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Option</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token namespace">order</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">find</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">find_also_related</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">lineitem</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">and_also_related</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">order_by_asc</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">order</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">order_by_asc</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">lineitem</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">all</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="insert-heterogeneous-models">Insert heterogeneous models<a href="https://www.sea-ql.org/blog/2025-03-08-whats-new-in-sea-orm-1.1/#insert-heterogeneous-models" class="hash-link" aria-label="Direct link to Insert heterogeneous models" title="Direct link to Insert heterogeneous models">​</a></h3>
<p><a href="https://github.com/SeaQL/sea-orm/pull/2433" target="_blank" rel="noopener noreferrer">#2433</a>
Insert many now allows active models to have different column sets (it previously panics). Missing columns will be filled with <code>NULL</code>. This makes seeding data (e.g. <a href="https://loco.rs/docs/the-app/models/#seeding" target="_blank" rel="noopener noreferrer">with Loco</a>) a seamless operation.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> apple </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">cake_filling</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    cake_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveValue</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    filling_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveValue</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">NotSet</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> orange </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">cake_filling</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    cake_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveValue</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">NotSet</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    filling_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveValue</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">3</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Insert</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token namespace">cake_filling</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">add_many</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">apple</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> orange</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">build</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">DbBackend</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Postgres</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">r#"INSERT INTO "cake_filling" ("cake_id", "filling_id") VALUES (2, NULL), (NULL, 3)"#</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="improved-seaography-integration">Improved Seaography Integration<a href="https://www.sea-ql.org/blog/2025-03-08-whats-new-in-sea-orm-1.1/#improved-seaography-integration" class="hash-link" aria-label="Direct link to Improved Seaography Integration" title="Direct link to Improved Seaography Integration">​</a></h3>
<p><a href="https://github.com/SeaQL/sea-orm/pull/2403" target="_blank" rel="noopener noreferrer">#2403</a>
We've simplified the code by allowing you to register entities into Seaography's GraphQL schema directly within the entity module.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">mod</span><span class="token plain"> </span><span class="token module-declaration namespace">prelude</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">mod</span><span class="token plain"> </span><span class="token module-declaration namespace">sea_orm_active_enums</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">mod</span><span class="token plain"> </span><span class="token module-declaration namespace">baker</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">mod</span><span class="token plain"> </span><span class="token module-declaration namespace">bakery</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">mod</span><span class="token plain"> </span><span class="token module-declaration namespace">cake</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">mod</span><span class="token plain"> </span><span class="token module-declaration namespace">cakes_bakers</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token namespace">seaography</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token macro property">register_entity_modules!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    baker</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    bakery</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    cake</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    cakes_bakers</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token namespace">seaography</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token macro property">register_active_enums!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token namespace">sea_orm_active_enums</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Tea</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="enhancements">Enhancements<a href="https://www.sea-ql.org/blog/2025-03-08-whats-new-in-sea-orm-1.1/#enhancements" class="hash-link" aria-label="Direct link to Enhancements" title="Direct link to Enhancements">​</a></h2>
<ul>
<li>Added <a href="https://docs.rs/sea-orm/latest/sea_orm/query/struct.Insert.html#method.exec_with_returning_keys" target="_blank" rel="noopener noreferrer"><code>Insert::exec_with_returning_keys</code></a> &amp; <a href="https://docs.rs/sea-orm/latest/sea_orm/query/struct.Insert.html#method.exec_with_returning_many" target="_blank" rel="noopener noreferrer"><code>Insert::exec_with_returning_many</code></a> (Postgres only)</li>
</ul>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">insert_many</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">NotSet</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"two"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">NotSet</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"three"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">exec_with_returning_many</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unwrap</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"two"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">3</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"three"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token namespace">cakes_bakers</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">insert_many</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token namespace">cakes_bakers</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            cake_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            baker_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token namespace">cakes_bakers</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            cake_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            baker_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">exec_with_returning_keys</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unwrap</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<ul>
<li>Added <code>DeleteOne::exec_with_returning</code> &amp; <code>DeleteMany::exec_with_returning</code> <a href="https://github.com/SeaQL/sea-orm/pull/2432" target="_blank" rel="noopener noreferrer">#2432</a></li>
<li>Support complex type path in <code>DeriveIntoActiveModel</code> <a href="https://github.com/SeaQL/sea-orm/pull/2517" target="_blank" rel="noopener noreferrer">#2517</a></li>
</ul>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(DeriveIntoActiveModel)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(active_model = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"&lt;fruit::Entity as EntityTrait&gt;::ActiveModel"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Fruit</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    cake_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Option</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Option</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<ul>
<li>Added <code>DatabaseConnection::close_by_ref</code> <a href="https://github.com/SeaQL/sea-orm/pull/2511" target="_blank" rel="noopener noreferrer">#2511</a></li>
</ul>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">close</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Result</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DbErr</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// existing</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">close_by_ref</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Result</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DbErr</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// new</span><br></span></code></pre></div></div>
<ul>
<li>Added <code>Schema::json_schema_from_entity</code> to construct schema metadata for Entities</li>
</ul>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Schema</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">DbBackend</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">MySql</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">json_schema_from_entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">lunch_set</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token macro property">json!</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token string" style="color:rgb(163, 21, 21)">"columns"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                </span><span class="token string" style="color:rgb(163, 21, 21)">"name"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"id"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                </span><span class="token string" style="color:rgb(163, 21, 21)">"nullable"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token boolean">false</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                </span><span class="token string" style="color:rgb(163, 21, 21)">"type"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"integer"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                </span><span class="token string" style="color:rgb(163, 21, 21)">"name"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"name"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                </span><span class="token string" style="color:rgb(163, 21, 21)">"nullable"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token boolean">false</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                </span><span class="token string" style="color:rgb(163, 21, 21)">"type"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"string"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                </span><span class="token string" style="color:rgb(163, 21, 21)">"name"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"tea"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                </span><span class="token string" style="color:rgb(163, 21, 21)">"nullable"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token boolean">false</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                </span><span class="token string" style="color:rgb(163, 21, 21)">"type"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token string" style="color:rgb(163, 21, 21)">"name"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"tea"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token string" style="color:rgb(163, 21, 21)">"variants"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                        </span><span class="token string" style="color:rgb(163, 21, 21)">"EverydayTea"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                        </span><span class="token string" style="color:rgb(163, 21, 21)">"BreakfastTea"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token string" style="color:rgb(163, 21, 21)">"primary_key"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token string" style="color:rgb(163, 21, 21)">"id"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<ul>
<li>Construct <code>DatabaseConnection</code> directly from <code>sqlx::PgPool</code>, <code>sqlx::SqlitePool</code> and <code>sqlx::MySqlPool</code> <a href="https://github.com/SeaQL/sea-orm/pull/2348" target="_blank" rel="noopener noreferrer">#2348</a></li>
</ul>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)">// these are implemented:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">impl</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">From</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">MySqlPool</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SqlxMySqlPoolConnection</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">impl</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">From</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">MySqlPool</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DatabaseConnection</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// so this is now possible:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DatabaseConnection</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> mysql_pool</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<ul>
<li>Expose underlying row types (e.g. <code>sqlx::postgres::PgRow</code>) <a href="https://github.com/SeaQL/sea-orm/pull/2265" target="_blank" rel="noopener noreferrer">#2265</a></li>
<li>[sea-orm-migration] Allow modifying the connection in migrations <a href="https://github.com/SeaQL/sea-orm/pull/2397" target="_blank" rel="noopener noreferrer">#2397</a></li>
</ul>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[async_std::main]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">main</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token namespace">cli</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">run_cli_with_connection</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">migration</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Migrator</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token closure-params closure-punctuation punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token closure-params">connect_options</span><span class="token closure-params closure-punctuation punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">async</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> db </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Database</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">connect</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">connect_options</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">if</span><span class="token plain"> db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">get_database_backend</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">==</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DatabaseBackend</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Sqlite</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token function" style="color:rgb(0, 0, 255)">register_sqlite_functions</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Ok</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<ul>
<li>[sea-orm-cli] Added <code>MIGRATION_DIR</code> environment variable <a href="https://github.com/SeaQL/sea-orm/pull/2419" target="_blank" rel="noopener noreferrer">#2419</a></li>
<li>[sea-orm-cli] Added <code>acquire-timeout</code> option <a href="https://github.com/SeaQL/sea-orm/pull/2461" target="_blank" rel="noopener noreferrer">#2461</a></li>
<li>[sea-orm-cli] Added <code>impl-active-model-behavior</code> option <a href="https://github.com/SeaQL/sea-orm/pull/2487" target="_blank" rel="noopener noreferrer">#2487</a></li>
<li>[sea-orm-cli] Added <code>with-prelude</code> option <a href="https://github.com/SeaQL/sea-orm/pull/2322" target="_blank" rel="noopener noreferrer">#2322</a>
<ul>
<li><code>all</code>: the default value (current behaviour), will generate prelude.rs and add it to mod.rs / lib.rs</li>
<li><code>all-allow-unused-imports</code>: will generate prelude.rs and add it to mod.rs, plus adding <code>#![allow(unused_imports)]</code> in the module</li>
<li><code>none</code>: <strong>will not</strong> generate prelude.rs</li>
</ul>
</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="upgrades">Upgrades<a href="https://www.sea-ql.org/blog/2025-03-08-whats-new-in-sea-orm-1.1/#upgrades" class="hash-link" aria-label="Direct link to Upgrades" title="Direct link to Upgrades">​</a></h2>
<ul>
<li>Upgrade <code>sqlx</code> to <code>0.8</code> <a href="https://github.com/SeaQL/sea-orm/pull/2305" target="_blank" rel="noopener noreferrer">#2305</a>  <a href="https://github.com/SeaQL/sea-orm/pull/2371" target="_blank" rel="noopener noreferrer">#2371</a></li>
<li>Upgrade <code>bigdecimal</code> to <code>0.4</code> <a href="https://github.com/SeaQL/sea-orm/pull/2305" target="_blank" rel="noopener noreferrer">#2305</a></li>
<li>Upgrade <code>sea-query</code> to <code>0.32.0</code> <a href="https://github.com/SeaQL/sea-orm/pull/2305" target="_blank" rel="noopener noreferrer">#2305</a></li>
<li>Upgrade <code>sea-query-binder</code> to <code>0.7</code> <a href="https://github.com/SeaQL/sea-orm/pull/2305" target="_blank" rel="noopener noreferrer">#2305</a></li>
<li>Upgrade <code>sea-schema</code> to <code>0.16</code> <a href="https://github.com/SeaQL/sea-orm/pull/2305" target="_blank" rel="noopener noreferrer">#2305</a></li>
<li>Upgrade <code>ouroboros</code> to <code>0.18</code> <a href="https://github.com/SeaQL/sea-orm/pull/2353" target="_blank" rel="noopener noreferrer">#2353</a></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="house-keeping">House Keeping<a href="https://www.sea-ql.org/blog/2025-03-08-whats-new-in-sea-orm-1.1/#house-keeping" class="hash-link" aria-label="Direct link to House Keeping" title="Direct link to House Keeping">​</a></h2>
<ul>
<li>Cleanup legacy <code>ActiveValue::Set</code> <a href="https://github.com/SeaQL/sea-orm/pull/2515" target="_blank" rel="noopener noreferrer">#2515</a></li>
<li>Remove <code>futures</code> crate, replace with <code>futures-util</code> <a href="https://github.com/SeaQL/sea-orm/pull/2466" target="_blank" rel="noopener noreferrer">#2466</a></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="release-planning">Release Planning<a href="https://www.sea-ql.org/blog/2025-03-08-whats-new-in-sea-orm-1.1/#release-planning" class="hash-link" aria-label="Direct link to Release Planning" title="Direct link to Release Planning">​</a></h2>
<p><a href="https://www.sea-ql.org/blog/2024-08-04-sea-orm-1.0/" target="_blank" rel="noopener noreferrer">SeaORM 1.0</a> is a stable release. As demonstrated, we are able to ship many new features without breaking the API. The 1.x version will be updated until at least October 2025, and we'll decide whether to release a 2.0 version or extend the 1.x life cycle.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="sql-server-support">SQL Server Support<a href="https://www.sea-ql.org/blog/2025-03-08-whats-new-in-sea-orm-1.1/#sql-server-support" class="hash-link" aria-label="Direct link to SQL Server Support" title="Direct link to SQL Server Support">​</a></h2>
<p>We've been beta-testing <a href="https://www.sea-ql.org/SeaORM-X/" target="_blank" rel="noopener noreferrer">SQL Server for SeaORM</a> for a while. If you are building software for your company, please <a href="https://forms.office.com/r/1MuRPJmYBR" target="_blank" rel="noopener noreferrer">request early access</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="sponsor">Sponsor<a href="https://www.sea-ql.org/blog/2025-03-08-whats-new-in-sea-orm-1.1/#sponsor" class="hash-link" aria-label="Direct link to Sponsor" title="Direct link to Sponsor">​</a></h2>
<p>If you feel generous, a small donation will be greatly appreciated, and goes a long way towards sustaining the organization.</p>
<p>A big shout out to our <a href="https://github.com/sponsors/SeaQL" target="_blank" rel="noopener noreferrer">GitHub sponsors</a> 😇:</p>
<div class="row"><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--m" href="https://github.com/numeusxyz"><img src="https://avatars.githubusercontent.com/u/82152211?s=200&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Numeus</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--m" href="https://github.com/caido-community"><img src="https://avatars.githubusercontent.com/u/168573261?s=200&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Caido</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--m" href="https://github.com/marcusbuffett"><img src="https://avatars.githubusercontent.com/u/1834328?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Marcus Buffett</p></div></div></div></div></div>
<br>
<div class="row"><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/mjkoo"><img src="https://avatars.githubusercontent.com/u/30420?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Maxwell Koo</p></div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/spencewenski"><img src="https://avatars.githubusercontent.com/u/3319370?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Spencer Ferris</p></div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/deansheather"><img src="https://avatars.githubusercontent.com/u/11241812?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Dean Sheather</p></div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/siketyan"><img src="https://avatars.githubusercontent.com/u/12772118?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Naoki Ikeguchi</p></div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/data-intuitive"><img src="https://avatars.githubusercontent.com/u/15045722?s=200&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Data Intuitive</p></div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/mmuellersoppart"><img src="https://avatars.githubusercontent.com/u/16762461?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Marlon Mueller</p></div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/yuly3"><img src="https://avatars.githubusercontent.com/u/25814001?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>MasakiMiyazaki</p></div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/manfredcml"><img src="https://avatars.githubusercontent.com/u/27536502?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Manfred Lee</p></div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/kallydev"><img src="https://avatars.githubusercontent.com/u/36319157?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>KallyDev</p></div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/tugascript"><img src="https://avatars.githubusercontent.com/u/64930104?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Afonso Barracha</p></div></div></div></div><div class="col col--4 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/gnuphie"><img src="https://avatars.githubusercontent.com/u/50941?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>gnuphie</p></div></div></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="wait-theres-one-more-thing">Wait... there's one more thing<a href="https://www.sea-ql.org/blog/2025-03-08-whats-new-in-sea-orm-1.1/#wait-theres-one-more-thing" class="hash-link" aria-label="Direct link to Wait... there's one more thing" title="Direct link to Wait... there's one more thing">​</a></h3>
<p>"Are we web yet?" is a recurring question in the Rust community, the answer is <em>yes</em>, yes, YES!</p>
<p>If you are looking for a batteries-included full-stack web development framework that is strongly-typed, asynchronous, robust and high-performance, look no further than <strong>Rust + Loco + SeaQL</strong>. We highly recommend giving <a href="https://loco.rs/" target="_blank" rel="noopener noreferrer">Loco</a> a try - "It’s Like Ruby on Rails, but for Rust."</p>
<p>With this final piece of software, my vision for a complete full-stack Rust environment is now realized. After years of development in SeaORM + Seaography, I am excited to introduce it to you:</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="️-seaorm-pro-professional-admin-panel">🖥️ SeaORM Pro: Professional Admin Panel<a href="https://www.sea-ql.org/blog/2025-03-08-whats-new-in-sea-orm-1.1/#%EF%B8%8F-seaorm-pro-professional-admin-panel" class="hash-link" aria-label="Direct link to 🖥️ SeaORM Pro: Professional Admin Panel" title="Direct link to 🖥️ SeaORM Pro: Professional Admin Panel">​</a></h2>
<img style="border-radius:25px" src="https://www.sea-ql.org/sea-orm-pro/img/01_banner.png#light">
<img style="border-radius:25px" src="https://www.sea-ql.org/sea-orm-pro/img/01_banner_dark.png#dark">
<p><a href="https://www.sea-ql.org/sea-orm-pro/" target="_blank" rel="noopener noreferrer">SeaORM Pro</a> is an admin panel solution allowing you to quickly and easily launch an admin panel for your application - frontend development skills not required, but certainly nice to have!</p>
<p>Features:</p>
<ul>
<li>Full CRUD</li>
<li>Built on React + GraphQL</li>
<li>Built-in GraphQL resolver</li>
<li>Customize the UI with simple TOML</li>
</ul>
<p>Learn More</p>
<ul>
<li><a href="https://github.com/SeaQL/sea-orm-pro" target="_blank" rel="noopener noreferrer">Example Repo</a></li>
<li><a href="https://www.sea-ql.org/sea-orm-pro/docs/install-and-config/getting-started-loco/" target="_blank" rel="noopener noreferrer">Getting Started with Loco</a></li>
<li><a href="https://www.sea-ql.org/sea-orm-pro/docs/install-and-config/getting-started-axum/" target="_blank" rel="noopener noreferrer">Getting Started with Axum</a></li>
</ul>]]></content>
        <author>
            <name>SeaQL Team</name>
            <uri>https://github.com/SeaQL</uri>
        </author>
        <category label="news" term="news"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Tutorial: Modeling Inheritance in SeaORM]]></title>
        <id>https://www.sea-ql.org/blog/2025-01-08-sea-orm-inheritance/</id>
        <link href="https://www.sea-ql.org/blog/2025-01-08-sea-orm-inheritance/"/>
        <updated>2025-01-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Introduction]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a href="https://www.sea-ql.org/blog/2025-01-08-sea-orm-inheritance/#introduction" class="hash-link" aria-label="Direct link to Introduction" title="Direct link to Introduction">​</a></h2>
<p>This tutorial walks you through the design and implementation of a REST API endpoint that involves some complex relational queries.</p>
<p>The API looks like this:</p>
<p><code>POST</code> <code>/api/v1/complex-products</code></p>
<p>Parameters (JSON body):</p>
<table><thead><tr><th>Field</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>id</code></td><td><code>int[]</code></td><td>Get products with these ids</td></tr><tr><td><code>name</code></td><td><code>string</code></td><td>Search products with name matching this</td></tr><tr><td><code>type</code></td><td><code>enum</code> of <code>ProductType</code></td><td>Limit products to this type</td></tr></tbody></table>
<p>Return example:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token property">"id"</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token property">"name"</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"Mountain Bike V2"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token property">"type"</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"Bike"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token property">"price"</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"2500.0"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token property">"lot_size"</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"1.0"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token property">"date_added"</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"2020-01-01T00:00:00"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token property">"last_modified"</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"2025-01-02T12:18:54"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token property">"history"</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token property">"from"</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"2020-01-01T00:00:00"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token property">"until"</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"2022-01-01T00:00:00"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token property">"name"</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"Mountain Bike V1"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="schema">Schema<a href="https://www.sea-ql.org/blog/2025-01-08-sea-orm-inheritance/#schema" class="hash-link" aria-label="Direct link to Schema" title="Direct link to Schema">​</a></h2>
<p>Imagine we run a store with many types of products. Each product type has its own attributes and we want to factor out the common product attributes to a base class.</p>
<p>In OOP terms:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">BaseProduct</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    r#</span><span class="token keyword" style="color:rgb(0, 0, 255)">type</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">ProductType</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// made up syntax, but it means inheritance</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">ComplexProduct</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">BaseProduct</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">enum</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">ProductType</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>In SQL terms, we have 3 entities and 2 relations among them:</p>
<ul>
<li><code>BaseProduct</code> -&gt; <code>ComplexProduct</code></li>
<li><code>BaseProduct</code> -&gt; <code>ProductType</code></li>
</ul>
<p>Below are the SeaORM Entities:</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="baseproduct"><code>BaseProduct</code><a href="https://www.sea-ql.org/blog/2025-01-08-sea-orm-inheritance/#baseproduct" class="hash-link" aria-label="Direct link to baseproduct" title="Direct link to baseproduct">​</a></h4>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(table_name = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"base_product"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(primary_key)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i64</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(unique)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> type_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// linking to product_type</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">enum</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Relation</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(has_one = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"super::complex_product::Entity"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">ComplexProduct</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(has_many = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"super::product_history::Entity"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">ProductHistory</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(</span><br></span><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">        belongs_to = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"super::product_type::Entity"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">,</span><br></span><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">        from = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"Column::TypeId"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">,</span><br></span><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">        to = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"super::product_type::Column::Id"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">,</span><br></span><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">        on_update = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"NoAction"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">,</span><br></span><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">        on_delete = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"NoAction"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)"></span><br></span><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">    )]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">ProductType</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="complexproduct"><code>ComplexProduct</code><a href="https://www.sea-ql.org/blog/2025-01-08-sea-orm-inheritance/#complexproduct" class="hash-link" aria-label="Direct link to complexproduct" title="Direct link to complexproduct">​</a></h4>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(table_name = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"complex_product"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(primary_key, auto_increment = false)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> product_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i64</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// linking to base_product</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(column_type = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"Decimal(Some((30, 15)))"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">, nullable)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> price</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Option</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Decimal</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(column_type = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"Decimal(Some((30, 15)))"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">, nullable)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> lot_size</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Option</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Decimal</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> date_added</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DateTime</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> last_modified</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DateTime</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">enum</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Relation</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(</span><br></span><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">        belongs_to = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"super::base_product::Entity"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">,</span><br></span><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">        from = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"Column::ProductId"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">,</span><br></span><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">        to = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"super::base_product::Column::Id"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">,</span><br></span><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">        on_update = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"NoAction"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">,</span><br></span><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">        on_delete = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"Cascade"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)"></span><br></span><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">    )]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">BaseProduct</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="producttype"><code>ProductType</code><a href="https://www.sea-ql.org/blog/2025-01-08-sea-orm-inheritance/#producttype" class="hash-link" aria-label="Direct link to producttype" title="Direct link to producttype">​</a></h4>
<p>Basically an 'enum table'.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(table_name = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"product_type"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(primary_key)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(unique)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">enum</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Relation</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(has_many = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"super::base_product::Entity"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">BaseProduct</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="1-define-result-data-structure">1. Define result data structure<a href="https://www.sea-ql.org/blog/2025-01-08-sea-orm-inheritance/#1-define-result-data-structure" class="hash-link" aria-label="Direct link to 1. Define result data structure" title="Direct link to 1. Define result data structure">​</a></h2>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Clone, Debug, PartialEq, Eq, FromQueryResult, Serialize)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">ComplexProduct</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i64</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> r#</span><span class="token keyword" style="color:rgb(0, 0, 255)">type</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> price</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Decimal</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> lot_size</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Decimal</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> date_added</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DateTime</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> last_modified</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DateTime</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(skip)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> history</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Vec</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token namespace">product_history</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>With <code>Serialize</code>, you can transform the select result into JSON directly.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="2-define-helper-aliases">2. Define helper aliases<a href="https://www.sea-ql.org/blog/2025-01-08-sea-orm-inheritance/#2-define-helper-aliases" class="hash-link" aria-label="Direct link to 2. Define helper aliases" title="Direct link to 2. Define helper aliases">​</a></h2>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(DeriveIden, Clone, Copy)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(DeriveIden, Clone, Copy)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(DeriveIden, Clone, Copy)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Base</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">use</span><span class="token plain"> </span><span class="token namespace">complex_product</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">as</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Prod</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">type</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">ProdCol</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Prod</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">as</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">EntityTrait</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">type</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">ProdRel</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Prod</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">as</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">EntityTrait</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Relation</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>This would make our code much more concise and readable.</p>
<p>Avoid using <code>Alias::new</code> because it's error-prone and slightly more expensive.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="3-custom-selects">3. Custom selects<a href="https://www.sea-ql.org/blog/2025-01-08-sea-orm-inheritance/#3-custom-selects" class="hash-link" aria-label="Direct link to 3. Custom selects" title="Direct link to 3. Custom selects">​</a></h2>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Select</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token namespace">complex_product</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token namespace">complex_product</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">find</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">select_only</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">tbl_col_as</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Base</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"id"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">tbl_col_as</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Base</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"name"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">column_as</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">product_type</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"type"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">column_as</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ProdCol</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Price</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"price"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">column_as</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ProdCol</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">LotSize</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"lot_size"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">column_as</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ProdCol</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">DateAdded</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"date_added"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">column_as</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ProdCol</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">LastModified</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"last_modified"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">join_as</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">JoinType</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">InnerJoin</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">ProdRel</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">BaseProduct</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">def</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Base</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">join</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">JoinType</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">InnerJoin</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token namespace">base_product</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Relation</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ProductType</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">def</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">from_alias</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Base</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">order_by_asc</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Expr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Base</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>Our query starts from <code>ComplexProduct</code>. We join back to <code>BaseProduct</code>, alias it as <code>Base</code>. We then join to <code>ProductType</code> via <code>Base</code>:</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">ComplexProduct -&gt; BaseProduct as Base -&gt; ProductType</span><br></span></code></pre></div></div>
<p><a href="https://docs.rs/sea-orm/latest/sea_orm/query/trait.QuerySelect.html#method.column_as" target="_blank" rel="noopener noreferrer"><code>column_as</code></a> automatically prefix the column with the table name.
<a href="https://docs.rs/sea-orm/latest/sea_orm/entity/struct.RelationDef.html#method.from_alias" target="_blank" rel="noopener noreferrer"><code>from_alias</code></a> is doing the magic here, allowing us to reuse the existing Relation by overwriting the left hand side of the on condition.</p>
<p>You can use the <a href="https://docs.rs/sea-orm/latest/sea_orm/query/trait.QuerySelect.html#method.join" target="_blank" rel="noopener noreferrer"><code>join</code></a> method to construct complex joins in select queries. It takes any <a href="https://docs.rs/sea-orm/latest/sea_orm/entity/struct.RelationDef.html" target="_blank" rel="noopener noreferrer"><code>RelationDef</code></a>, and you can further customize the join conditions. You can find more examples <a href="https://www.sea-ql.org/SeaORM/docs/advanced-query/advanced-joins/#custom-join-conditions" target="_blank" rel="noopener noreferrer">here</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="4-filter-conditions">4. Filter Conditions<a href="https://www.sea-ql.org/blog/2025-01-08-sea-orm-inheritance/#4-filter-conditions" class="hash-link" aria-label="Direct link to 4. Filter Conditions" title="Direct link to 4. Filter Conditions">​</a></h2>
<p>Let's define struct for query parameters. Again, using serde here so it can be deserialized from JSON.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Default, Deserialize)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Query</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[serde(default)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Vec</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token keyword" style="color:rgb(0, 0, 255)">i64</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// if unspecified, will be an empty vec</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Option</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> r#</span><span class="token keyword" style="color:rgb(0, 0, 255)">type</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Option</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>Then, we transform the parameters into SQL where conditions:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">condition</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Condition</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Condition</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">all</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">add_option</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">if</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">!</span><span class="token plain">query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">is_empty</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token class-name" style="color:rgb(38, 127, 153)">Some</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Expr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Base</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">is_in</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">else</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">None</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">add_option</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">if</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Some</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">name </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token class-name" style="color:rgb(38, 127, 153)">Some</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Expr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Base</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">like</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">else</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">None</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">add_option</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">if</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Some</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">r#</span><span class="token keyword" style="color:rgb(0, 0, 255)">type</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">r#</span><span class="token keyword" style="color:rgb(0, 0, 255)">type</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token class-name" style="color:rgb(38, 127, 153)">Some</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">product_type</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">eq</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">r#</span><span class="token keyword" style="color:rgb(0, 0, 255)">type</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">else</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">None</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>Bonus tip: if you're only using Postgres you can replace <code>is_in</code> with <code>any</code>:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">use</span><span class="token plain"> </span><span class="token namespace">sea_orm</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">sea_query</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">extension</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">postgres</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">PgFunc</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token class-name" style="color:rgb(38, 127, 153)">Expr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Base</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">eq</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">PgFunc</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">any</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// WHERE base.id = ANY($N)</span><br></span></code></pre></div></div>
<p>Combining the above functions, here is how we implement the API endpoint:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">query_products</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DbConn</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> q</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Result</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Vec</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">ComplexProduct</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DbErr</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token function" style="color:rgb(0, 0, 255)">query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">filter</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token function" style="color:rgb(0, 0, 255)">condition</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">q</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into_model</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">ComplexProduct</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">all</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="5-associated-models">5. Associated models<a href="https://www.sea-ql.org/blog/2025-01-08-sea-orm-inheritance/#5-associated-models" class="hash-link" aria-label="Direct link to 5. Associated models" title="Direct link to 5. Associated models">​</a></h2>
<p>Suppose we have a data structure associated with each <code>BaseProduct</code> recording its history.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="producthistory"><code>ProductHistory</code><a href="https://www.sea-ql.org/blog/2025-01-08-sea-orm-inheritance/#producthistory" class="hash-link" aria-label="Direct link to producthistory" title="Direct link to producthistory">​</a></h4>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(table_name = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"product_history"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(primary_key)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[serde(skip)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[serde(skip)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> product_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i64</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> from</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DateTime</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> until</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DateTime</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Option</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">enum</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Relation</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(</span><br></span><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">        belongs_to = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"super::base_product::Entity"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">,</span><br></span><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">        from = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"Column::ProductId"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">,</span><br></span><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">        to = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"super::base_product::Column::Id"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">,</span><br></span><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">        on_update = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"NoAction"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">,</span><br></span><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">        on_delete = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"Cascade"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)"></span><br></span><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">    )]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">BaseProduct</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>Let's make a helper function to query the histories associated to a set of products:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">history_of</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">ids</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Vec</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token keyword" style="color:rgb(0, 0, 255)">i64</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Select</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token namespace">product_history</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token namespace">product_history</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">find</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">filter</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Expr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">product_history</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ProductId</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">is_in</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">ids</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">order_by_asc</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">product_history</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> histories </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(0, 0, 255)">history_of</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">products</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">iter</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">map</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token closure-params closure-punctuation punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token closure-params">s</span><span class="token closure-params closure-punctuation punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token plain"> s</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">collect</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Vec</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token plain">_</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">all</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>The final step is to associate <code>product_history::Model</code> to <code>ComplexProduct</code>:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)">// parent should be unique and already ordered by id.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">associate</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">mut</span><span class="token plain"> parent</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Vec</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">ComplexProduct</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    children</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Vec</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token namespace">product_history</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Vec</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">ComplexProduct</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> len </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> parent</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">len</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    parent</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">dedup_by_key</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token closure-params closure-punctuation punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token closure-params">s</span><span class="token closure-params closure-punctuation punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token plain"> s</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">if</span><span class="token plain"> len </span><span class="token operator" style="color:rgb(0, 0, 0)">!=</span><span class="token plain"> parent</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">len</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token macro property">warn!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"parent is not unique."</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> parent_id_map</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">HashMap</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token keyword" style="color:rgb(0, 0, 255)">i64</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">usize</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> parent</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">iter</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">enumerate</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">map</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token closure-params closure-punctuation punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token closure-params punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token closure-params">i</span><span class="token closure-params punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token closure-params"> s</span><span class="token closure-params punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token closure-params closure-punctuation punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">s</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> i</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">collect</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">// put children into associated parent</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> item </span><span class="token keyword" style="color:rgb(0, 0, 255)">in</span><span class="token plain"> children </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">if</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Some</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">index</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> parent_id_map</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">get</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">item</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">product_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            parent</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token operator" style="color:rgb(0, 0, 0)">*</span><span class="token plain">index</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">history</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">push</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">item</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    parent</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> products </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(0, 0, 255)">associate</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">products</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> histories</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>This is sometimes called "data loader" pattern, and can be generalized with generics to work with any models.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://www.sea-ql.org/blog/2025-01-08-sea-orm-inheritance/#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion">​</a></h2>
<p>SeaORM's type system encourages you to write modular and reusable code, embracing the "Don't repeat yourself" principle.</p>
<p>You define the Entities and Relations once.</p>
<p>You define the aliases and query helpers once.</p>
<p>You can pass the <a href="https://docs.rs/sea-orm/latest/sea_orm/query/struct.Select.html" target="_blank" rel="noopener noreferrer"><code>Select&lt;T&gt;</code></a> and <a href="https://docs.rs/sea-orm/latest/sea_orm/query/struct.Condition.html" target="_blank" rel="noopener noreferrer"><code>Condition</code></a> around.</p>
<p>You then assemble these pieces together to implement any complex API!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="rustacean-sticker-pack-">Rustacean Sticker Pack 🦀<a href="https://www.sea-ql.org/blog/2025-01-08-sea-orm-inheritance/#rustacean-sticker-pack-" class="hash-link" aria-label="Direct link to Rustacean Sticker Pack 🦀" title="Direct link to Rustacean Sticker Pack 🦀">​</a></h2>
<p>The Rustacean Sticker Pack is the perfect way to express your passion for Rust.
Our stickers are made with a premium water-resistant vinyl with a unique matte finish.
Stick them on your laptop, notebook, or any gadget to show off your love for Rust!</p>
<p>Moreover, all proceeds contributes directly to the ongoing development of SeaQL projects.</p>
<p>Sticker Pack Contents:</p>
<ul>
<li>Logo of SeaQL projects: SeaQL, SeaORM, SeaQuery, Seaography, FireDBG</li>
<li>Mascot of SeaQL: Terres the Hermit Crab</li>
<li>Mascot of Rust: Ferris the Crab</li>
<li>The Rustacean word</li>
</ul>
<p><a href="https://www.sea-ql.org/sticker-pack/" target="_blank" rel="noopener noreferrer">Support SeaQL and get a Sticker Pack!</a></p>
<a href="https://www.sea-ql.org/sticker-pack/"><img style="border-radius:25px" alt="Rustacean Sticker Pack by SeaQL" src="https://www.sea-ql.org/static/sticker-pack-1s.jpg"></a>]]></content>
        <author>
            <name>SeaQL Team</name>
            <uri>https://github.com/SeaQL</uri>
        </author>
        <category label="news" term="news"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[SeaQL Community Survey 2024 Results]]></title>
        <id>https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/</id>
        <link href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/"/>
        <updated>2025-01-02T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[695 members of the SeaQL community from 47 countries kindly contributed their thoughts on using SeaQL libraries, learning Rust and employing Rust in their day to day development lives. From these responses we hope to get an understanding of where the SeaQL and Rust community stands in 2024.]]></summary>
        <content type="html"><![CDATA[<p>695 members of the SeaQL community from 47 countries kindly contributed their thoughts on using SeaQL libraries, learning Rust and employing Rust in their day to day development lives. From these responses we hope to get an understanding of where the SeaQL and Rust community stands in 2024.</p>
<p>This is our first community survey, we will conduct the survey annually to keep track of how the community evolves over time.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="developer-profile">Developer Profile<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#developer-profile" class="hash-link" aria-label="Direct link to Developer Profile" title="Direct link to Developer Profile">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="q-where-are-you-located-in">Q. Where are you located in?<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#q-where-are-you-located-in" class="hash-link" aria-label="Direct link to Q. Where are you located in?" title="Direct link to Q. Where are you located in?">​</a></h3>
<p>Participants are from 47 countries across the world!</p>
<div style="margin-bottom:60px"><canvas id="24country" class="chart-js" style="width:100%;margin:auto auto;margin-bottom:10px"></canvas><p>Other: <span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Armenia</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Azerbaijan</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Bangladesh</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Cambodia</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Colombia </span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Croatia</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Czech Republic</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Denmark</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Egypt</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Finland</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Guatemala</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Israel</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Italy</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Kazakhstan</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Kenya</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Nepal</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Romania</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Saudi Arabia</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Slovakia</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Slovenia</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">South Africa</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Spain</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Sweden</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Syria</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Turkey</span></p></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="q-including-any-education-how-many-years-have-you-been-coding-in-total">Q. Including any education, how many years have you been coding in total?<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#q-including-any-education-how-many-years-have-you-been-coding-in-total" class="hash-link" aria-label="Direct link to Q. Including any education, how many years have you been coding in total?" title="Direct link to Q. Including any education, how many years have you been coding in total?">​</a></h3>
<div style="margin-bottom:60px"><canvas id="24codingYears" class="chart-js" style="width:100%;margin:auto auto;margin-bottom:10px"></canvas></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="q-which-of-the-following-describes-your-current-job-the-one-you-do-most-of-the-time">Q. Which of the following describes your current job, the one you do most of the time?<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#q-which-of-the-following-describes-your-current-job-the-one-you-do-most-of-the-time" class="hash-link" aria-label="Direct link to Q. Which of the following describes your current job, the one you do most of the time?" title="Direct link to Q. Which of the following describes your current job, the one you do most of the time?">​</a></h3>
<div style="margin-bottom:60px"><canvas id="24jobTitle" class="chart-js" style="width:100%;margin:auto auto;margin-bottom:10px"></canvas><p>Other: <span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Academic researcher</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Marketing or sales professional</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Engineer, data</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Data or business analyst</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Solution Architect</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Developer, QA or test</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Designer</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Developer, game or graphics</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Hobbyist Developer</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Educator</span></p></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="using-seaql-libraries-in-building-a-project">Using SeaQL Libraries in Building a Project<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#using-seaql-libraries-in-building-a-project" class="hash-link" aria-label="Direct link to Using SeaQL Libraries in Building a Project" title="Direct link to Using SeaQL Libraries in Building a Project">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="q-roughly-how-long-have-you-been-using-seaql-libraries">Q. Roughly how long have you been using SeaQL libraries?<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#q-roughly-how-long-have-you-been-using-seaql-libraries" class="hash-link" aria-label="Direct link to Q. Roughly how long have you been using SeaQL libraries?" title="Direct link to Q. Roughly how long have you been using SeaQL libraries?">​</a></h3>
<div style="margin-bottom:60px"><canvas id="24seaqlYears" class="chart-js" style="width:100%;margin:auto auto;margin-bottom:10px"></canvas></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="q-which-seaql-libraries-are-you-using">Q. Which SeaQL libraries are you using?<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#q-which-seaql-libraries-are-you-using" class="hash-link" aria-label="Direct link to Q. Which SeaQL libraries are you using?" title="Direct link to Q. Which SeaQL libraries are you using?">​</a></h3>
<div style="margin-bottom:60px"><canvas id="24seaqlLibs" class="chart-js" style="width:100%;margin:auto auto;margin-bottom:10px"></canvas></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="q-are-you-using-seaql-libraries-in-a-personal-academic-or-professional-context">Q. Are you using SeaQL libraries in a personal, academic or professional context?<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#q-are-you-using-seaql-libraries-in-a-personal-academic-or-professional-context" class="hash-link" aria-label="Direct link to Q. Are you using SeaQL libraries in a personal, academic or professional context?" title="Direct link to Q. Are you using SeaQL libraries in a personal, academic or professional context?">​</a></h3>
<div style="margin-bottom:60px"><canvas id="24seaqlLibContext" class="chart-js" style="width:100%;margin:auto auto;margin-bottom:10px"></canvas></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="q-how-many-team-members-including-you-are-working-on-the-project">Q. How many team members (including you) are working on the project?<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#q-how-many-team-members-including-you-are-working-on-the-project" class="hash-link" aria-label="Direct link to Q. How many team members (including you) are working on the project?" title="Direct link to Q. How many team members (including you) are working on the project?">​</a></h3>
<div style="margin-bottom:60px"><canvas id="24numTeamMembers" class="chart-js" style="width:100%;margin:auto auto;margin-bottom:10px"></canvas></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="q-can-you-categorize-the-nature-of-the-project">Q. Can you categorize the nature of the project?<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#q-can-you-categorize-the-nature-of-the-project" class="hash-link" aria-label="Direct link to Q. Can you categorize the nature of the project?" title="Direct link to Q. Can you categorize the nature of the project?">​</a></h3>
<div style="margin-bottom:60px"><canvas id="24projNature" class="chart-js" style="width:100%;margin:auto auto;margin-bottom:10px"></canvas><p>Other: <span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Backend for a Web 3.0 Application</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">IoT Application</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Backend System</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">A Document Generator</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Mobile Project</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">SaaS</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Database for a Cybersecurity Software</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">API</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">学习项目</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Backend for a Multiplatform Application (Using Tauri)</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Frontend + Backend Work</span></p></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="q-what-is-your-development-environment">Q. What is your development environment?<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#q-what-is-your-development-environment" class="hash-link" aria-label="Direct link to Q. What is your development environment?" title="Direct link to Q. What is your development environment?">​</a></h3>
<div style="margin-bottom:60px"><canvas id="24devEnv" class="chart-js" style="width:100%;margin:auto auto;margin-bottom:10px"></canvas></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="linux-breakdown">Linux Breakdown<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#linux-breakdown" class="hash-link" aria-label="Direct link to Linux Breakdown" title="Direct link to Linux Breakdown">​</a></h3>
<div style="margin-bottom:60px"><canvas id="24devEnvLinux" class="chart-js" style="width:100%;margin:auto auto;margin-bottom:10px"></canvas></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="windows-breakdown">Windows Breakdown<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#windows-breakdown" class="hash-link" aria-label="Direct link to Windows Breakdown" title="Direct link to Windows Breakdown">​</a></h3>
<div style="margin-bottom:60px"><canvas id="24devEnvWindows" class="chart-js" style="width:100%;margin:auto auto;margin-bottom:10px"></canvas></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="macos-breakdown">macOS Breakdown<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#macos-breakdown" class="hash-link" aria-label="Direct link to macOS Breakdown" title="Direct link to macOS Breakdown">​</a></h3>
<div style="margin-bottom:60px"><canvas id="24devEnvMac" class="chart-js" style="width:100%;margin:auto auto;margin-bottom:10px"></canvas></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="q-which-databases-do-you-use">Q. Which database(s) do you use?<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#q-which-databases-do-you-use" class="hash-link" aria-label="Direct link to Q. Which database(s) do you use?" title="Direct link to Q. Which database(s) do you use?">​</a></h3>
<div style="margin-bottom:60px"><canvas id="24databases" class="chart-js" style="width:100%;margin:auto auto;margin-bottom:10px"></canvas><p>Other: <span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">SurrealDB</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">EdgeDB</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">MariaDB</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">MariaDB Galera Cluster</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">MongoDB</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">libSQL</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">MSSQL</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">TImescale</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Yugabyte</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Oracle Database</span></p></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="q-which-web-framework-are-you-using">Q. Which web framework are you using?<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#q-which-web-framework-are-you-using" class="hash-link" aria-label="Direct link to Q. Which web framework are you using?" title="Direct link to Q. Which web framework are you using?">​</a></h3>
<div style="margin-bottom:60px"><canvas id="24webFrameworks" class="chart-js" style="width:100%;margin:auto auto;margin-bottom:10px"></canvas><p>Other: <span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">SolidJS</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Tauri</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Tonic</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">trillium</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Vue</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Warp</span></p></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="q-what-is-the-deployment-environment">Q. What is the deployment environment?<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#q-what-is-the-deployment-environment" class="hash-link" aria-label="Direct link to Q. What is the deployment environment?" title="Direct link to Q. What is the deployment environment?">​</a></h3>
<div style="margin-bottom:60px"><canvas id="24deploymentEnv" class="chart-js" style="width:100%;margin:auto auto;margin-bottom:10px"></canvas><p>Other: <span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">DigitalOcean App Platform</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">DogYun</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Fly.io</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Oracle Cloud</span></p></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="using-rust-at-work">Using Rust at Work<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#using-rust-at-work" class="hash-link" aria-label="Direct link to Using Rust at Work" title="Direct link to Using Rust at Work">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="q-are-you-using-rust-at-work">Q. Are you using Rust at work?<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#q-are-you-using-rust-at-work" class="hash-link" aria-label="Direct link to Q. Are you using Rust at work?" title="Direct link to Q. Are you using Rust at work?">​</a></h3>
<div style="margin-bottom:60px"><canvas id="24usingRustForWork" class="chart-js" style="width:100%;margin:auto auto;margin-bottom:10px"></canvas></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="q-which-industry-your-company-is-in">Q. Which industry your company is in?<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#q-which-industry-your-company-is-in" class="hash-link" aria-label="Direct link to Q. Which industry your company is in?" title="Direct link to Q. Which industry your company is in?">​</a></h3>
<div style="margin-bottom:60px"><canvas id="24industry" class="chart-js" style="width:100%;margin:auto auto;margin-bottom:10px"></canvas><p>Other: <span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Space Situational Awareness</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Security</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Ads</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Betting</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Construction</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Automotive</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Last Mile Logistics</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">IoT</span></p></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="q-how-many-engineers-in-your-company-are-dedicated-to-writing-rust">Q. How many engineers in your company are dedicated to writing Rust?<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#q-how-many-engineers-in-your-company-are-dedicated-to-writing-rust" class="hash-link" aria-label="Direct link to Q. How many engineers in your company are dedicated to writing Rust?" title="Direct link to Q. How many engineers in your company are dedicated to writing Rust?">​</a></h3>
<div style="margin-bottom:60px"><canvas id="24numEngineers" class="chart-js" style="width:100%;margin:auto auto;margin-bottom:10px"></canvas></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="q-what-is-the-size-of-your-company">Q. What is the size of your company?<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#q-what-is-the-size-of-your-company" class="hash-link" aria-label="Direct link to Q. What is the size of your company?" title="Direct link to Q. What is the size of your company?">​</a></h3>
<div style="margin-bottom:60px"><canvas id="24companySize" class="chart-js" style="width:100%;margin:auto auto;margin-bottom:10px"></canvas></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="q-which-layers-of-the-technology-stack-are-using-rust">Q. Which layer(s) of the technology stack are using Rust?<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#q-which-layers-of-the-technology-stack-are-using-rust" class="hash-link" aria-label="Direct link to Q. Which layer(s) of the technology stack are using Rust?" title="Direct link to Q. Which layer(s) of the technology stack are using Rust?">​</a></h3>
<div style="margin-bottom:60px"><canvas id="24techStack" class="chart-js" style="width:100%;margin:auto auto;margin-bottom:10px"></canvas><p>Other: <span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Embedded</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Hardware Drivers</span></p></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="q-would-your-company-be-interested-in-using-seaql-libraries-with-other-databases">Q. Would your company be interested in using SeaQL libraries with other databases?<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#q-would-your-company-be-interested-in-using-seaql-libraries-with-other-databases" class="hash-link" aria-label="Direct link to Q. Would your company be interested in using SeaQL libraries with other databases?" title="Direct link to Q. Would your company be interested in using SeaQL libraries with other databases?">​</a></h3>
<div style="margin-bottom:60px"><canvas id="24otherDatabases" class="chart-js" style="width:100%;margin:auto auto;margin-bottom:10px"></canvas></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="learning-rust">Learning Rust<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#learning-rust" class="hash-link" aria-label="Direct link to Learning Rust" title="Direct link to Learning Rust">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="q-are-you-learning--new-to-rust">Q. Are you learning / new to Rust?<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#q-are-you-learning--new-to-rust" class="hash-link" aria-label="Direct link to Q. Are you learning / new to Rust?" title="Direct link to Q. Are you learning / new to Rust?">​</a></h3>
<div style="margin-bottom:60px"><canvas id="24learningRust" class="chart-js" style="width:100%;margin:auto auto;margin-bottom:10px"></canvas></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="q-which-languages-are-you-most-familiar-with">Q. Which language(s) are you most familiar with?<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#q-which-languages-are-you-most-familiar-with" class="hash-link" aria-label="Direct link to Q. Which language(s) are you most familiar with?" title="Direct link to Q. Which language(s) are you most familiar with?">​</a></h3>
<div style="margin-bottom:60px"><canvas id="24familiarLang" class="chart-js" style="width:100%;margin:auto auto;margin-bottom:10px"></canvas><p>Other: <span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Erlang</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Cobol</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Lua</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Perl</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">RPG</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Assembly</span></p></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="q-do-you-find-rust-easy-or-hard-to-learn">Q. Do you find Rust easy or hard to learn?<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#q-do-you-find-rust-easy-or-hard-to-learn" class="hash-link" aria-label="Direct link to Q. Do you find Rust easy or hard to learn?" title="Direct link to Q. Do you find Rust easy or hard to learn?">​</a></h3>
<div style="margin-bottom:60px"><canvas id="24rustDifficulty" class="chart-js" style="width:100%;margin:auto auto;margin-bottom:10px"></canvas></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="q-what-motivates-you-to-learn-rust">Q. What motivates you to learn Rust?<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#q-what-motivates-you-to-learn-rust" class="hash-link" aria-label="Direct link to Q. What motivates you to learn Rust?" title="Direct link to Q. What motivates you to learn Rust?">​</a></h3>
<div style="margin-bottom:60px"><canvas id="24rustMotivation" class="chart-js" style="width:100%;margin:auto auto;margin-bottom:10px"></canvas><p>Other: <span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">School makes me to learn</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Better option to learn than C/C++</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">it's fantastic</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Stability of ecosystem, security, speed</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">The ease of writing clean code</span></p></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="q-what-learning-resources-do-you-rely-on">Q. What learning resources do you rely on?<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#q-what-learning-resources-do-you-rely-on" class="hash-link" aria-label="Direct link to Q. What learning resources do you rely on?" title="Direct link to Q. What learning resources do you rely on?">​</a></h3>
<div style="margin-bottom:60px"><canvas id="24learningResources" class="chart-js" style="width:100%;margin:auto auto;margin-bottom:10px"></canvas></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="q-what-is-your-first-project-built-using-rust">Q. What is your first project built using Rust?<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#q-what-is-your-first-project-built-using-rust" class="hash-link" aria-label="Direct link to Q. What is your first project built using Rust?" title="Direct link to Q. What is your first project built using Rust?">​</a></h3>
<div style="margin-bottom:60px"><canvas id="24firstRustProj" class="chart-js" style="width:100%;margin:auto auto;margin-bottom:10px"></canvas></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="q-are-you-familiar-with-sql">Q. Are you familiar with SQL?<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#q-are-you-familiar-with-sql" class="hash-link" aria-label="Direct link to Q. Are you familiar with SQL?" title="Direct link to Q. Are you familiar with SQL?">​</a></h3>
<div style="margin-bottom:60px"><canvas id="24familiarSql" class="chart-js" style="width:100%;margin:auto auto;margin-bottom:10px"></canvas></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="about-seaql-libraries">About SeaQL Libraries<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#about-seaql-libraries" class="hash-link" aria-label="Direct link to About SeaQL Libraries" title="Direct link to About SeaQL Libraries">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="q-why-did-you-choose-seaql-libraries">Q. Why did you choose SeaQL libraries?<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#q-why-did-you-choose-seaql-libraries" class="hash-link" aria-label="Direct link to Q. Why did you choose SeaQL libraries?" title="Direct link to Q. Why did you choose SeaQL libraries?">​</a></h3>
<div style="margin-bottom:60px"><canvas id="24whySeaql" class="chart-js" style="width:100%;margin:auto auto;margin-bottom:10px"></canvas><p>Other: <span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">sea-orm-cli codegen</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Ergonomic API</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Word of mouth</span></p></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="q-which-aspects-do-you-want-to-see-advancement-on-seaorm">Q. Which aspects do you want to see advancement on SeaORM?<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#q-which-aspects-do-you-want-to-see-advancement-on-seaorm" class="hash-link" aria-label="Direct link to Q. Which aspects do you want to see advancement on SeaORM?" title="Direct link to Q. Which aspects do you want to see advancement on SeaORM?">​</a></h3>
<div style="margin-bottom:60px"><canvas id="24whatAdvancement" class="chart-js" style="width:100%;margin:auto auto;margin-bottom:10px"></canvas><p>Other: <span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Better macros for less boilerplate code</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Automatic migration</span><span class="badge badge--secondary badge-dark-mode" style="margin-right:6px;margin-bottom:6px">Schema diffing for migrations</span></p></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="q-what-tools-would-you-be-interested-in-using-if-developed-first-party-by-seaql">Q. What tools would you be interested in using, if developed first-party by SeaQL?<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#q-what-tools-would-you-be-interested-in-using-if-developed-first-party-by-seaql" class="hash-link" aria-label="Direct link to Q. What tools would you be interested in using, if developed first-party by SeaQL?" title="Direct link to Q. What tools would you be interested in using, if developed first-party by SeaQL?">​</a></h3>
<div style="margin-bottom:60px"><canvas id="24whatTool" class="chart-js" style="width:100%;margin:auto auto;margin-bottom:10px"></canvas></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="share-your-thoughts">Share Your Thoughts<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#share-your-thoughts" class="hash-link" aria-label="Direct link to Share Your Thoughts" title="Direct link to Share Your Thoughts">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="q-anything-else-you-want-to-say">Q. Anything else you want to say?<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#q-anything-else-you-want-to-say" class="hash-link" aria-label="Direct link to Q. Anything else you want to say?" title="Direct link to Q. Anything else you want to say?">​</a></h3>
<p>Didn't expect this section to turn into a testimonial, thank you for all the kind words :)</p>
<blockquote>
<p>Love your toolchain, it's awesome to work with!</p>
</blockquote>
<blockquote>
<p>Wonderful library! To provide some additional feedback: I found myself missing documentation in certain parts of the API, leading to me having to guess what the method actually does for a given database backend (namely in relation to query builders).</p>
</blockquote>
<blockquote>
<p>Schema/migration management would be really nice. I have used Django in the past and loved the automatic migration file generation.</p>
</blockquote>
<blockquote>
<p>SeaORM is great - it just replaces existing asp.net entity framework projects at our company.</p>
</blockquote>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="rustacean-sticker-pack-">Rustacean Sticker Pack 🦀<a href="https://www.sea-ql.org/blog/2025-01-02-community-survey-2024/#rustacean-sticker-pack-" class="hash-link" aria-label="Direct link to Rustacean Sticker Pack 🦀" title="Direct link to Rustacean Sticker Pack 🦀">​</a></h2>
<p>The Rustacean Sticker Pack is the perfect way to express your passion for Rust.
Our stickers are made with a premium water-resistant vinyl with a unique matte finish.
Stick them on your laptop, notebook, or any gadget to show off your love for Rust!</p>
<p>Moreover, all proceeds contributes directly to the ongoing development of SeaQL projects.</p>
<p>Sticker Pack Contents:</p>
<ul>
<li>Logo of SeaQL projects: SeaQL, SeaORM, SeaQuery, Seaography, FireDBG</li>
<li>Mascot of SeaQL: Terres the Hermit Crab</li>
<li>Mascot of Rust: Ferris the Crab</li>
<li>The Rustacean word</li>
</ul>
<p><a href="https://www.sea-ql.org/sticker-pack/" target="_blank" rel="noopener noreferrer">Support SeaQL and get a Sticker Pack!</a></p>
<a href="https://www.sea-ql.org/sticker-pack/"><img style="border-radius:25px" alt="Rustacean Sticker Pack by SeaQL" src="https://www.sea-ql.org/static/sticker-pack-1s.jpg"></a>]]></content>
        <author>
            <name>Billy Chan</name>
            <uri>https://github.com/billy1624</uri>
        </author>
        <category label="news" term="news"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[What's new in SeaQuery 0.32.x]]></title>
        <id>https://www.sea-ql.org/blog/2024-12-03-whats-new-in-seaquery-0.32.x/</id>
        <link href="https://www.sea-ql.org/blog/2024-12-03-whats-new-in-seaquery-0.32.x/"/>
        <updated>2024-12-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[🎉 We are pleased to release SeaQuery 0.32.0 / 0.32.1! Here are some feature highlights 🌟:]]></summary>
        <content type="html"><![CDATA[<p>🎉 We are pleased to release SeaQuery <a href="https://github.com/SeaQL/sea-query/releases/tag/0.32.0" target="_blank" rel="noopener noreferrer"><code>0.32.0</code></a> / <a href="https://github.com/SeaQL/sea-query/releases/tag/0.32.1" target="_blank" rel="noopener noreferrer"><code>0.32.1</code></a>! Here are some feature highlights 🌟:</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="new-features">New Features<a href="https://www.sea-ql.org/blog/2024-12-03-whats-new-in-seaquery-0.32.x/#new-features" class="hash-link" aria-label="Direct link to New Features" title="Direct link to New Features">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="unify-expr-and-simpleexpr-methods-with-exprtrait-791">Unify <code>Expr</code> and <code>SimpleExpr</code> Methods with <code>ExprTrait</code> <a href="https://github.com/SeaQL/sea-query/pull/791" target="_blank" rel="noopener noreferrer">#791</a><a href="https://www.sea-ql.org/blog/2024-12-03-whats-new-in-seaquery-0.32.x/#unify-expr-and-simpleexpr-methods-with-exprtrait-791" class="hash-link" aria-label="Direct link to unify-expr-and-simpleexpr-methods-with-exprtrait-791" title="Direct link to unify-expr-and-simpleexpr-methods-with-exprtrait-791">​</a></h3>
<p>Previously, "operator" methods (e.g. <code>add</code>, <code>eq</code>) are duplicated across <code>Expr</code> and <code>SimpleExpr</code>, but the list of methods is slightly different for each. And since <code>Expr</code> and <code>SimpleExpr</code> are distinct types, it makes writing generic code difficult.</p>
<p>The <a href="https://docs.rs/sea-query/0.32.1/sea_query/expr/trait.ExprTrait.html" target="_blank" rel="noopener noreferrer"><code>ExprTrait</code></a> looks like this:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">trait</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">ExprTrait</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Sized</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">// Required methods</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">as_enum</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">N</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> type_name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">N</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">where</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">N</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">IntoIden</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">binary</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">O</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> op</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">O</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> right</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">where</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">O</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Into</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">BinOper</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Into</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">cast_as</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">N</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> type_name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">N</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">where</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">N</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">IntoIden</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">unary</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> o</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">UnOper</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">// Provided methods</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">add</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> right</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">where</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Into</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">...</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">and</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> right</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">where</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Into</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">...</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">between</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">A</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">B</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> a</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">A</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> b</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">B</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">where</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">A</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Into</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">              </span><span class="token class-name" style="color:rgb(38, 127, 153)">B</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Into</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">...</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">div</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> right</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">where</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Into</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">...</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">eq</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> right</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">where</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Into</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">...</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">equals</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">C</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">C</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">where</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">C</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">IntoColumnRef</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">...</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">// omitting the where clause below to make it more concise ..</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">gt</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> right</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">gte</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> right</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">in_subquery</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> sel</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SelectStatement</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">in_tuples</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">V</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">I</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> v</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">I</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">is</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> right</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">is_in</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">V</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">I</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> v</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">I</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">is_not</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> right</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">is_not_in</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">V</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">I</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> v</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">I</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">is_not_null</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">is_null</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">left_shift</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> right</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">like</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">L</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> like</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">L</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">lt</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> right</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">lte</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> right</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">modulo</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> right</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">mul</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> right</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">ne</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> right</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">not</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">not_between</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">A</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">B</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> a</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">A</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> b</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">B</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">not_equals</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">C</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">C</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">not_in_subquery</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> sel</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SelectStatement</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">not_like</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">L</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> like</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">L</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">or</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> right</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">right_shift</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> right</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">sub</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> right</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">bit_and</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> right</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">bit_or</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> right</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">R</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SimpleExpr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<ul>
<li>Added <code>ExprTrait</code> to unify <code>Expr</code> and <code>SimpleExpr</code> methods</li>
<li>Added <code>impl&lt;T&gt; ExprTrait for T where T: Into&lt;SimpleExpr&gt;</code> to maintain backwards compatibility for all <code>Into&lt;SimpleExpr&gt;</code> types, such as <code>Value</code> and <code>FunctionCall</code></li>
<li>Added <code>trait PgExpr: ExprTrait</code>: database specific expression for Postgres and <code>impl PgExpr</code> for <code>FunctionCall</code>, <code>ColumnRef</code>, <code>Keyword</code>, <code>LikeExpr</code>, <code>Value</code></li>
<li>Added <code>trait SqliteExpr: ExprTrait</code>: database specific expression for SQLite and <code>impl SqliteExpr</code> for <code>FunctionCall</code>, <code>ColumnRef</code>, <code>Keyword</code>, <code>LikeExpr</code>, <code>Value</code></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="support-of-postgres-vector-774">Support of Postgres Vector <a href="https://github.com/SeaQL/sea-query/pull/774" target="_blank" rel="noopener noreferrer">#774</a><a href="https://www.sea-ql.org/blog/2024-12-03-whats-new-in-seaquery-0.32.x/#support-of-postgres-vector-774" class="hash-link" aria-label="Direct link to support-of-postgres-vector-774" title="Direct link to support-of-postgres-vector-774">​</a></h3>
<ul>
<li>Construct Postgres query with vector extension</li>
<li>Added <code>postgres-vector</code> feature flag</li>
<li>Added <a href="https://docs.rs/sea-query/0.32.1/sea_query/value/enum.Value.html#variant.Vector" target="_blank" rel="noopener noreferrer"><code>Value::Vector</code></a>, <a href="https://docs.rs/sea-query/0.32.1/sea_query/table/enum.ColumnType.html#variant.Vector" target="_blank" rel="noopener noreferrer"><code>ColumnType::Vector</code></a>, <a href="https://docs.rs/sea-query/0.32.1/sea_query/table/struct.ColumnDef.html#method.vector" target="_blank" rel="noopener noreferrer"><code>ColumnDef::vector()</code></a>, <code>PgBinOper::EuclideanDistance</code>, <code>PgBinOper::NegativeInnerProduct</code> and <code>PgBinOper::CosineDistance</code></li>
</ul>
<p>Example:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">select</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">columns</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token class-name" style="color:rgb(38, 127, 153)">Char</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Character</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">from</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Char</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">and_where</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token class-name" style="color:rgb(38, 127, 153)">Expr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Char</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Character</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">eq</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Expr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">val</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">pgvector</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Vector</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">from</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token macro property">vec!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token number" style="color:rgb(9, 134, 88)">1.0</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">2.0</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">PostgresQueryBuilder</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">r#"SELECT "character" FROM "character" WHERE "character" = '[1,2]'"#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="support-partial-index-478">Support Partial Index <a href="https://github.com/SeaQL/sea-query/pull/478" target="_blank" rel="noopener noreferrer">#478</a><a href="https://www.sea-ql.org/blog/2024-12-03-whats-new-in-seaquery-0.32.x/#support-partial-index-478" class="hash-link" aria-label="Direct link to support-partial-index-478" title="Direct link to support-partial-index-478">​</a></h3>
<ul>
<li>Support partial index <code>CREATE INDEX .. WHERE ..</code></li>
</ul>
<p>Example (Postgres):</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Index</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">create</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unique</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">nulls_not_distinct</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"partial-index-glyph-image-not-null"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Glyph</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Glyph</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Image</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">and_where</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Expr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Glyph</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Image</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">is_not_null</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">PostgresQueryBuilder</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">r#"CREATE UNIQUE INDEX "partial-index-glyph-image-not-null" ON "glyph" ("image") NULLS NOT DISTINCT WHERE "image" IS NOT NULL"#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>Example (Sqlite):</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Index</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">create</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">if_not_exists</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unique</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"partial-index-glyph-image-not-null"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Glyph</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Glyph</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Image</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">and_where</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Expr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Glyph</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Image</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">is_not_null</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">SqliteQueryBuilder</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">r#"CREATE UNIQUE INDEX IF NOT EXISTS "partial-index-glyph-image-not-null" ON "glyph" ("image") WHERE "image" IS NOT NULL"#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="get-null-value">Get Null Value<a href="https://www.sea-ql.org/blog/2024-12-03-whats-new-in-seaquery-0.32.x/#get-null-value" class="hash-link" aria-label="Direct link to Get Null Value" title="Direct link to Get Null Value">​</a></h3>
<p>This one may seem a little bummer, but it is type system problem. In order to support the Postgres protocol, SeaQuery's <code>Value</code> enum does not have a <code>Null</code> variant. This new <a href="https://docs.rs/sea-query/0.32.1/sea_query/value/enum.Value.html#method.as_null" target="_blank" rel="noopener noreferrer"><code>Value::as_null</code></a> method allows you to:</p>
<ol>
<li>construct a typed null value</li>
<li>nullify a value</li>
<li>define generic functions (<code>impl Into&lt;Value&gt;</code>)</li>
</ol>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> v </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Value</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Int</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Some</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> n </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> v</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">as_null</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">n</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Value</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Int</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">None</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// one liner:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Into</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Value</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">into</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">2.2</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">as_null</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Value</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Double</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">None</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="bitwise-andor-operators-841">Bitwise AND/OR Operators <a href="https://github.com/SeaQL/sea-query/pull/841" target="_blank" rel="noopener noreferrer">#841</a><a href="https://www.sea-ql.org/blog/2024-12-03-whats-new-in-seaquery-0.32.x/#bitwise-andor-operators-841" class="hash-link" aria-label="Direct link to bitwise-andor-operators-841" title="Direct link to bitwise-andor-operators-841">​</a></h3>
<ul>
<li>Added bitwise and/or operators (<a href="https://docs.rs/sea-query/0.32.1/sea_query/expr/trait.ExprTrait.html#method.bit_and" target="_blank" rel="noopener noreferrer"><code>bit_and</code></a>, <a href="https://docs.rs/sea-query/0.32.1/sea_query/expr/trait.ExprTrait.html#method.bit_or" target="_blank" rel="noopener noreferrer"><code>bit_or</code></a>)</li>
</ul>
<p>Examples:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> query </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">select</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">expr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">bit_and</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">eq</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">3</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_owned</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">PostgresQueryBuilder</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">r#"SELECT (1 &amp; 2) = 3"#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> query </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">select</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">expr</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">bit_or</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">eq</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">3</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_owned</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">PostgresQueryBuilder</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">r#"SELECT (1 | 2) = 3"#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="enhancements">Enhancements<a href="https://www.sea-ql.org/blog/2024-12-03-whats-new-in-seaquery-0.32.x/#enhancements" class="hash-link" aria-label="Direct link to Enhancements" title="Direct link to Enhancements">​</a></h2>
<ul>
<li><a href="https://github.com/SeaQL/sea-query/pull/817" target="_blank" rel="noopener noreferrer">#817</a> Replaced <code>Educe</code> with manual implementations<!-- -->
<ul>
<li>This is an effort to cut down compilation time</li>
</ul>
</li>
<li><a href="https://github.com/SeaQL/sea-query/pull/844" target="_blank" rel="noopener noreferrer">#844</a> Added <code>GREATEST</code> &amp; <code>LEAST</code> function</li>
<li><a href="https://github.com/SeaQL/sea-query/pull/836" target="_blank" rel="noopener noreferrer">#836</a> Added <code>ValueType::enum_type_name()</code></li>
<li><a href="https://github.com/SeaQL/sea-query/pull/835" target="_blank" rel="noopener noreferrer">#835</a> Removed "one common table" restriction on recursive CTE</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="sea-query-derive"><code>sea-query-derive</code><a href="https://www.sea-ql.org/blog/2024-12-03-whats-new-in-seaquery-0.32.x/#sea-query-derive" class="hash-link" aria-label="Direct link to sea-query-derive" title="Direct link to sea-query-derive">​</a></h3>
<p>We've finally done it! Removing the last bit of <code>syn</code> v1 from our dependency tree:</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">sea-query % cargo tree |grep 'syn '</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">│   └── syn v2.0.39</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    │   │   └── syn v2.0.39 (*)</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    │       └── syn v2.0.39 (*)</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    ├── syn v2.0.39 (*)</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            └── syn v2.0.39 (*)</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">│   │   └── syn v2.0.39 (*)</span><br></span></code></pre></div></div>
<ul>
<li>Merged <code>#[enum_def]</code> into <code>sea-query-derive</code></li>
<li><a href="https://github.com/SeaQL/sea-query/pull/769" target="_blank" rel="noopener noreferrer">#769</a> <code>#[enum_def]</code> now impl additional <code>IdenStatic</code> and <code>AsRef&lt;str&gt;</code></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="sea-query-attr"><code>sea-query-attr</code><a href="https://www.sea-ql.org/blog/2024-12-03-whats-new-in-seaquery-0.32.x/#sea-query-attr" class="hash-link" aria-label="Direct link to sea-query-attr" title="Direct link to sea-query-attr">​</a></h3>
<p>We've merged this crate into <code>sea-query-derive</code>, and they will be maintained together from now on.</p>
<ul>
<li>Updated <code>syn</code>, <code>heck</code> and <code>darling</code></li>
<li><code>sea-query-attr</code> is now deprecated</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="upgrades">Upgrades<a href="https://www.sea-ql.org/blog/2024-12-03-whats-new-in-seaquery-0.32.x/#upgrades" class="hash-link" aria-label="Direct link to Upgrades" title="Direct link to Upgrades">​</a></h2>
<ul>
<li><a href="https://github.com/SeaQL/sea-query/pull/798" target="_blank" rel="noopener noreferrer">#798</a> Upgraded <code>sqlx</code> to <code>0.8</code></li>
<li><a href="https://github.com/SeaQL/sea-query/pull/798" target="_blank" rel="noopener noreferrer">#798</a> Upgraded <code>bigdecimal</code> to <code>0.4</code></li>
<li><a href="https://github.com/SeaQL/sea-query/pull/802" target="_blank" rel="noopener noreferrer">#802</a> Upgraded <code>rusqlite</code> to <code>0.32</code></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="integration-examples">Integration Examples<a href="https://www.sea-ql.org/blog/2024-12-03-whats-new-in-seaquery-0.32.x/#integration-examples" class="hash-link" aria-label="Direct link to Integration Examples" title="Direct link to Integration Examples">​</a></h2>
<p>SeaQuery plays well with the other crates in the rust ecosystem.</p>
<ul>
<li><a href="https://github.com/SeaQL/sea-query/tree/master/examples/postgres" target="_blank" rel="noopener noreferrer">Postgres Example</a></li>
<li><a href="https://github.com/SeaQL/sea-query/tree/master/examples/rusqlite" target="_blank" rel="noopener noreferrer">Rusqlite Example</a></li>
<li><a href="https://github.com/SeaQL/sea-query/tree/master/examples/sqlx_mysql" target="_blank" rel="noopener noreferrer">SQLx MySql Example</a></li>
<li><a href="https://github.com/SeaQL/sea-query/tree/master/examples/sqlx_postgres" target="_blank" rel="noopener noreferrer">SQLx Postgres Example</a></li>
<li><a href="https://github.com/SeaQL/sea-query/tree/master/examples/sqlx_sqlite" target="_blank" rel="noopener noreferrer">SQLx Sqlite Example</a></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="community">Community<a href="https://www.sea-ql.org/blog/2024-12-03-whats-new-in-seaquery-0.32.x/#community" class="hash-link" aria-label="Direct link to Community" title="Direct link to Community">​</a></h2>
<p>SeaQL.org is an independent open-source organization run by passionate ️developers. If you like our projects, please star ⭐ and share our repositories. If you feel generous, a small donation via <a href="https://github.com/sponsors/SeaQL" target="_blank" rel="noopener noreferrer">GitHub Sponsor</a> will be greatly appreciated, and goes a long way towards sustaining the organization 🚢.</p>
<p>SeaQuery is a community driven project. We welcome you to participate, contribute and together build for Rust's future 🦀.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="rustacean-sticker-pack-">Rustacean Sticker Pack 🦀<a href="https://www.sea-ql.org/blog/2024-12-03-whats-new-in-seaquery-0.32.x/#rustacean-sticker-pack-" class="hash-link" aria-label="Direct link to Rustacean Sticker Pack 🦀" title="Direct link to Rustacean Sticker Pack 🦀">​</a></h2>
<p>The Rustacean Sticker Pack is the perfect way to express your passion for Rust.
Our stickers are made with a premium water-resistant vinyl with a unique matte finish.
Stick them on your laptop, notebook, or any gadget to show off your love for Rust!</p>
<p>Moreover, all proceeds contributes directly to the ongoing development of SeaQL projects.</p>
<p>Sticker Pack Contents:</p>
<ul>
<li>Logo of SeaQL projects: SeaQL, SeaORM, SeaQuery, Seaography, FireDBG</li>
<li>Mascot of SeaQL: Terres the Hermit Crab</li>
<li>Mascot of Rust: Ferris the Crab</li>
<li>The Rustacean word</li>
</ul>
<p><a href="https://www.sea-ql.org/sticker-pack/" target="_blank" rel="noopener noreferrer">Support SeaQL and get a Sticker Pack!</a></p>
<a href="https://www.sea-ql.org/sticker-pack/"><img style="border-radius:25px" alt="Rustacean Sticker Pack by SeaQL" src="https://www.sea-ql.org/static/sticker-pack-1s.jpg"></a>]]></content>
        <author>
            <name>SeaQL Team</name>
            <uri>https://github.com/SeaQL</uri>
        </author>
        <category label="news" term="news"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[What's new in SeaStreamer 0.5]]></title>
        <id>https://www.sea-ql.org/blog/2024-11-30-whats-new-in-sea-streamer-0.5/</id>
        <link href="https://www.sea-ql.org/blog/2024-11-30-whats-new-in-sea-streamer-0.5/"/>
        <updated>2024-11-30T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[🎉 We are pleased to release SeaStreamer 0.5.x!]]></summary>
        <content type="html"><![CDATA[<a href="https://www.sea-ql.org/SeaStreamer/"><img src="https://www.sea-ql.org/SeaStreamer/img/SeaStreamer%20banner.png"></a>
<p>🎉 We are pleased to release SeaStreamer <a href="https://github.com/SeaQL/sea-streamer/releases/tag/0.5.2" target="_blank" rel="noopener noreferrer"><code>0.5.x</code></a>!</p>
<p>Here is the summary of new features and enhancements:</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="sea-streamer-types"><code>sea-streamer-types</code><a href="https://www.sea-ql.org/blog/2024-11-30-whats-new-in-sea-streamer-0.5/#sea-streamer-types" class="hash-link" aria-label="Direct link to sea-streamer-types" title="Direct link to sea-streamer-types">​</a></h2>
<ul>
<li>Added <code>From&lt;Url&gt;</code> and <code>FromIterator&lt;Url&gt;</code> for <code>StreamerUri</code> <a href="https://github.com/SeaQL/sea-streamer/pull/28" target="_blank" rel="noopener noreferrer">#28</a></li>
<li>Impl <code>Default</code> for <code>Payload</code></li>
<li>Impl serde <code>Serialize</code> &amp; <code>Deserialize</code> for <code>StreamKey</code> (enabled by the feature flag <code>serde</code>), so this is now possible:</li>
</ul>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Serialize, Deserialize)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">MyStruct</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    stream_key</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">StreamKey</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="sea-streamer-socket"><code>sea-streamer-socket</code><a href="https://www.sea-ql.org/blog/2024-11-30-whats-new-in-sea-streamer-0.5/#sea-streamer-socket" class="hash-link" aria-label="Direct link to sea-streamer-socket" title="Direct link to sea-streamer-socket">​</a></h2>
<ul>
<li>The Socket library can now be compiled without the <code>stdio</code> backend <a href="https://github.com/SeaQL/sea-streamer/pull/35" target="_blank" rel="noopener noreferrer">#35</a></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="sea-streamer-redis"><code>sea-streamer-redis</code><a href="https://www.sea-ql.org/blog/2024-11-30-whats-new-in-sea-streamer-0.5/#sea-streamer-redis" class="hash-link" aria-label="Direct link to sea-streamer-redis" title="Direct link to sea-streamer-redis">​</a></h2>
<ul>
<li>Support nanosecond timestamp in Redis (under feature flag <code>nanosecond-timestamp</code>).
Redis's default Stream ID resolution is millisecond, and it can be changed to nanosecond with <a href="https://docs.rs/sea-streamer-redis/latest/sea_streamer_redis/struct.RedisConnectOptions.html#method.set_timestamp_format" target="_blank" rel="noopener noreferrer"><code>RedisConnectOptions::set_timestamp_format</code></a>:<!-- -->
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">mut</span><span class="token plain"> options </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">RedisConnectOptions</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">options</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">set_timestamp_format</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">TimestampFormat</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">UnixTimestampNanos</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
</li>
<li>Added <a href="https://docs.rs/sea-streamer-redis/latest/sea_streamer_redis/struct.RedisConnectOptions.html#method.set_message_field" target="_blank" rel="noopener noreferrer"><code>RedisConnectOptions::set_message_field</code></a> to set custom message field (the default used to be <code>msg</code>):<!-- -->
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">mut</span><span class="token plain"> options </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">RedisConnectOptions</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">options</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">set_message_field</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"event"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
</li>
<li>Added <a href="https://docs.rs/sea-streamer-redis/latest/sea_streamer_redis/struct.RedisProducer.html#method.send_with_ts" target="_blank" rel="noopener noreferrer"><code>RedisProducer::send_with_ts</code></a> to specify custom timestamp:<!-- -->
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">producer</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">send_with_ts</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">stream_key</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> timestamp</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> message</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
</li>
<li>Added <a href="https://docs.rs/sea-streamer-redis/latest/sea_streamer_redis/struct.RedisProducer.html#method.flush_immut" target="_blank" rel="noopener noreferrer"><code>RedisProducer::flush_immut</code></a>. This method is same as <a href="https://docs.rs/sea-streamer-redis/latest/sea_streamer_redis/struct.RedisProducer.html#method.flush" target="_blank" rel="noopener noreferrer"><code>RedisProducer::flush</code></a> but without <code>&amp;mut self</code></li>
<li>Added <a href="https://docs.rs/sea-streamer-redis/latest/sea_streamer_redis/struct.RedisProducer.html#method.trim" target="_blank" rel="noopener noreferrer"><code>RedisProducer::trim</code></a> to perform <code>XTRIM MAXLEN</code>:<!-- -->
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">producer</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">trim</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">stream_key</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> maxlen</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
</li>
<li>Fixed <code>capacity overflow</code> error in some cases</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="sea-streamer-file"><code>sea-streamer-file</code><a href="https://www.sea-ql.org/blog/2024-11-30-whats-new-in-sea-streamer-0.5/#sea-streamer-file" class="hash-link" aria-label="Direct link to sea-streamer-file" title="Direct link to sea-streamer-file">​</a></h2>
<ul>
<li>Added a special <code>SEA_STREAMER_WILDCARD</code> stream key to subscribe to all streams in a file:<!-- -->
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> consumer</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SeaConsumer</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> streamer</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">create_consumer</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token class-name" style="color:rgb(38, 127, 153)">StreamKey</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token constant" style="color:rgb(129, 31, 63)">SEA_STREAMER_WILDCARD</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> options</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="sea-streamer-fuse"><code>sea-streamer-fuse</code><a href="https://www.sea-ql.org/blog/2024-11-30-whats-new-in-sea-streamer-0.5/#sea-streamer-fuse" class="hash-link" aria-label="Direct link to sea-streamer-fuse" title="Direct link to sea-streamer-fuse">​</a></h2>
<p>We've shipped the first component library for stream processing! It currently only has one class, <a href="https://docs.rs/sea-streamer-fuse/latest/sea_streamer_fuse/struct.StreamJoin.html" target="_blank" rel="noopener noreferrer"><code>StreamJoin</code></a>.</p>
<p>It is designed to be used in stream replay. In live streaming, if you have multiple streams from different sources and you want to multiplex them together, you can use the awesome <a href="https://docs.rs/futures-concurrency" target="_blank" rel="noopener noreferrer"><code>futures_concurrency</code></a> crate's <a href="https://docs.rs/futures-concurrency/latest/futures_concurrency/stream/trait.Merge.html" target="_blank" rel="noopener noreferrer"><code>Merge</code></a>, and it just works!</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">use</span><span class="token plain"> </span><span class="token namespace">futures_concurrency</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token namespace">stream</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Merge</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token namespace">vec</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Merge</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">as</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Merged</span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> consumers</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Vec</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">SeaConsumer</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token macro property">vec!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">stream_a</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> stream_b</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> streams</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Vec</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">SeaMessageStream</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token lifetime-annotation symbol">'a</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;&gt;</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> consumers</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">iter_mut</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">map</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token closure-params closure-punctuation punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token closure-params">ss</span><span class="token closure-params closure-punctuation punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token plain"> ss</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">stream</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">collect</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> merged</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Merged</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">SeaMessageStream</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token lifetime-annotation symbol">'a</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;&gt;</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> streams</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">merge</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p><code>stream_a</code> and <code>stream_b</code> can be heterogeneous, meaning they can be Kafka, Redis or even File.</p>
<p>How about in replay? In replay, different streams can flow at different pace, and thus if we try to naively merge them, the messages would come out-of-order.</p>
<p>To solve this problem, you can use <a href="https://docs.rs/sea-streamer-fuse/latest/sea_streamer_fuse/struct.StreamJoin.html#method.muxed" target="_blank" rel="noopener noreferrer"><code>StreamJoin::muxed</code></a>:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">type</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">LiveStream</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token lifetime-annotation symbol">'a</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Merged</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">SeaMessageStream</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token lifetime-annotation symbol">'a</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> joined</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">StreamJoin</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">LiveStream</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token lifetime-annotation symbol">'a</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SeaMessage</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token lifetime-annotation symbol">'a</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">StreamErr</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">BackendErr</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;&gt;</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">StreamJoin</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">muxed</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">merged</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p><a href="https://docs.rs/sea-streamer-fuse/latest/sea_streamer_fuse/struct.StreamJoin.html#method.align" target="_blank" rel="noopener noreferrer"><code>StreamJoin::align</code></a> must be called manually to specify which streams should be aligned. Otherwise, messages will be out of order until the first message of each key arrives. Imagine a severely delayed stream sending its first message one day later; it would invalidate everything that came before it. However, the issue lies with the delayed stream itself, not the others.</p>
<p>In the example below, messages from the fast stream will be buffered, until a message from the slow stream arrives.</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">fast | (1) (2) (3) (4) (5)</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">slow |         (2)         (6)</span><br></span></code></pre></div></div>
<p>Messages <code>1</code>, <code>2</code> from fast will be buffered, until <code>2</code> from the slow stream arrives. Likewise, messages <code>3</code>, <code>4</code>, <code>5</code> will be buffered until 6 arrives.</p>
<p>The <code>StreamJoin</code> component is generic, and can actually be used outside of SeaStreamer, the only requirement is that the thing we want to align implements <a href="https://docs.rs/sea-streamer-types/latest/sea_streamer_types/trait.Message.html" target="_blank" rel="noopener noreferrer"><code>sea_streamer::Message</code></a>:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">impl</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Message</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">MyMessage</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">stream_key</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">StreamKey</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">/* implement this */</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">timestamp</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Timestamp</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">/* implement this */</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">shard_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">ShardId</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">/* doesn't matter */</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">sequence</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SeqNo</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">/* doesn't matter */</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">message</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Payload</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">/* doesn't matter */</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="anecdote">Anecdote<a href="https://www.sea-ql.org/blog/2024-11-30-whats-new-in-sea-streamer-0.5/#anecdote" class="hash-link" aria-label="Direct link to Anecdote" title="Direct link to Anecdote">​</a></h2>
<p>Over the past year, we've been using SeaStreamer heavily in production and it served us well!</p>
<p>SeaStreamer File is really handy, because it supports live streaming and also duals as an archive, in which it can be rotated and uploaded to the data lake every day. It has replaced our use of Redis in some same-host mpmc streaming scenario.</p>
<p>Redis Streams is also super nice (fast and reliable) and especially easy with SeaStreamer. IMO it's been underrated, it became our default choice for cross-host streaming.</p>
<p>By the way, SeaStreamer File is used as the tracing file format in <a href="https://firedbg.sea-ql.org/" target="_blank" rel="noopener noreferrer">FireDBG</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="community">Community<a href="https://www.sea-ql.org/blog/2024-11-30-whats-new-in-sea-streamer-0.5/#community" class="hash-link" aria-label="Direct link to Community" title="Direct link to Community">​</a></h2>
<p>SeaQL.org is an independent open-source organization run by passionate ️developers. If you like our projects, please star ⭐ and share our repositories. If you feel generous, a small donation via <a href="https://github.com/sponsors/SeaQL" target="_blank" rel="noopener noreferrer">GitHub Sponsor</a> will be greatly appreciated, and goes a long way towards sustaining the organization 🚢.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="rustacean-sticker-pack-">Rustacean Sticker Pack 🦀<a href="https://www.sea-ql.org/blog/2024-11-30-whats-new-in-sea-streamer-0.5/#rustacean-sticker-pack-" class="hash-link" aria-label="Direct link to Rustacean Sticker Pack 🦀" title="Direct link to Rustacean Sticker Pack 🦀">​</a></h2>
<p>The Rustacean Sticker Pack is the perfect way to express your passion for Rust.
Our stickers are made with a premium water-resistant vinyl with a unique matte finish.
Stick them on your laptop, notebook, or any gadget to show off your love for Rust!</p>
<p>Moreover, all proceeds contributes directly to the ongoing development of SeaQL projects.</p>
<p>Sticker Pack Contents:</p>
<ul>
<li>Logo of SeaQL projects: SeaQL, SeaORM, SeaQuery, Seaography, FireDBG</li>
<li>Mascot of SeaQL: Terres the Hermit Crab</li>
<li>Mascot of Rust: Ferris the Crab</li>
<li>The Rustacean word</li>
</ul>
<p><a href="https://www.sea-ql.org/sticker-pack/" target="_blank" rel="noopener noreferrer">Support SeaQL and get a Sticker Pack!</a></p>
<a href="https://www.sea-ql.org/sticker-pack/"><img style="border-radius:25px" alt="Rustacean Sticker Pack by SeaQL" src="https://www.sea-ql.org/static/sticker-pack-1s.jpg"></a>]]></content>
        <author>
            <name>Chris Tsang</name>
            <uri>https://github.com/tyt2y3</uri>
        </author>
        <category label="news" term="news"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[GraphQL based Admin Dashboard with Loco and Seaography]]></title>
        <id>https://www.sea-ql.org/blog/2024-08-08-graphql-admin-dashboard-with-loco-seaography/</id>
        <link href="https://www.sea-ql.org/blog/2024-08-08-graphql-admin-dashboard-with-loco-seaography/"/>
        <updated>2024-08-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this tutorial, we would develop a GraphQL based admin dashboard with Seaography and Loco.]]></summary>
        <content type="html"><![CDATA[<img src="https://www.sea-ql.org/blog/img/Loco%20x%20SeaORM.png">
<p>In this tutorial, we would develop a GraphQL based admin dashboard with <a href="https://github.com/SeaQL/seaography" target="_blank" rel="noopener noreferrer">Seaography</a> and Loco.</p>
<p>Read our first and second tutorial of the series, <a href="https://www.sea-ql.org/blog/2024-05-28-getting-started-with-loco-seaorm/" target="_blank" rel="noopener noreferrer">Getting Started with Loco &amp; SeaORM</a>, <a href="https://www.sea-ql.org/blog/2024-07-01-graphql-support-with-loco-seaography/" target="_blank" rel="noopener noreferrer">Adding GraphQL Support to Loco with Seaography</a>, if you haven't.</p>
<p>The full source code can be found <a href="https://github.com/SeaQL/sea-orm/tree/1.0.x/examples/react_admin" target="_blank" rel="noopener noreferrer">here</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-seaography">What is Seaography<a href="https://www.sea-ql.org/blog/2024-08-08-graphql-admin-dashboard-with-loco-seaography/#what-is-seaography" class="hash-link" aria-label="Direct link to What is Seaography" title="Direct link to What is Seaography">​</a></h2>
<p>Seaography is a GraphQL framework for building GraphQL resolvers using SeaORM entities. It ships with a CLI tool that can generate ready-to-compile Rust GraphQL servers from existing MySQL, Postgres and SQLite databases.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="setup-react-admin-frontend-boilerplate">Setup React-Admin Frontend Boilerplate<a href="https://www.sea-ql.org/blog/2024-08-08-graphql-admin-dashboard-with-loco-seaography/#setup-react-admin-frontend-boilerplate" class="hash-link" aria-label="Direct link to Setup React-Admin Frontend Boilerplate" title="Direct link to Setup React-Admin Frontend Boilerplate">​</a></h2>
<p>We use <a href="https://marmelab.com/react-admin/" target="_blank" rel="noopener noreferrer"><code>React-Admin</code></a> as the frontend framework. It provides a convenient boilerplate to start with:</p>
<div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">$ </span><span class="token function" style="color:rgb(0, 0, 255)">npm</span><span class="token plain"> init react-admin frontend</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">Select the data provider you want to use, and validate with Enter:</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">❯ None</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  I'll configure the data provider myself.</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">Select the auth provider you want to use, and validate with Enter:</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">❯ Hard coded </span><span class="token builtin class-name" style="color:rgb(38, 127, 153)">local</span><span class="token plain"> username/password</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">Enter the name of a resource you want to add, and validate with Enter </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">leave empty to finish</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain">:</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">❯ </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">Leave empty and press Enter</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">How </span><span class="token keyword" style="color:rgb(0, 0, 255)">do</span><span class="token plain"> you want to </span><span class="token function" style="color:rgb(0, 0, 255)">install</span><span class="token plain"> the dependencies?</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">❯ Using </span><span class="token function" style="color:rgb(0, 0, 255)">npm</span><br></span></code></pre></div></div>
<p>Run the boilerplate then visit <a href="http://localhost:5173/" target="_blank" rel="noopener noreferrer">http://localhost:5173/</a>, you should see the welcome page:</p>
<div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">$ </span><span class="token builtin class-name" style="color:rgb(38, 127, 153)">cd</span><span class="token plain"> frontend</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">$ </span><span class="token function" style="color:rgb(0, 0, 255)">npm</span><span class="token plain"> </span><span class="token function" style="color:rgb(0, 0, 255)">install</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">$ </span><span class="token function" style="color:rgb(0, 0, 255)">npm</span><span class="token plain"> run dev</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> dev</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> vite</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  VITE v4.5.3  ready </span><span class="token keyword" style="color:rgb(0, 0, 255)">in</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">440</span><span class="token plain"> ms</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  ➜  Local:   http://localhost:5173/</span><br></span></code></pre></div></div>
<p><img decoding="async" loading="lazy" src="https://www.sea-ql.org/blog/img/Loco%20x%20Seaography%20Dashboard%20Demo%20Welcome.png" alt="" class="img_ev3q"></p>
<p>Now, we want to display the <code>React-Admin</code> data table template with mock data. First, we need to add <code>ra-data-json-server</code> dependency, it provides a ready-to-go mock data loader:</p>
<div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">$ </span><span class="token function" style="color:rgb(0, 0, 255)">npm</span><span class="token plain"> </span><span class="token function" style="color:rgb(0, 0, 255)">install</span><span class="token plain"> ra-data-json-server</span><br></span></code></pre></div></div>
<p>To prepare the mock data loader, we create a new file:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockTitle_OeMC">frontend/src/dataProvider.ts</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">import</span><span class="token plain"> jsonServerProvider </span><span class="token keyword" style="color:rgb(0, 0, 255)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">'ra-data-json-server'</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">const</span><span class="token plain"> dataProvider </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(0, 0, 255)">jsonServerProvider</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">'https://jsonplaceholder.typicode.com'</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>Then, we change the UI file:</p>
<div class="language-diff codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockTitle_OeMC">frontend/src/index.tsx</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-diff codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">+ import { Admin, Resource, ListGuesser, ShowGuesser } from 'react-admin';</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">+ import { dataProvider } from './dataProvider';</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">ReactDOM.createRoot(document.getElementById('root')!).render(</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">-   &lt;React.StrictMode&gt;</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">-       &lt;App /&gt;</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">-   &lt;/React.StrictMode&gt;</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">+   &lt;Admin dataProvider={dataProvider}&gt;</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">+       &lt;Resource name="users" list={ListGuesser} show={ShowGuesser} /&gt;</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">+   &lt;/Admin&gt;</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">);</span><br></span></code></pre></div></div>
<p>Run the boilerplate now you should see the user listing page:</p>
<div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">$ </span><span class="token function" style="color:rgb(0, 0, 255)">npm</span><span class="token plain"> run dev</span><br></span></code></pre></div></div>
<p><img decoding="async" loading="lazy" src="https://www.sea-ql.org/blog/img/Loco%20x%20Seaography%20Dashboard%20Demo%20List.png" alt="" class="img_ev3q"></p>
<p>Click on each row to view its detail page.</p>
<p><img decoding="async" loading="lazy" src="https://www.sea-ql.org/blog/img/Loco%20x%20Seaography%20Dashboard%20Demo%20View.png" alt="" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="add-npm-dependency">Add NPM dependency<a href="https://www.sea-ql.org/blog/2024-08-08-graphql-admin-dashboard-with-loco-seaography/#add-npm-dependency" class="hash-link" aria-label="Direct link to Add NPM dependency" title="Direct link to Add NPM dependency">​</a></h2>
<p>Next, we start to integrate our Loco and Seaography backend with React-Admin frontend. We use <code>axios</code> for sending POST request to our GraphQL backend:</p>
<div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">$ </span><span class="token function" style="color:rgb(0, 0, 255)">npm</span><span class="token plain"> </span><span class="token function" style="color:rgb(0, 0, 255)">install</span><span class="token plain"> axios</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="graphql-data-provider">GraphQL Data Provider<a href="https://www.sea-ql.org/blog/2024-08-08-graphql-admin-dashboard-with-loco-seaography/#graphql-data-provider" class="hash-link" aria-label="Direct link to GraphQL Data Provider" title="Direct link to GraphQL Data Provider">​</a></h2>
<p>Then, we can start implementing the GraphQL data provider by replacing the content of <code>dataProvider.ts</code>:</p>
<div class="language-diff codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockTitle_OeMC">frontend/src/dataProvider.ts</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-diff codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">- import jsonServerProvider from 'ra-data-json-server';</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">- </span><br></span><span class="token-line" style="color:#000000"><span class="token plain">- export const dataProvider = jsonServerProvider('https://jsonplaceholder.typicode.com');</span><br></span></code></pre></div></div>
<p>Integrating with our GraphQL endpoint at <a href="http://localhost:3000/api/graphql" target="_blank" rel="noopener noreferrer">http://localhost:3000/api/graphql</a>. We implemented two handler below, one fetch data for the post listing and the other to fetch data for a single post:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockTitle_OeMC">frontend/src/dataProvider.ts</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">import</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> DataProvider </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"react-admin"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">import</span><span class="token plain"> axios </span><span class="token keyword" style="color:rgb(0, 0, 255)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">'axios'</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">const</span><span class="token plain"> apiUrl </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">'http://localhost:3000/api/graphql'</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">const</span><span class="token plain"> dataProvider</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> DataProvider </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">// Fetch data for post listing</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token function-variable function" style="color:rgb(0, 0, 255)">getList</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">resource</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> params</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">// Paginator status</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">const</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> page</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> perPage </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> params</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">pagination</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">// Sorter status</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">const</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> field</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> order </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> params</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">sort</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">// POST request to GraphQL endpoint</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">return</span><span class="token plain"> axios</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">post</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">apiUrl</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            query</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(163, 21, 21)">`</span><span class="token template-string string" style="color:rgb(163, 21, 21)"></span><br></span><span class="token-line" style="color:#000000"><span class="token template-string string" style="color:rgb(163, 21, 21)">            query {</span><br></span><span class="token-line" style="color:#000000"><span class="token template-string string" style="color:rgb(163, 21, 21)">              notes (</span><br></span><span class="token-line" style="color:#000000"><span class="token template-string string" style="color:rgb(163, 21, 21)">                orderBy: { </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(4, 81, 165)">${</span><span class="token template-string interpolation">field</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token template-string string" style="color:rgb(163, 21, 21)">: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(4, 81, 165)">${</span><span class="token template-string interpolation">order</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token template-string string" style="color:rgb(163, 21, 21)"> },</span><br></span><span class="token-line" style="color:#000000"><span class="token template-string string" style="color:rgb(163, 21, 21)">                pagination: { page: { limit: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(4, 81, 165)">${</span><span class="token template-string interpolation">perPage</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token template-string string" style="color:rgb(163, 21, 21)">, page: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(4, 81, 165)">${</span><span class="token template-string interpolation">page </span><span class="token template-string interpolation operator" style="color:rgb(0, 0, 0)">-</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation number" style="color:rgb(9, 134, 88)">1</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token template-string string" style="color:rgb(163, 21, 21)"> }}</span><br></span><span class="token-line" style="color:#000000"><span class="token template-string string" style="color:rgb(163, 21, 21)">              ) {</span><br></span><span class="token-line" style="color:#000000"><span class="token template-string string" style="color:rgb(163, 21, 21)">                nodes {</span><br></span><span class="token-line" style="color:#000000"><span class="token template-string string" style="color:rgb(163, 21, 21)">                  id</span><br></span><span class="token-line" style="color:#000000"><span class="token template-string string" style="color:rgb(163, 21, 21)">                  title</span><br></span><span class="token-line" style="color:#000000"><span class="token template-string string" style="color:rgb(163, 21, 21)">                  createdAt</span><br></span><span class="token-line" style="color:#000000"><span class="token template-string string" style="color:rgb(163, 21, 21)">                  updatedAt</span><br></span><span class="token-line" style="color:#000000"><span class="token template-string string" style="color:rgb(163, 21, 21)">                }</span><br></span><span class="token-line" style="color:#000000"><span class="token template-string string" style="color:rgb(163, 21, 21)">                paginationInfo {</span><br></span><span class="token-line" style="color:#000000"><span class="token template-string string" style="color:rgb(163, 21, 21)">                  pages</span><br></span><span class="token-line" style="color:#000000"><span class="token template-string string" style="color:rgb(163, 21, 21)">                  current</span><br></span><span class="token-line" style="color:#000000"><span class="token template-string string" style="color:rgb(163, 21, 21)">                  offset</span><br></span><span class="token-line" style="color:#000000"><span class="token template-string string" style="color:rgb(163, 21, 21)">                  total</span><br></span><span class="token-line" style="color:#000000"><span class="token template-string string" style="color:rgb(163, 21, 21)">                }</span><br></span><span class="token-line" style="color:#000000"><span class="token template-string string" style="color:rgb(163, 21, 21)">              }</span><br></span><span class="token-line" style="color:#000000"><span class="token template-string string" style="color:rgb(163, 21, 21)">            }</span><br></span><span class="token-line" style="color:#000000"><span class="token template-string string" style="color:rgb(163, 21, 21)">            </span><span class="token template-string template-punctuation string" style="color:rgb(163, 21, 21)">`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">then</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">response</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                </span><span class="token comment" style="color:rgb(0, 128, 0)">// Unwrap the response</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                </span><span class="token keyword" style="color:rgb(0, 0, 255)">const</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> nodes</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> paginationInfo </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> response</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">data</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">data</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">notes</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                </span><span class="token comment" style="color:rgb(0, 128, 0)">// Return the data array and total number of pages</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                </span><span class="token keyword" style="color:rgb(0, 0, 255)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    data</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> nodes</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    total</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> paginationInfo</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">total</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">// Fetch data for a single post</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token function-variable function" style="color:rgb(0, 0, 255)">getOne</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">resource</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> params</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">// POST request to GraphQL endpoint</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">return</span><span class="token plain"> axios</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">post</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">apiUrl</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            query</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(163, 21, 21)">`</span><span class="token template-string string" style="color:rgb(163, 21, 21)"></span><br></span><span class="token-line" style="color:#000000"><span class="token template-string string" style="color:rgb(163, 21, 21)">            query {</span><br></span><span class="token-line" style="color:#000000"><span class="token template-string string" style="color:rgb(163, 21, 21)">              notes(filters: {id: {eq: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(4, 81, 165)">${</span><span class="token template-string interpolation">params</span><span class="token template-string interpolation punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token template-string interpolation">id</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token template-string string" style="color:rgb(163, 21, 21)">}}) {</span><br></span><span class="token-line" style="color:#000000"><span class="token template-string string" style="color:rgb(163, 21, 21)">                nodes {</span><br></span><span class="token-line" style="color:#000000"><span class="token template-string string" style="color:rgb(163, 21, 21)">                  id</span><br></span><span class="token-line" style="color:#000000"><span class="token template-string string" style="color:rgb(163, 21, 21)">                  title</span><br></span><span class="token-line" style="color:#000000"><span class="token template-string string" style="color:rgb(163, 21, 21)">                  content</span><br></span><span class="token-line" style="color:#000000"><span class="token template-string string" style="color:rgb(163, 21, 21)">                  createdAt</span><br></span><span class="token-line" style="color:#000000"><span class="token template-string string" style="color:rgb(163, 21, 21)">                  updatedAt</span><br></span><span class="token-line" style="color:#000000"><span class="token template-string string" style="color:rgb(163, 21, 21)">                }</span><br></span><span class="token-line" style="color:#000000"><span class="token template-string string" style="color:rgb(163, 21, 21)">              }</span><br></span><span class="token-line" style="color:#000000"><span class="token template-string string" style="color:rgb(163, 21, 21)">            }</span><br></span><span class="token-line" style="color:#000000"><span class="token template-string string" style="color:rgb(163, 21, 21)">            </span><span class="token template-string template-punctuation string" style="color:rgb(163, 21, 21)">`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">then</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">response</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                </span><span class="token comment" style="color:rgb(0, 128, 0)">// Unwrap the response</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                </span><span class="token keyword" style="color:rgb(0, 0, 255)">const</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> nodes </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> response</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">data</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">data</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">notes</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                </span><span class="token comment" style="color:rgb(0, 128, 0)">// Return the one and only data</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                </span><span class="token keyword" style="color:rgb(0, 0, 255)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    data</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> nodes</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token number" style="color:rgb(9, 134, 88)">0</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token function-variable function" style="color:rgb(0, 0, 255)">getMany</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">resource</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> params</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token function-variable function" style="color:rgb(0, 0, 255)">getManyReference</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">resource</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> params</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token function-variable function" style="color:rgb(0, 0, 255)">update</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">resource</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> params</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token function-variable function" style="color:rgb(0, 0, 255)">updateMany</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">resource</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> params</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token function-variable function" style="color:rgb(0, 0, 255)">create</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">resource</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> params</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token function-variable function" style="color:rgb(0, 0, 255)">delete</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">resource</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> params</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token function-variable function" style="color:rgb(0, 0, 255)">deleteMany</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">resource</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> params</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="customize-react-admin-frontend">Customize React-Admin Frontend<a href="https://www.sea-ql.org/blog/2024-08-08-graphql-admin-dashboard-with-loco-seaography/#customize-react-admin-frontend" class="hash-link" aria-label="Direct link to Customize React-Admin Frontend" title="Direct link to Customize React-Admin Frontend">​</a></h2>
<p>Replace the React-Admin template frontend with our own custom UI to list all notes from the database.</p>
<div class="language-diff codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockTitle_OeMC">frontend/src/index.tsx</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-diff codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">- ReactDOM.createRoot(document.getElementById('root')!).render(</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">-    &lt;Admin dataProvider={dataProvider}&gt;</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">-        &lt;Resource name="users" list={ListGuesser} show={ShowGuesser} /&gt;</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">-    &lt;/Admin&gt;</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">- );</span><br></span></code></pre></div></div>
<p>Implement the list and details page with specific columns:</p>
<div class="language-tsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockTitle_OeMC">frontend/src/index.tsx</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-tsx codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">ReactDOM</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">'react-dom/client'</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">Admin</span><span class="token imports punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">Resource</span><span class="token imports punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">List</span><span class="token imports punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">Datagrid</span><span class="token imports punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">TextField</span><span class="token imports punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">Show</span><span class="token imports punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">SimpleShowLayout</span><span class="token imports"> </span><span class="token imports punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">'react-admin'</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token imports"> dataProvider </span><span class="token imports punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">'./dataProvider'</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:rgb(0, 0, 255)">PostList</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(0, 0, 0)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">&lt;</span><span class="token tag class-name" style="color:rgb(38, 127, 153)">List</span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">&lt;</span><span class="token tag class-name" style="color:rgb(38, 127, 153)">Datagrid</span><span class="token tag" style="color:rgb(128, 0, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 0, 0)">bulkActionButtons</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token tag script language-javascript boolean" style="color:rgb(128, 0, 0)">false</span><span class="token tag script language-javascript punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">&lt;</span><span class="token tag class-name" style="color:rgb(38, 127, 153)">TextField</span><span class="token tag" style="color:rgb(128, 0, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 0, 0)">source</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(4, 81, 165)">=</span><span class="token tag attr-value punctuation" style="color:rgb(4, 81, 165)">"</span><span class="token tag attr-value" style="color:rgb(128, 0, 0)">id</span><span class="token tag attr-value punctuation" style="color:rgb(4, 81, 165)">"</span><span class="token tag" style="color:rgb(128, 0, 0)"> </span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">&lt;</span><span class="token tag class-name" style="color:rgb(38, 127, 153)">TextField</span><span class="token tag" style="color:rgb(128, 0, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 0, 0)">source</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(4, 81, 165)">=</span><span class="token tag attr-value punctuation" style="color:rgb(4, 81, 165)">"</span><span class="token tag attr-value" style="color:rgb(128, 0, 0)">title</span><span class="token tag attr-value punctuation" style="color:rgb(4, 81, 165)">"</span><span class="token tag" style="color:rgb(128, 0, 0)"> </span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">&lt;</span><span class="token tag class-name" style="color:rgb(38, 127, 153)">TextField</span><span class="token tag" style="color:rgb(128, 0, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 0, 0)">source</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(4, 81, 165)">=</span><span class="token tag attr-value punctuation" style="color:rgb(4, 81, 165)">"</span><span class="token tag attr-value" style="color:rgb(128, 0, 0)">content</span><span class="token tag attr-value punctuation" style="color:rgb(4, 81, 165)">"</span><span class="token tag" style="color:rgb(128, 0, 0)"> </span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">&lt;</span><span class="token tag class-name" style="color:rgb(38, 127, 153)">TextField</span><span class="token tag" style="color:rgb(128, 0, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 0, 0)">source</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(4, 81, 165)">=</span><span class="token tag attr-value punctuation" style="color:rgb(4, 81, 165)">"</span><span class="token tag attr-value" style="color:rgb(128, 0, 0)">createdAt</span><span class="token tag attr-value punctuation" style="color:rgb(4, 81, 165)">"</span><span class="token tag" style="color:rgb(128, 0, 0)"> </span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">&lt;</span><span class="token tag class-name" style="color:rgb(38, 127, 153)">TextField</span><span class="token tag" style="color:rgb(128, 0, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 0, 0)">source</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(4, 81, 165)">=</span><span class="token tag attr-value punctuation" style="color:rgb(4, 81, 165)">"</span><span class="token tag attr-value" style="color:rgb(128, 0, 0)">updatedAt</span><span class="token tag attr-value punctuation" style="color:rgb(4, 81, 165)">"</span><span class="token tag" style="color:rgb(128, 0, 0)"> </span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">&lt;/</span><span class="token tag class-name" style="color:rgb(38, 127, 153)">Datagrid</span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">&lt;/</span><span class="token tag class-name" style="color:rgb(38, 127, 153)">List</span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:rgb(0, 0, 255)">PostShow</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(0, 0, 0)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">&lt;</span><span class="token tag class-name" style="color:rgb(38, 127, 153)">Show</span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">&lt;</span><span class="token tag class-name" style="color:rgb(38, 127, 153)">SimpleShowLayout</span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">&lt;</span><span class="token tag class-name" style="color:rgb(38, 127, 153)">TextField</span><span class="token tag" style="color:rgb(128, 0, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 0, 0)">source</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(4, 81, 165)">=</span><span class="token tag attr-value punctuation" style="color:rgb(4, 81, 165)">"</span><span class="token tag attr-value" style="color:rgb(128, 0, 0)">id</span><span class="token tag attr-value punctuation" style="color:rgb(4, 81, 165)">"</span><span class="token tag" style="color:rgb(128, 0, 0)"> </span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">&lt;</span><span class="token tag class-name" style="color:rgb(38, 127, 153)">TextField</span><span class="token tag" style="color:rgb(128, 0, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 0, 0)">source</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(4, 81, 165)">=</span><span class="token tag attr-value punctuation" style="color:rgb(4, 81, 165)">"</span><span class="token tag attr-value" style="color:rgb(128, 0, 0)">title</span><span class="token tag attr-value punctuation" style="color:rgb(4, 81, 165)">"</span><span class="token tag" style="color:rgb(128, 0, 0)"> </span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">&lt;</span><span class="token tag class-name" style="color:rgb(38, 127, 153)">TextField</span><span class="token tag" style="color:rgb(128, 0, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 0, 0)">source</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(4, 81, 165)">=</span><span class="token tag attr-value punctuation" style="color:rgb(4, 81, 165)">"</span><span class="token tag attr-value" style="color:rgb(128, 0, 0)">content</span><span class="token tag attr-value punctuation" style="color:rgb(4, 81, 165)">"</span><span class="token tag" style="color:rgb(128, 0, 0)"> </span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">&lt;</span><span class="token tag class-name" style="color:rgb(38, 127, 153)">TextField</span><span class="token tag" style="color:rgb(128, 0, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 0, 0)">source</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(4, 81, 165)">=</span><span class="token tag attr-value punctuation" style="color:rgb(4, 81, 165)">"</span><span class="token tag attr-value" style="color:rgb(128, 0, 0)">createdAt</span><span class="token tag attr-value punctuation" style="color:rgb(4, 81, 165)">"</span><span class="token tag" style="color:rgb(128, 0, 0)"> </span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">&lt;</span><span class="token tag class-name" style="color:rgb(38, 127, 153)">TextField</span><span class="token tag" style="color:rgb(128, 0, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 0, 0)">source</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(4, 81, 165)">=</span><span class="token tag attr-value punctuation" style="color:rgb(4, 81, 165)">"</span><span class="token tag attr-value" style="color:rgb(128, 0, 0)">updatedAt</span><span class="token tag attr-value punctuation" style="color:rgb(4, 81, 165)">"</span><span class="token tag" style="color:rgb(128, 0, 0)"> </span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">&lt;/</span><span class="token tag class-name" style="color:rgb(38, 127, 153)">SimpleShowLayout</span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">&lt;/</span><span class="token tag class-name" style="color:rgb(38, 127, 153)">Show</span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token maybe-class-name">ReactDOM</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token method function property-access" style="color:rgb(0, 0, 255)">createRoot</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token dom variable" style="color:rgb(9, 134, 88)">document</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token method function property-access" style="color:rgb(0, 0, 255)">getElementById</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">'root'</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token operator" style="color:rgb(0, 0, 0)">!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token method function property-access" style="color:rgb(0, 0, 255)">render</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">&lt;</span><span class="token tag class-name" style="color:rgb(38, 127, 153)">Admin</span><span class="token tag" style="color:rgb(128, 0, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 0, 0)">dataProvider</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token tag script language-javascript" style="color:rgb(128, 0, 0)">dataProvider</span><span class="token tag script language-javascript punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">&lt;</span><span class="token tag class-name" style="color:rgb(38, 127, 153)">Resource</span><span class="token tag" style="color:rgb(128, 0, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 0, 0)">name</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(4, 81, 165)">=</span><span class="token tag attr-value punctuation" style="color:rgb(4, 81, 165)">"</span><span class="token tag attr-value" style="color:rgb(128, 0, 0)">posts</span><span class="token tag attr-value punctuation" style="color:rgb(4, 81, 165)">"</span><span class="token tag" style="color:rgb(128, 0, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 0, 0)">list</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token tag script language-javascript maybe-class-name" style="color:rgb(128, 0, 0)">PostList</span><span class="token tag script language-javascript punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token tag" style="color:rgb(128, 0, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 0, 0)">show</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token tag script language-javascript maybe-class-name" style="color:rgb(128, 0, 0)">PostShow</span><span class="token tag script language-javascript punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token tag" style="color:rgb(128, 0, 0)"> </span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">&lt;/</span><span class="token tag class-name" style="color:rgb(38, 127, 153)">Admin</span><span class="token tag punctuation" style="color:rgb(4, 81, 165)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="auth-free-graphql-endpoint">Auth Free GraphQL Endpoint<a href="https://www.sea-ql.org/blog/2024-08-08-graphql-admin-dashboard-with-loco-seaography/#auth-free-graphql-endpoint" class="hash-link" aria-label="Direct link to Auth Free GraphQL Endpoint" title="Direct link to Auth Free GraphQL Endpoint">​</a></h2>
<p>Disabled user authentication on GraphQL POST handler endpoint for convenient:</p>
<div class="language-diff codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockTitle_OeMC">backend/src/controllers/graphql.rs</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-diff codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">async fn graphql_handler(</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">-   _auth: auth::JWT,</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    State(ctx): State&lt;AppContext&gt;,</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    req: Request&lt;Body&gt;,</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">) -&gt; Result&lt;Response&gt; {</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    const DEPTH: usize = 1_000;</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    const COMPLEXITY: usize = 1_000;</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    // Construct the the GraphQL query root</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    let schema = query_root::schema(ctx.db.clone(), DEPTH, COMPLEXITY).unwrap();</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    // GraphQL handler</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    let mut graphql_handler = async_graphql_axum::GraphQL::new(schema);</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    // Execute GraphQL request and fetch the results</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    let res = graphql_handler.call(req).await.unwrap();</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    Ok(res)</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="put-it-into-action">Put It into Action!<a href="https://www.sea-ql.org/blog/2024-08-08-graphql-admin-dashboard-with-loco-seaography/#put-it-into-action" class="hash-link" aria-label="Direct link to Put It into Action!" title="Direct link to Put It into Action!">​</a></h2>
<p>Run the React-Admin frontend:</p>
<div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">$ </span><span class="token builtin class-name" style="color:rgb(38, 127, 153)">cd</span><span class="token plain"> frontend</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">$ </span><span class="token function" style="color:rgb(0, 0, 255)">npm</span><span class="token plain"> run dev</span><br></span></code></pre></div></div>
<p>Run the Loco backend:</p>
<div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">$ </span><span class="token builtin class-name" style="color:rgb(38, 127, 153)">cd</span><span class="token plain"> backend</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">$ </span><span class="token function" style="color:rgb(0, 0, 255)">cargo</span><span class="token plain"> run start</span><br></span></code></pre></div></div>
<p>Visit <a href="http://localhost:5173/" target="_blank" rel="noopener noreferrer">http://localhost:5173/</a>, you should see the post listing page:</p>
<p><img decoding="async" loading="lazy" src="https://www.sea-ql.org/blog/img/Loco%20x%20Seaography%20Dashboard%20List.png" alt="" class="img_ev3q"></p>
<p>We are fetching data from the GraphQL backend:</p>
<p><img decoding="async" loading="lazy" src="https://www.sea-ql.org/blog/img/Loco%20x%20Seaography%20Dashboard%20List%20API.png" alt="" class="img_ev3q"></p>
<p>Click on column header to sort by the column in ascending or descending order:</p>
<p><img decoding="async" loading="lazy" src="https://www.sea-ql.org/blog/img/Loco%20x%20Seaography%20Dashboard%20List%20Sorted.png" alt="" class="img_ev3q"></p>
<p>Click on each row to view its detail page:</p>
<p><img decoding="async" loading="lazy" src="https://www.sea-ql.org/blog/img/Loco%20x%20Seaography%20Dashboard%20View.png" alt="" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://www.sea-ql.org/blog/2024-08-08-graphql-admin-dashboard-with-loco-seaography/#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion">​</a></h2>
<p>Adding GraphQL support to Loco application is easy with the help of Seaography. It is an ergonomic library that perfectly integrate with any frontend framework. This tutorial only cover the basic integration of LOco and Seaography including only the querying of data via the GraphQL endpoint. GraphQL mutations are not demonstrated and we leave it for you to code it out!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="sql-server-support">SQL Server Support<a href="https://www.sea-ql.org/blog/2024-08-08-graphql-admin-dashboard-with-loco-seaography/#sql-server-support" class="hash-link" aria-label="Direct link to SQL Server Support" title="Direct link to SQL Server Support">​</a></h2>
<p><a href="https://www.sea-ql.org/SeaORM-X/" target="_blank" rel="noopener noreferrer">SQL Server for SeaORM</a> is now available as a closed beta. If you are interested`, please signup <a href="https://forms.office.com/r/1MuRPJmYBR" target="_blank" rel="noopener noreferrer">here</a>.</p>
<p>Migrating from <code>sea-orm</code> to <code>sea-orm-x</code> is straightforward with two simple steps. First, update the existing <code>sea-orm</code> dependency to <code>sea-orm-x</code> and enable the <code>sqlz-mssql</code> feature. Note that you might need to patch SeaORM dependency for the upstream dependencies.</p>
<div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockTitle_OeMC">Cargo.toml</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token key property">sea-orm</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token key property">path</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"&lt;SEA_ORM_X_ROOT&gt;/sea-orm-x"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token key property">features</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token string" style="color:rgb(163, 21, 21)">"runtime-async-std-rustls"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"sqlz-mssql"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token key property">sea-orm-migration</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token key property">path</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"&lt;SEA_ORM_X_ROOT&gt;/sea-orm-x/sea-orm-migration"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)"># Patch SeaORM dependency for the upstream dependencies</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token table class-name" style="color:rgb(38, 127, 153)">patch.crates-io</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token key property">sea-orm</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token key property">path</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"&lt;SEA_ORM_X_ROOT&gt;/sea-orm-x"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token key property">sea-orm-migration</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token key property">path</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"&lt;SEA_ORM_X_ROOT&gt;/sea-orm-x/sea-orm-migration"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>Second, update the connection string to connect to the MSSQL database.</p>
<div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)"># If the schema is `dbo`, simply write:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">mssql://username:password@host/database</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)"># Or, specify the schema name by providing an extra `currentSchema` query param.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">mssql://username:password@host/database?currentSchema</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">my_schema</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)"># You can trust peer certificate by providing an extra trustCertificate query param.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">mssql://username:password@host/database?trustCertificate</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">true</span><br></span></code></pre></div></div>
<p>SeaORM X has full Loco support and integrate seamlessly with many web frameworks:</p>
<ul>
<li>Actix</li>
<li>Axum</li>
<li>Async GraphQL</li>
<li>jsonrpsee</li>
<li>Loco</li>
<li>Poem</li>
<li>Salvo</li>
<li>Tonic</li>
</ul>
<p>Happy Coding!</p>]]></content>
        <author>
            <name>Billy Chan</name>
            <uri>https://github.com/billy1624</uri>
        </author>
        <category label="news" term="news"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Announcing SeaORM 1.0 🐚]]></title>
        <id>https://www.sea-ql.org/blog/2024-08-04-sea-orm-1.0/</id>
        <link href="https://www.sea-ql.org/blog/2024-08-04-sea-orm-1.0/"/>
        <updated>2024-08-04T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[🎉 We are pleased to release SeaORM 1.0 today! This is an special occasion for us, so this blog post will be a little more than a release notes.]]></summary>
        <content type="html"><![CDATA[<img alt="SeaORM 1.0 Banner" src="https://www.sea-ql.org/blog/img/SeaORM%201.0%20Banner.png">
<p>🎉 We are pleased to release <a href="https://github.com/SeaQL/sea-orm/releases/tag/1.0.0" target="_blank" rel="noopener noreferrer">SeaORM 1.0</a> today! This is an special occasion for us, so this blog post will be a little more than a release notes.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="our-journey">Our Journey<a href="https://www.sea-ql.org/blog/2024-08-04-sea-orm-1.0/#our-journey" class="hash-link" aria-label="Direct link to Our Journey" title="Direct link to Our Journey">​</a></h2>
<p>It's nearly been three years since our <a href="https://www.sea-ql.org/blog/2021-09-20-introducing-sea-orm/" target="_blank" rel="noopener noreferrer">SeaORM 0.2</a> release. At that time, we set out to build a SQL ORM for the async Rust ecosystem, bringing together the best crates to allow developers to build high-performance and robust web services.</p>
<p>We would like to thank all early-adoptors, contributors and sponsors of SeaORM. Thank you to all our users for your trust and for being a part of our journey.</p>
<p>Today, many startups and companies are building applications in Rust, with SeaORM being an integral part of the stack. We are particularly pleased to see application frameworks, such as <a href="https://loco.rs/" target="_blank" rel="noopener noreferrer">Loco</a>, that provide tight integration with SeaORM, thereby offering a streamlined developer experience.</p>
<p>I think we've achieved our initial goal! We understand that maturity and stability are important considerations for teams when making technology choices. Therefore, we believe it's now time to stabilize SeaORM.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="new-features">New Features<a href="https://www.sea-ql.org/blog/2024-08-04-sea-orm-1.0/#new-features" class="hash-link" aria-label="Direct link to New Features" title="Direct link to New Features">​</a></h2>
<p>Here are the highlights of some new features and enhancements introduced in SeaORM 1.0.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="refreshed-migration-schema-definition">Refreshed migration schema definition<a href="https://www.sea-ql.org/blog/2024-08-04-sea-orm-1.0/#refreshed-migration-schema-definition" class="hash-link" aria-label="Direct link to Refreshed migration schema definition" title="Direct link to Refreshed migration schema definition">​</a></h3>
<p><a href="https://github.com/SeaQL/sea-orm/pull/2099" target="_blank" rel="noopener noreferrer">#2099</a> Thanks to the clever design made by Loco, we've refreshed the schema definition syntax.</p>
<p>An old migration script looks like this:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[async_trait::async_trait]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">impl</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">MigrationTrait</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Migration</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">up</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> manager</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token class-name" style="color:rgb(38, 127, 153)">SchemaManager</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Result</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DbErr</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        manager</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">create_table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                </span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">create</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Users</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">if_not_exists</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                        </span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Users</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">integer</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">not_null</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">auto_increment</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">primary_key</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Users</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Pid</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">uuid</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">not_null</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Users</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Email</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">not_null</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unique_key</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token comment" style="color:rgb(0, 128, 0)">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>Now, using the new schema helpers, you can define the schema with a simplified syntax!</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)">// Remember to import `sea_orm_migration::schema::*`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">use</span><span class="token plain"> </span><span class="token namespace">sea_orm_migration</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token namespace">prelude</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token operator" style="color:rgb(0, 0, 0)">*</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token namespace">schema</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token operator" style="color:rgb(0, 0, 0)">*</span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(DeriveMigrationName)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Migration</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[async_trait::async_trait]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">impl</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">MigrationTrait</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Migration</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">up</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> manager</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token class-name" style="color:rgb(38, 127, 153)">SchemaManager</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Result</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DbErr</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        manager</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">create_table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                </span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">create</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Users</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">if_not_exists</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token function" style="color:rgb(0, 0, 255)">pk_auto</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Users</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// Primary key with auto-increment</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token function" style="color:rgb(0, 0, 255)">uuid</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Users</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Pid</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// UUID column</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token function" style="color:rgb(0, 0, 255)">string_uniq</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Users</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Email</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// String column with unique and not null constraint</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token function" style="color:rgb(0, 0, 255)">string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Users</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Password</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// String column</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token function" style="color:rgb(0, 0, 255)">string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Users</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ApiKey</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unique_key</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token function" style="color:rgb(0, 0, 255)">string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Users</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token function" style="color:rgb(0, 0, 255)">string_null</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Users</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ResetToken</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// Nullable string column</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token function" style="color:rgb(0, 0, 255)">timestamp_null</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Users</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ResetSentAt</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// Nullable timestamp column</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token function" style="color:rgb(0, 0, 255)">string_null</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Users</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">EmailVerificationToken</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token function" style="color:rgb(0, 0, 255)">timestamp_null</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Users</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">EmailVerificationSentAt</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token function" style="color:rgb(0, 0, 255)">timestamp_null</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Users</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">EmailVerifiedAt</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_owned</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>There are three variants for each commonly used column type:</p>
<ul>
<li><code>&lt;COLUMN_TYPE&gt;()</code> helper function, e.g. <code>string()</code>, define a non-null string column</li>
<li><code>&lt;COLUMN_TYPE&gt;_null()</code> helper function, e.g. <code>string_null()</code>, define a nullable string column</li>
<li><code>&lt;COLUMN_TYPE&gt;_uniq()</code> helper function, e.g. <code>string_uniq()</code>, define a non-null and unique string column</li>
</ul>
<p>The new schema helpers can be used by importing <code>sea_orm_migration::schema::*</code>. The migration library is fully backward compatible, so there is no rush to migrate old scripts. The new syntax is recommended for new scripts, and all examples in the SeaORM repository have been updated for demonstration. For advanced use cases, the old SeaQuery syntax can still be used.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="reworked-sqlite-type-mappings">Reworked SQLite Type Mappings<a href="https://www.sea-ql.org/blog/2024-08-04-sea-orm-1.0/#reworked-sqlite-type-mappings" class="hash-link" aria-label="Direct link to Reworked SQLite Type Mappings" title="Direct link to Reworked SQLite Type Mappings">​</a></h3>
<p><a href="https://github.com/SeaQL/sea-orm/pull/2077" target="_blank" rel="noopener noreferrer">sea-orm#2077</a> <a href="https://github.com/SeaQL/sea-query/pull/735" target="_blank" rel="noopener noreferrer">sea-query#735</a> <a href="https://github.com/SeaQL/sea-schema/pull/117" target="_blank" rel="noopener noreferrer">sea-schema#117</a> We've reworked the type mappings for SQLite across the SeaQL ecosystem, such that SeaQuery and SeaSchema are now reciprocal to each other. Migrations written with SeaQuery can be rediscovered by <code>sea-orm-cli</code> and generate compatible entities! In other words, the roundtrip is complete.</p>
<p>Data types will be mapped to SQLite types with a custom naming scheme following SQLite's affinity rule:</p>
<ul>
<li><code>INTEGER</code>: <code>integer</code>, <code>tiny_integer</code>, <code>small_integer</code>, <code>big_integer</code> and <code>boolean</code> are stored as <code>integer</code></li>
<li><code>REAL</code>: <code>float</code>, <code>double</code>, <code>decimal</code> and <code>money</code> are stored as <code>real</code></li>
<li><code>BLOB</code>: <code>blob</code> and <code>varbinary_blob</code> are stored as <code>blob</code></li>
<li><code>TEXT</code>: all other data types are stored as <code>text</code>, including <code>string</code>, <code>char</code>, <code>text</code>, <code>json</code>, <code>uuid</code>, <code>date</code>, <code>time</code>, <code>datetime</code>, <code>timestamp</code>, etc.</li>
</ul>
<p>The full type mapping table is <a href="https://docs.rs/sea-query/0.31.0-rc.4/sea_query/table/enum.ColumnType.html" target="_blank" rel="noopener noreferrer">documented here</a>. For more information, please refer to our <a href="https://www.sea-ql.org/blog/2024-04-08-whats-new-in-seaorm-1.0-rc.x/" target="_blank" rel="noopener noreferrer">previous blog post</a>.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="alternative-casing-support-for-entitymodel--activeenum">Alternative casing support for <code>EntityModel</code> &amp; <code>ActiveEnum</code><a href="https://www.sea-ql.org/blog/2024-08-04-sea-orm-1.0/#alternative-casing-support-for-entitymodel--activeenum" class="hash-link" aria-label="Direct link to alternative-casing-support-for-entitymodel--activeenum" title="Direct link to alternative-casing-support-for-entitymodel--activeenum">​</a></h3>
<p><a href="https://github.com/SeaQL/sea-orm/pull/2170" target="_blank" rel="noopener noreferrer">#2170</a> Added <code>rename_all</code> attribute to <code>DeriveEntityModel</code> &amp; <code>DeriveActiveEnum</code></p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(DeriveEntityModel)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(table_name = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"user"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">, rename_all = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"camelCase"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(primary_key)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    first_name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// firstName</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(column_name = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"lAsTnAmE"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    last_name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// lAsTnAmE</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(EnumIter, DeriveActiveEnum)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(rs_type = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"String"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">, db_type = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"String(StringLen::None)"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">, rename_all = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"camelCase"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">enum</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">TestEnum</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">DefaultVariant</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// defaultVariant</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(rename = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"kebab-case"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">VariantKebabCase</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// variant-kebab-case</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(rename = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"snake_case"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">VariantSnakeCase</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// variant_snake_case</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(string_value = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"CuStOmStRiNgVaLuE"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">CustomStringValue</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// CuStOmStRiNgVaLuE</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="other-enhancements">Other Enhancements<a href="https://www.sea-ql.org/blog/2024-08-04-sea-orm-1.0/#other-enhancements" class="hash-link" aria-label="Direct link to Other Enhancements" title="Direct link to Other Enhancements">​</a></h3>
<ul>
<li><a href="https://github.com/SeaQL/sea-orm/pull/2185" target="_blank" rel="noopener noreferrer">#2185</a> <code>PrimaryKeyArity</code> trait with <code>ARITY</code> Constant</li>
</ul>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">get_arity_of</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">E</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">EntityTrait</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">usize</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">E</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">PrimaryKey</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">iter</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">count</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// before; runtime</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">E</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">PrimaryKey</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">as</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">PrimaryKeyTrait</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ValueType</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">as</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">PrimaryKeyArity</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token constant" style="color:rgb(129, 31, 63)">ARITY</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// now; compile-time</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<ul>
<li><a href="https://github.com/SeaQL/sea-orm/pull/2137" target="_blank" rel="noopener noreferrer">#2137</a> <code>DerivePartialModel</code> macro attribute <code>entity</code> now supports <code>syn::Type</code></li>
</ul>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(DerivePartialModel)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(entity = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"&lt;entity::Model as ModelTrait&gt;::Entity"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">EntityNameNotAIdent</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(from_col = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"foo2"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    _foo</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(from_col = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"bar2"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    _bar</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<ul>
<li><a href="https://github.com/SeaQL/sea-orm/pull/2146" target="_blank" rel="noopener noreferrer">#2146</a> Added <code>RelationDef::from_alias()</code></li>
</ul>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(DeriveIden)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Cf</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">find</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">join_as</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token class-name" style="color:rgb(38, 127, 153)">JoinType</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">LeftJoin</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token namespace">cake_filling</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Relation</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Cake</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">def</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">rev</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token class-name" style="color:rgb(38, 127, 153)">Cf</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">join</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token class-name" style="color:rgb(38, 127, 153)">JoinType</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">LeftJoin</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token namespace">cake_filling</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Relation</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Filling</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">def</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">from_alias</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Cf</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">build</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">DbBackend</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">MySql</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token string" style="color:rgb(163, 21, 21)">"SELECT `cake`.`id`, `cake`.`name` FROM `cake`"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token string" style="color:rgb(163, 21, 21)">"LEFT JOIN `cake_filling` AS `cf` ON `cake`.`id` = `cf`.`cake_id`"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token string" style="color:rgb(163, 21, 21)">"LEFT JOIN `filling` ON `cf`.`filling_id` = `filling`.`id`"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">join</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">" "</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<ul>
<li><a href="https://github.com/SeaQL/sea-orm/pull/2256" target="_blank" rel="noopener noreferrer">#2256</a> Added non-TLS runtime</li>
<li><a href="https://github.com/SeaQL/sea-orm/pull/2244" target="_blank" rel="noopener noreferrer">#2244</a> Added <code>Insert::on_conflict_do_nothing</code></li>
<li><a href="https://github.com/SeaQL/sea-orm/pull/2255" target="_blank" rel="noopener noreferrer">#2255</a> Migration schema nullable column set NULL explicitly</li>
<li><a href="https://github.com/SeaQL/sea-orm/pull/2194" target="_blank" rel="noopener noreferrer">#2194</a> Added <code>ActiveValue::set_if_not_equals()</code></li>
<li><a href="https://github.com/SeaQL/sea-orm/pull/2197" target="_blank" rel="noopener noreferrer">#2197</a> Added <code>ActiveValue::try_as_ref()</code></li>
<li><a href="https://github.com/SeaQL/sea-orm/pull/2228" target="_blank" rel="noopener noreferrer">#2228</a> Added <code>QuerySelect::order_by_with_nulls</code></li>
<li><a href="https://github.com/SeaQL/sea-orm/pull/2233" target="_blank" rel="noopener noreferrer">#2233</a> Expose <code>get_xxx_connection_pool</code> by default</li>
<li><a href="https://github.com/SeaQL/sea-orm/pull/2148" target="_blank" rel="noopener noreferrer">#2148</a> Added <code>QueryResult::column_names</code></li>
<li><a href="https://github.com/SeaQL/sea-orm/pull/2199" target="_blank" rel="noopener noreferrer">#2199</a> [sea-orm-macro] Add <code>@generated</code> in generated code</li>
<li><a href="https://github.com/SeaQL/sea-orm/pull/1665" target="_blank" rel="noopener noreferrer">#1665</a> [sea-orm-macro] Qualify traits in <code>DeriveActiveModel</code> macro</li>
<li><a href="https://github.com/SeaQL/sea-orm/pull/2064" target="_blank" rel="noopener noreferrer">#2064</a> [sea-orm-cli] Fix <code>migrate generate</code> on empty <code>mod.rs</code> files</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="release-planning">Release Planning<a href="https://www.sea-ql.org/blog/2024-08-04-sea-orm-1.0/#release-planning" class="hash-link" aria-label="Direct link to Release Planning" title="Direct link to Release Planning">​</a></h2>
<p><a href="https://github.com/launchbadge/sqlx/blob/main/CHANGELOG.md#080---2024-07-22" target="_blank" rel="noopener noreferrer">SQLx 0.8</a> is recently released! We want to upgrade from <code>0.7</code> as soon as possible. However, since <code>sea-orm</code> <code>1.0</code> has been in release candidate status for a while, and considering the breaking changes in <code>sqlx</code> <code>0.8</code>, we decided to keep <code>sea-orm</code> <code>1.0</code> on <code>sqlx</code> <code>0.7</code>.</p>
<p>We plan to release <code>sea-orm</code> <code>1.1</code> on <code>sqlx</code> <code>0.8</code> soon. To avoid unplanned build failures, we recommend all users to specify SeaORM dependency with <code>tilde</code> requirement:</p>
<div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token key property">sea-orm</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token key property">version</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"~1.0"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>According to the <a href="https://doc.rust-lang.org/cargo/reference/resolver.html" target="_blank" rel="noopener noreferrer">Cargo Book</a>, this will prevent automatic upgrade to <code>1.1</code>, so you can perform the upgrade at a convenient time.</p>
<p>If you've been depending on <code>sea-orm</code> <code>0.12</code>, you're recommended to upgrade to <code>1.0</code> today. As they're both using <code>sqlx</code> <code>0.7</code>, this upgrade focuses on SeaORM. And then upgrade to <code>1.1</code> down the line, which will then focus on SQLx, as we won't introduce any breaking changes. We recommend taking it one step at a time!</p>
<p>SeaORM 1.x will be maintained for at least 1 year. By then, we'll decide whether we want to release 2.0 and/or extend the lifecycle of 1.x.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="our-future">Our Future<a href="https://www.sea-ql.org/blog/2024-08-04-sea-orm-1.0/#our-future" class="hash-link" aria-label="Direct link to Our Future" title="Direct link to Our Future">​</a></h2>
<p>You may ask, does this mean SeaORM is "done"? No, not at all! SeaORM 1.0 provides us and the community a solid foundation to build more ambitious features around SeaORM. Here are some facets of our vision:</p>
<ol>
<li>
<p>GraphQL support via Seaography. We want to further develop Seaography to allow developers to turn a set of SeaORM entities into a fully-fledged GraphQL server!</p>
</li>
<li>
<p>Admin dashboard. We want to build a first-class frontend framework for SeaORM. It will be a breeze to develop admin / client portals with SeaORM!</p>
</li>
<li>
<p>Data science / analytics. SeaORM's been focusing on OLTP for now, and we're aware that people also have been using SeaORM for OLAP workloads. We want to provide better integration with dataframe libraries and develop more features tailored for data science and engineering.</p>
</li>
<li>
<p>Scale-out features. We want to develop features to help with scaling applications, e.g. sharding, caching and multi-tenancy.</p>
</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="sql-server-support">SQL Server Support<a href="https://www.sea-ql.org/blog/2024-08-04-sea-orm-1.0/#sql-server-support" class="hash-link" aria-label="Direct link to SQL Server Support" title="Direct link to SQL Server Support">​</a></h2>
<p>We've been planning <a href="https://www.sea-ql.org/SeaORM-X/" target="_blank" rel="noopener noreferrer">SQL Server for SeaORM</a> for a while, and SQL Server is finally coming to SeaORM 1.0! It will first be offered as a closed beta to our partners. If you are interested, please join our <a href="https://forms.office.com/r/1MuRPJmYBR" target="_blank" rel="noopener noreferrer">waiting list</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="sponsor">Sponsor<a href="https://www.sea-ql.org/blog/2024-08-04-sea-orm-1.0/#sponsor" class="hash-link" aria-label="Direct link to Sponsor" title="Direct link to Sponsor">​</a></h2>
<p>A small donation will be greatly appreciated, and goes a long way towards sustaining the organization.</p>
<p>A big shout out to our <a href="https://github.com/sponsors/SeaQL" target="_blank" rel="noopener noreferrer">sponsors</a> 😇:</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="gold-sponsors">Gold Sponsors<a href="https://www.sea-ql.org/blog/2024-08-04-sea-orm-1.0/#gold-sponsors" class="hash-link" aria-label="Direct link to Gold Sponsors" title="Direct link to Gold Sponsors">​</a></h3>
<a href="https://osmos.io/"><img src="https://www.sea-ql.org/static/sponsors/Osmos.svg#light" width="238"><img src="https://www.sea-ql.org/static/sponsors/Osmos-dark.svg#dark" width="238"></a>
<p><a href="https://osmos.io/" target="_blank" rel="noopener noreferrer">osmos</a> offers a data ingestion platform to streamline data ingestion, transformation and workflow management, and they're using SeaQL libraries under the hood!</p>
<p>Contact us if you also want to become a company sponsor and be featured here.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="github-sponsors">GitHub Sponsors<a href="https://www.sea-ql.org/blog/2024-08-04-sea-orm-1.0/#github-sponsors" class="hash-link" aria-label="Direct link to GitHub Sponsors" title="Direct link to GitHub Sponsors">​</a></h3>
<div class="row"><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/tugascript"><img src="https://avatars.githubusercontent.com/u/64930104?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Afonso Barracha</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/deansheather"><img src="https://avatars.githubusercontent.com/u/11241812?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Dean Sheather</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/marcusbuffett"><img src="https://avatars.githubusercontent.com/u/1834328?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Marcus Buffett</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/ktanaka101"><img src="https://avatars.githubusercontent.com/u/10344925?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Kentaro Tanaka</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/siketyan"><img src="https://avatars.githubusercontent.com/u/12772118?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Naoki Ikeguchi</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/milesgranger"><img src="https://avatars.githubusercontent.com/u/13764397?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Miles Granger</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/data-intuitive"><img src="https://avatars.githubusercontent.com/u/15045722?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Data Intuitive</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/mmuellersoppart"><img src="https://avatars.githubusercontent.com/u/16762461?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Marlon Mueller-Soppart</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/anshap1719"><img src="https://avatars.githubusercontent.com/u/19164745?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Anshul Sanghi</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/yuly3"><img src="https://avatars.githubusercontent.com/u/25814001?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>MasakiMiyazaki</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/manfredcml"><img src="https://avatars.githubusercontent.com/u/27536502?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Manfred Lee</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/kallydev"><img src="https://avatars.githubusercontent.com/u/36319157?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>KallyDev</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/ellik159"><img src="https://avatars.githubusercontent.com/u/46644287?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>ellik159</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/caido"><img src="https://avatars.githubusercontent.com/u/78991750?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Caido</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/Coolpany-SE"><img src="https://avatars.githubusercontent.com/u/96304487?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Coolpany SE</p></div></div></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="rustacean-sticker-pack-">Rustacean Sticker Pack 🦀<a href="https://www.sea-ql.org/blog/2024-08-04-sea-orm-1.0/#rustacean-sticker-pack-" class="hash-link" aria-label="Direct link to Rustacean Sticker Pack 🦀" title="Direct link to Rustacean Sticker Pack 🦀">​</a></h2>
<p>The Rustacean Sticker Pack is the perfect way to express your passion for Rust.
Our stickers are made with a premium water-resistant vinyl with a unique matte finish.
Stick them on your laptop, notebook, or any gadget to show off your love for Rust!</p>
<p>Moreover, all proceeds contributes directly to the ongoing development of SeaQL projects.</p>
<p>Sticker Pack Contents:</p>
<ul>
<li>Logo of SeaQL projects: SeaQL, SeaORM, SeaQuery, Seaography, FireDBG</li>
<li>Mascot of SeaQL: Terres the Hermit Crab</li>
<li>Mascot of Rust: Ferris the Crab</li>
<li>The Rustacean word</li>
</ul>
<p><a href="https://www.sea-ql.org/sticker-pack/" target="_blank" rel="noopener noreferrer">Support SeaQL and get a Sticker Pack!</a></p>
<a href="https://www.sea-ql.org/sticker-pack/"><img style="border-radius:25px" alt="Rustacean Sticker Pack by SeaQL" src="https://www.sea-ql.org/static/sticker-pack-1s.jpg"></a>]]></content>
        <author>
            <name>SeaQL Team</name>
            <uri>https://github.com/SeaQL</uri>
        </author>
        <category label="news" term="news"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Adding GraphQL Support to Loco with Seaography]]></title>
        <id>https://www.sea-ql.org/blog/2024-07-01-graphql-support-with-loco-seaography/</id>
        <link href="https://www.sea-ql.org/blog/2024-07-01-graphql-support-with-loco-seaography/"/>
        <updated>2024-07-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this tutorial, we would add a GraphQL endpoint with Seaography based on our Loco starter application. Read our first tutorial of the series, Getting Started with Loco & SeaORM, if you haven't.]]></summary>
        <content type="html"><![CDATA[<img src="https://www.sea-ql.org/blog/img/Loco%20x%20SeaORM.png">
<p>In this tutorial, we would add a GraphQL endpoint with <a href="https://github.com/SeaQL/seaography" target="_blank" rel="noopener noreferrer">Seaography</a> based on our Loco starter application. Read our first tutorial of the series, <a href="https://www.sea-ql.org/blog/2024-05-28-getting-started-with-loco-seaorm/" target="_blank" rel="noopener noreferrer">Getting Started with Loco &amp; SeaORM</a>, if you haven't.</p>
<p>The full source code can be found <a href="https://github.com/SeaQL/sea-orm/tree/master/examples/loco_seaography" target="_blank" rel="noopener noreferrer">here</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-seaography">What is Seaography<a href="https://www.sea-ql.org/blog/2024-07-01-graphql-support-with-loco-seaography/#what-is-seaography" class="hash-link" aria-label="Direct link to What is Seaography" title="Direct link to What is Seaography">​</a></h2>
<p>Seaography is a GraphQL framework for building GraphQL resolvers using SeaORM entities. It ships with a CLI tool that can generate ready-to-compile Rust GraphQL servers from existing MySQL, Postgres and SQLite databases.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="adding-dependency">Adding Dependency<a href="https://www.sea-ql.org/blog/2024-07-01-graphql-support-with-loco-seaography/#adding-dependency" class="hash-link" aria-label="Direct link to Adding Dependency" title="Direct link to Adding Dependency">​</a></h2>
<p>Modify <code>Cargo.toml</code> and add a few more dependencies: <code>seaography</code>, <code>async-graphql</code>, <code>async-graphql-axum</code> and <code>lazy_static</code>.</p>
<div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockTitle_OeMC">loco_seaography/Cargo.toml</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token key property">seaography</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token key property">version</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"1.0.0-rc.4"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token key property">features</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token string" style="color:rgb(163, 21, 21)">"with-decimal"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"with-chrono"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token key property">async-graphql</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token key property">version</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"7.0"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token key property">features</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token string" style="color:rgb(163, 21, 21)">"decimal"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"chrono"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"dataloader"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"dynamic-schema"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token key property">async-graphql-axum</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token key property">version</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"7.0"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token key property">lazy_static</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token key property">version</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"1.4"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token key property">tower-service</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token key property">version</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"0.3"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="setting-up-seaorm-entities-for-seaography">Setting up SeaORM Entities for Seaography<a href="https://www.sea-ql.org/blog/2024-07-01-graphql-support-with-loco-seaography/#setting-up-seaorm-entities-for-seaography" class="hash-link" aria-label="Direct link to Setting up SeaORM Entities for Seaography" title="Direct link to Setting up SeaORM Entities for Seaography">​</a></h2>
<p>Seaography Entities are basically SeaORM Entities with some additions. They are fully compatible with SeaORM.</p>
<p>You can generate Seaography Entities by using <code>sea-orm-cli</code> with the extra <code>--seaography</code> flag.</p>
<div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">sea-orm-cli generate entity </span><span class="token parameter variable" style="color:rgb(9, 134, 88)">-o</span><span class="token plain"> src/models/_entities </span><span class="token parameter variable" style="color:rgb(9, 134, 88)">-u</span><span class="token plain"> postgres://loco:loco@localhost:5432/loco_seaography_development </span><span class="token parameter variable" style="color:rgb(9, 134, 88)">--seaography</span><br></span></code></pre></div></div>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockTitle_OeMC">loco_seaography/src/models/_entities/notes.rs</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">use</span><span class="token plain"> </span><span class="token namespace">sea_orm</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">entity</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">prelude</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token operator" style="color:rgb(0, 0, 0)">*</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">use</span><span class="token plain"> </span><span class="token namespace">serde</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token class-name" style="color:rgb(38, 127, 153)">Serialize</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Deserialize</span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(table_name = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"notes"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> created_at</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DateTime</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> updated_at</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DateTime</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(primary_key)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> title</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Option</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> content</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Option</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">enum</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Relation</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(has_many = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"super::files::Entity"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Files</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">impl</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Related</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token keyword" style="color:rgb(0, 0, 255)">super</span><span class="token module-declaration namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token module-declaration namespace">files</span><span class="token module-declaration namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">to</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">RelationDef</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Relation</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Files</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">def</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token operator" style="color:rgb(0, 0, 0)">+</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// Defining `RelatedEntity` to relate one entity with another</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token operator" style="color:rgb(0, 0, 0)">+</span><span class="token plain"> </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Copy, Clone, Debug, EnumIter, DeriveRelatedEntity)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token operator" style="color:rgb(0, 0, 0)">+</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">enum</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">RelatedEntity</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token operator" style="color:rgb(0, 0, 0)">+</span><span class="token plain">     </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(entity = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"super::files::Entity"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token operator" style="color:rgb(0, 0, 0)">+</span><span class="token plain">     </span><span class="token class-name" style="color:rgb(38, 127, 153)">Files</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token operator" style="color:rgb(0, 0, 0)">+</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>We can see that a new enum <code>RelatedEntity</code> is generated in the Entity files. This helps Seaography to locate the related Entities for making relational queries.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="implementing-graphql-query-root">Implementing GraphQL Query Root<a href="https://www.sea-ql.org/blog/2024-07-01-graphql-support-with-loco-seaography/#implementing-graphql-query-root" class="hash-link" aria-label="Direct link to Implementing GraphQL Query Root" title="Direct link to Implementing GraphQL Query Root">​</a></h2>
<p>We have finished setting up SeaORM entity for Seaography. Now, we implement the query root of Seaography where we bridge SeaORM and Async GraphQL with the help of Seaography.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockTitle_OeMC">loco_seaography/src/graphql/query_root.rs</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">use</span><span class="token plain"> </span><span class="token namespace">async_graphql</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">dynamic</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token operator" style="color:rgb(0, 0, 0)">*</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">use</span><span class="token plain"> </span><span class="token namespace">sea_orm</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">DatabaseConnection</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">use</span><span class="token plain"> </span><span class="token namespace">seaography</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token class-name" style="color:rgb(38, 127, 153)">Builder</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">BuilderContext</span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">use</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">crate</span><span class="token module-declaration namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token module-declaration namespace">models</span><span class="token module-declaration namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token plain">_entities</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token operator" style="color:rgb(0, 0, 0)">*</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token namespace">lazy_static</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token macro property">lazy_static!</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">static</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">ref</span><span class="token plain"> </span><span class="token constant" style="color:rgb(129, 31, 63)">CONTEXT</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">BuilderContext</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">BuilderContext</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">schema</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    database</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DatabaseConnection</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    depth</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">usize</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    complexity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">usize</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Result</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Schema</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SchemaError</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">// Builder of Seaography query root</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">mut</span><span class="token plain"> builder </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Builder</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token constant" style="color:rgb(129, 31, 63)">CONTEXT</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> database</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">clone</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">// Register SeaORM entities</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token namespace">seaography</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token macro property">register_entities!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        builder</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">// List all models we want to include in the GraphQL endpoint here</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">files</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> notes</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> users</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">// Configure async GraphQL limits</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> schema </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> builder</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">schema_builder</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">// The depth is the number of nesting levels of the field</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">limit_depth</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">depth</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">// The complexity is the number of fields in the query</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">limit_complexity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">complexity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">// Finish up with including SeaORM database connection</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    schema</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">data</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">database</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">finish</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="writing-loco-controller-to-handle-graphql-endpoint">Writing Loco Controller to Handle GraphQL Endpoint<a href="https://www.sea-ql.org/blog/2024-07-01-graphql-support-with-loco-seaography/#writing-loco-controller-to-handle-graphql-endpoint" class="hash-link" aria-label="Direct link to Writing Loco Controller to Handle GraphQL Endpoint" title="Direct link to Writing Loco Controller to Handle GraphQL Endpoint">​</a></h2>
<p>For convenience we use the built-in GraphQL playground UI in <code>async-graphql</code> to test the GraphQL endpoint. And handle the GraphQL request with <code>async_graphql_axum</code> and Seaography.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockTitle_OeMC">loco_seaography/src/controllers/graphql.rs</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">use</span><span class="token plain"> </span><span class="token namespace">async_graphql</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">http</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain">playground_source</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">GraphQLPlaygroundConfig</span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">use</span><span class="token plain"> </span><span class="token namespace">axum</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token namespace">body</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Body</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token namespace">extract</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Request</span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">use</span><span class="token plain"> </span><span class="token namespace">loco_rs</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">prelude</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token operator" style="color:rgb(0, 0, 0)">*</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">use</span><span class="token plain"> </span><span class="token namespace">tower_service</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Service</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">use</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">crate</span><span class="token module-declaration namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token module-declaration namespace">graphql</span><span class="token module-declaration namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token plain">query_root</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// GraphQL playground UI</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">graphql_playground</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Result</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Response</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">// The `GraphQLPlaygroundConfig` take one parameter</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">// which is the URL of the GraphQL handler: `/api/graphql`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> res </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(0, 0, 255)">playground_source</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">GraphQLPlaygroundConfig</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"/api/graphql"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Ok</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Response</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">res</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">graphql_handler</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">State</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">State</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">AppContext</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    req</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Request</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Body</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Result</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Response</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">const</span><span class="token plain"> </span><span class="token constant" style="color:rgb(129, 31, 63)">DEPTH</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">usize</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">10</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">const</span><span class="token plain"> </span><span class="token constant" style="color:rgb(129, 31, 63)">COMPLEXITY</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">usize</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">100</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">// Construct the the GraphQL query root</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> schema </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">query_root</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">schema</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">clone</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token constant" style="color:rgb(129, 31, 63)">DEPTH</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token constant" style="color:rgb(129, 31, 63)">COMPLEXITY</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unwrap</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">// GraphQL handler</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">mut</span><span class="token plain"> graphql_handler </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">async_graphql_axum</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">GraphQL</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">schema</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">// Execute GraphQL request and fetch the results</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> res </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> graphql_handler</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">call</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">req</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unwrap</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Ok</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">res</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">routes</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Routes</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">// Define route</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Routes</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">// We put all GraphQL route behind `graphql` prefix</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">prefix</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"graphql"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">// GraphQL playground page is a GET request</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">add</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"/"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token function" style="color:rgb(0, 0, 255)">get</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">graphql_playground</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">// GraphQL handler is a POST request</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">add</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"/"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token function" style="color:rgb(0, 0, 255)">post</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">graphql_handler</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="opening-graphql-playground">Opening GraphQL Playground<a href="https://www.sea-ql.org/blog/2024-07-01-graphql-support-with-loco-seaography/#opening-graphql-playground" class="hash-link" aria-label="Direct link to Opening GraphQL Playground" title="Direct link to Opening GraphQL Playground">​</a></h2>
<p>Compile and run the Loco application, then visit <a href="http://localhost:3000/api/graphql" target="_blank" rel="noopener noreferrer">http://localhost:3000/api/graphql</a>.</p>
<div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">$ </span><span class="token function" style="color:rgb(0, 0, 255)">cargo</span><span class="token plain"> run start</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    Finished </span><span class="token variable" style="color:rgb(9, 134, 88)">`</span><span class="token variable" style="color:rgb(9, 134, 88)">dev</span><span class="token variable" style="color:rgb(9, 134, 88)">`</span><span class="token plain"> profile </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">unoptimized + debuginfo</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> target</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">s</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">in</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">0</span><span class="token plain">.60s</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">     Running </span><span class="token variable" style="color:rgb(9, 134, 88)">`</span><span class="token variable" style="color:rgb(9, 134, 88)">target/debug/loco_seaography-cli start</span><span class="token variable" style="color:rgb(9, 134, 88)">`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-06-24T08:04:52.173924Z  INFO app: loco_rs::config: loading environment from </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">selected_path</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token string" style="color:rgb(163, 21, 21)">"config/development.yaml"</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-06-24T08:04:52.180447Z  WARN app: loco_rs::boot: pretty backtraces are enabled </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">this is great </span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> development but has a runtime cost </span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> production. disable with </span><span class="token variable" style="color:rgb(9, 134, 88)">`</span><span class="token variable" style="color:rgb(9, 134, 88)">logger.pretty_backtrace</span><span class="token variable" style="color:rgb(9, 134, 88)">`</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">in</span><span class="token plain"> your config yaml</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-06-24T08:04:52.272392Z  INFO app: loco_rs::db: auto migrating </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-06-24T08:04:52.275198Z  INFO app: sea_orm_migration::migrator: Applying all pending migrations </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-06-24T08:04:52.280720Z  INFO app: sea_orm_migration::migrator: No pending migrations </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-06-24T08:04:52.281280Z  INFO app: loco_rs::boot: initializers loaded </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">initializers</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token string" style="color:rgb(163, 21, 21)">""</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-06-24T08:04:52.308827Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">GET</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> /api/_ping </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-06-24T08:04:52.308936Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">GET</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> /api/_health </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-06-24T08:04:52.309021Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">GET</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> /api/notes </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-06-24T08:04:52.309088Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">POST</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> /api/notes </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-06-24T08:04:52.309158Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">GET</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> /api/notes/:id </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-06-24T08:04:52.309234Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">DELETE</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> /api/notes/:id </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-06-24T08:04:52.309286Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">POST</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> /api/notes/:id </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-06-24T08:04:52.309334Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">POST</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> /api/auth/register </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-06-24T08:04:52.309401Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">POST</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> /api/auth/verify </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-06-24T08:04:52.309471Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">POST</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> /api/auth/login </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-06-24T08:04:52.309572Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">POST</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> /api/auth/forgot </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-06-24T08:04:52.309662Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">POST</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> /api/auth/reset </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-06-24T08:04:52.309752Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">GET</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> /api/user/current </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-06-24T08:04:52.309827Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">POST</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> /api/files/upload/:notes_id </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-06-24T08:04:52.309910Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">GET</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> /api/files/list/:notes_id </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-06-24T08:04:52.309997Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">GET</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> /api/files/view/:files_id </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-06-24T08:04:52.310088Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">GET</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> /api/graphql </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-06-24T08:04:52.310172Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">POST</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> /api/graphql </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-06-24T08:04:52.310469Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">Middleware</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> Adding limit payload </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">data</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token string" style="color:rgb(163, 21, 21)">"5mb"</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-06-24T08:04:52.310615Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">Middleware</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> Adding log trace </span><span class="token function" style="color:rgb(0, 0, 255)">id</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-06-24T08:04:52.310934Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">Middleware</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> Adding cors </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-06-24T08:04:52.311008Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">Middleware</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> Adding etag layer </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                      ▄     ▀</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                                 ▀  ▄</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                  ▄       ▀     ▄  ▄ ▄▀</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                                    ▄ ▀▄▄</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                        ▄     ▀    ▀  ▀▄▀█▄</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                                          ▀█▄</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">▄▄▄▄▄▄▄  ▄▄▄▄▄▄▄▄▄   ▄▄▄▄▄▄▄▄▄▄▄ ▄▄▄▄▄▄▄▄▄ ▀▀█</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"> ██████  █████   ███ █████   ███ █████   ███ ▀█</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"> ██████  █████   ███ █████   ▀▀▀ █████   ███ ▄█▄</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"> ██████  █████   ███ █████       █████   ███ ████▄</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"> ██████  █████   ███ █████   ▄▄▄ █████   ███ █████</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"> ██████  █████   ███  ████   ███ █████   ███ ████▀</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">   ▀▀▀██▄ ▀▀▀▀▀▀▀▀▀▀  ▀▀▀▀▀▀▀▀▀▀  ▀▀▀▀▀▀▀▀▀▀ ██▀</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">       ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                https://loco.rs</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">environment: development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">   database: automigrate</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">     logger: debug</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">compilation: debug</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      modes: server</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">listening on </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">::</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain">:3000</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="creating-notes">Creating Notes<a href="https://www.sea-ql.org/blog/2024-07-01-graphql-support-with-loco-seaography/#creating-notes" class="hash-link" aria-label="Direct link to Creating Notes" title="Direct link to Creating Notes">​</a></h2>
<p>Create a new notes with the GraphQL mutator.</p>
<div class="language-graphql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-graphql codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">mutation</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token property-query property-mutation">notesCreateOne</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attr-name" style="color:rgb(255, 0, 0)">data</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token attr-name" style="color:rgb(255, 0, 0)">id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token attr-name" style="color:rgb(255, 0, 0)">title</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token description string" style="color:rgb(163, 21, 21)">"</span><span class="token description string language-markdown" style="color:rgb(163, 21, 21)">Notes 001</span><span class="token description string" style="color:rgb(163, 21, 21)">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token attr-name" style="color:rgb(255, 0, 0)">content</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token description string" style="color:rgb(163, 21, 21)">"</span><span class="token description string language-markdown" style="color:rgb(163, 21, 21)">Content 001</span><span class="token description string" style="color:rgb(163, 21, 21)">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token attr-name" style="color:rgb(255, 0, 0)">createdAt</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token description string" style="color:rgb(163, 21, 21)">"</span><span class="token description string language-markdown" style="color:rgb(163, 21, 21)">2024-06-24 00:00:00</span><span class="token description string" style="color:rgb(163, 21, 21)">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token attr-name" style="color:rgb(255, 0, 0)">updatedAt</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"2024-06-24 00:00:00"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token property">id</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token property">title</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token property">content</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token property">createdAt</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token property">updatedAt</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p><img decoding="async" loading="lazy" src="https://www.sea-ql.org/blog/img/Loco%20x%20Seaography%20create.png" alt="" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="querying-notes">Querying Notes<a href="https://www.sea-ql.org/blog/2024-07-01-graphql-support-with-loco-seaography/#querying-notes" class="hash-link" aria-label="Direct link to Querying Notes" title="Direct link to Querying Notes">​</a></h2>
<p>Query notes with its related files.</p>
<div class="language-graphql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-graphql codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">query</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token object">notes</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token object">nodes</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token property">id</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token property">title</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token property">content</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token object">files</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token object">nodes</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">          </span><span class="token property">id</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">          </span><span class="token property">filePath</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p><img decoding="async" loading="lazy" src="https://www.sea-ql.org/blog/img/Loco%20x%20Seaography%20query.png" alt="" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="adding-user-authentication-to-graphql-endpoint">Adding User Authentication to GraphQL Endpoint<a href="https://www.sea-ql.org/blog/2024-07-01-graphql-support-with-loco-seaography/#adding-user-authentication-to-graphql-endpoint" class="hash-link" aria-label="Direct link to Adding User Authentication to GraphQL Endpoint" title="Direct link to Adding User Authentication to GraphQL Endpoint">​</a></h2>
<p>Our GraphQL handler can be accessed without user authentication. Next, we want to only allow logged in user to access the GraphQL handler.</p>
<p>To do so, we add <code>_auth: auth::JWT</code> to the <code>graphql_handler</code> function.</p>
<div class="language-diff codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockTitle_OeMC">loco_seaography/src/controllers/graphql.rs</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-diff codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">async fn graphql_handler(</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">+   _auth: auth::JWT,</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    State(ctx): State&lt;AppContext&gt;,</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    req: Request&lt;Body&gt;,</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">) -&gt; Result&lt;Response&gt; {</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    const DEPTH: usize = 10;</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    const COMPLEXITY: usize = 100;</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    // Construct the the GraphQL query root</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    let schema = query_root::schema(ctx.db.clone(), DEPTH, COMPLEXITY).unwrap();</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    // GraphQL handler</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    let mut graphql_handler = async_graphql_axum::GraphQL::new(schema);</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    // Execute GraphQL request and fetch the results</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    let res = graphql_handler.call(req).await.unwrap();</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    Ok(res)</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">}</span><br></span></code></pre></div></div>
<p>Then, run the Loco application and visit the GraphQL playground again. You should see unauthorize error.</p>
<p><img decoding="async" loading="lazy" src="https://www.sea-ql.org/blog/img/Loco%20x%20Seaography%20unauthorize.png" alt="" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="adding-authentication-header-to-graphql-playground">Adding Authentication header to GraphQL Playground<a href="https://www.sea-ql.org/blog/2024-07-01-graphql-support-with-loco-seaography/#adding-authentication-header-to-graphql-playground" class="hash-link" aria-label="Direct link to Adding Authentication header to GraphQL Playground" title="Direct link to Adding Authentication header to GraphQL Playground">​</a></h2>
<p>First, we generate a valid authorization token by logging in the user account with the corresponding email and password:</p>
<div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">$ </span><span class="token function" style="color:rgb(0, 0, 255)">curl</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(9, 134, 88)">--location</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">'http://localhost:3000/api/auth/login'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">--data-raw </span><span class="token string" style="color:rgb(163, 21, 21)">'{</span><br></span><span class="token-line" style="color:#000000"><span class="token string" style="color:rgb(163, 21, 21)">    "email": "cwchan.billy@gmail.com",</span><br></span><span class="token-line" style="color:#000000"><span class="token string" style="color:rgb(163, 21, 21)">    "password": "password"</span><br></span><span class="token-line" style="color:#000000"><span class="token string" style="color:rgb(163, 21, 21)">}'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">"token"</span><span class="token builtin class-name" style="color:rgb(38, 127, 153)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJwaWQiOiIwN2NjMDk5Ni03YWYxLTQ5YmYtYmY2NC01OTg4ZjFhODM2OTkiLCJleHAiOjE3MTk4MjIzMzN9.CgKp_aE-DyAuBJIvFGJ6l68ooAlEiJGhjWeaetDtHrupaYDm0ldVxf24vj3fPgkCqZ_njv2129n2pSCzHOjaow"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">"pid"</span><span class="token builtin class-name" style="color:rgb(38, 127, 153)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"07cc0996-7af1-49bf-bf64-5988f1a83699"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">"name"</span><span class="token builtin class-name" style="color:rgb(38, 127, 153)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"Billy"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">"is_verified"</span><span class="token builtin class-name" style="color:rgb(38, 127, 153)">:</span><span class="token plain"> </span><span class="token boolean">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>Go to the setting page of GraphQL playground. And add a new header under <code>request. globalHeaders</code>:</p>
<p><img decoding="async" loading="lazy" src="https://www.sea-ql.org/blog/img/Loco%20x%20Seaography%20authorization.png" alt="" class="img_ev3q"></p>
<p>Then, we can access GraphQL handler as usual.</p>
<p><img decoding="async" loading="lazy" src="https://www.sea-ql.org/blog/img/Loco%20x%20Seaography%20query.png" alt="" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://www.sea-ql.org/blog/2024-07-01-graphql-support-with-loco-seaography/#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion">​</a></h2>
<p>Adding GraphQL support to Loco application is easy with the help of Seaography. It is an ergonomic library that turns SeaORM entities into GraphQL nodes and provides a set of utilities and combined with a code generator makes GraphQL API building a breeze.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="sql-server-support">SQL Server Support<a href="https://www.sea-ql.org/blog/2024-07-01-graphql-support-with-loco-seaography/#sql-server-support" class="hash-link" aria-label="Direct link to SQL Server Support" title="Direct link to SQL Server Support">​</a></h2>
<p><a href="https://www.sea-ql.org/SeaORM-X/" target="_blank" rel="noopener noreferrer">SQL Server for SeaORM</a> is now available as a closed beta. If you are interested`, please signup <a href="https://forms.office.com/r/1MuRPJmYBR" target="_blank" rel="noopener noreferrer">here</a>.</p>
<p>Migrating from <code>sea-orm</code> to <code>sea-orm-x</code> is straightforward with two simple steps. First, update the existing <code>sea-orm</code> dependency to <code>sea-orm-x</code> and enable the <code>sqlz-mssql</code> feature. Note that you might need to patch SeaORM dependency for the upstream dependencies.</p>
<div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockTitle_OeMC">Cargo.toml</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token key property">sea-orm</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token key property">path</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"&lt;SEA_ORM_X_ROOT&gt;/sea-orm-x"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token key property">features</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token string" style="color:rgb(163, 21, 21)">"runtime-async-std-rustls"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"sqlz-mssql"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token key property">sea-orm-migration</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token key property">path</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"&lt;SEA_ORM_X_ROOT&gt;/sea-orm-x/sea-orm-migration"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)"># Patch SeaORM dependency for the upstream dependencies</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token table class-name" style="color:rgb(38, 127, 153)">patch.crates-io</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token key property">sea-orm</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token key property">path</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"&lt;SEA_ORM_X_ROOT&gt;/sea-orm-x"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token key property">sea-orm-migration</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token key property">path</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"&lt;SEA_ORM_X_ROOT&gt;/sea-orm-x/sea-orm-migration"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>Second, update the connection string to connect to the MSSQL database.</p>
<div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)"># If the schema is `dbo`, simply write:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">mssql://username:password@host/database</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)"># Or, specify the schema name by providing an extra `currentSchema` query param.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">mssql://username:password@host/database?currentSchema</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">my_schema</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)"># You can trust peer certificate by providing an extra trustCertificate query param.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">mssql://username:password@host/database?trustCertificate</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">true</span><br></span></code></pre></div></div>
<p>SeaORM X has full Loco support and integrate seamlessly with many web frameworks:</p>
<ul>
<li>Actix</li>
<li>Axum</li>
<li>Async GraphQL</li>
<li>jsonrpsee</li>
<li>Loco</li>
<li>Poem</li>
<li>Salvo</li>
<li>Tonic</li>
</ul>
<p>Happy Coding!</p>]]></content>
        <author>
            <name>Billy Chan</name>
            <uri>https://github.com/billy1624</uri>
        </author>
        <category label="news" term="news"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Getting Started with Loco & SeaORM]]></title>
        <id>https://www.sea-ql.org/blog/2024-05-28-getting-started-with-loco-seaorm/</id>
        <link href="https://www.sea-ql.org/blog/2024-05-28-getting-started-with-loco-seaorm/"/>
        <updated>2024-05-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this tutorial, we would create a REST notepad backend starting from scratch and adding a new REST endpoint to handle file uploads in Loco.]]></summary>
        <content type="html"><![CDATA[<img src="https://www.sea-ql.org/blog/img/Loco%20x%20SeaORM.png">
<p>In this tutorial, we would create a REST notepad backend starting from scratch and adding a new REST endpoint to handle file uploads in Loco.</p>
<p>The full source code can be found <a href="https://github.com/SeaQL/sea-orm/tree/master/examples/loco_starter" target="_blank" rel="noopener noreferrer">here</a>. The documentation of the REST API is available <a href="https://documenter.getpostman.com/view/34752358/2sA3QmEF5q" target="_blank" rel="noopener noreferrer">here</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-loco">What is Loco?<a href="https://www.sea-ql.org/blog/2024-05-28-getting-started-with-loco-seaorm/#what-is-loco" class="hash-link" aria-label="Direct link to What is Loco?" title="Direct link to What is Loco?">​</a></h2>
<p><a href="https://loco.rs/" target="_blank" rel="noopener noreferrer">Loco</a> is a Rails inspired web framework for Rust. It includes many Rails feature with Rust ergonomics. Loco integrates seamlessly with SeaORM, offering a first-class development experience!</p>
<ul>
<li>Controllers and routing via <a href="https://github.com/tokio-rs/axum" target="_blank" rel="noopener noreferrer">axum</a></li>
<li>Models, migration, and ActiveRecord via <a href="https://www.sea-ql.org/SeaORM/" target="_blank" rel="noopener noreferrer">SeaORM</a></li>
<li>Views via <a href="https://serde.rs/json.html" target="_blank" rel="noopener noreferrer">serde</a></li>
<li>Seamless, Background jobs via <a href="https://github.com/film42/sidekiq-rs" target="_blank" rel="noopener noreferrer">sidekiq-rs</a>, multi modal: in process, out of process, async via Tokio</li>
<li><a href="https://loco.rs/blog/hello-world/" target="_blank" rel="noopener noreferrer">...and more</a></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="rest-api-starter-template">REST API Starter Template<a href="https://www.sea-ql.org/blog/2024-05-28-getting-started-with-loco-seaorm/#rest-api-starter-template" class="hash-link" aria-label="Direct link to REST API Starter Template" title="Direct link to REST API Starter Template">​</a></h2>
<p>Install <code>loco-cli</code>:</p>
<div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token function" style="color:rgb(0, 0, 255)">cargo</span><span class="token plain"> </span><span class="token function" style="color:rgb(0, 0, 255)">install</span><span class="token plain"> loco-cli</span><br></span></code></pre></div></div>
<p>The <code>loco-cli</code> provides three starter templates:</p>
<ul>
<li>SaaS Starter</li>
<li>Rest API Starter</li>
<li>Lightweight Service Starter</li>
</ul>
<p>For this tutorial, we want the "Rest API Starter" template:</p>
<div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">$ loco new</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">✔  You are inside a </span><span class="token function" style="color:rgb(0, 0, 255)">git</span><span class="token plain"> repository. Do you wish to continue? · Yes</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">✔  App name? · loco_starter</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">✔  What would you like to build? · Rest API </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">with DB and user auth</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">🚂 Loco app generated successfully in:</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">/sea-orm/examples/loco_starter</span><br></span></code></pre></div></div>
<p>Next, we need to setup our PostgreSQL database.</p>
<div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token function" style="color:rgb(0, 0, 255)">docker</span><span class="token plain"> run </span><span class="token parameter variable" style="color:rgb(9, 134, 88)">-d</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(9, 134, 88)">-p</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">5432</span><span class="token plain">:5432 </span><span class="token parameter variable" style="color:rgb(9, 134, 88)">-e</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">POSTGRES_USER</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">loco </span><span class="token parameter variable" style="color:rgb(9, 134, 88)">-e</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">POSTGRES_DB</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">loco_starter_development </span><span class="token parameter variable" style="color:rgb(9, 134, 88)">-e</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">POSTGRES_PASSWORD</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token string" style="color:rgb(163, 21, 21)">"loco"</span><span class="token plain"> postgres:15.3-alpine</span><br></span></code></pre></div></div>
<p>If you want to use MySQL or SQLite as the database. Please update the <code>database.uri</code> configuration in <code>loco_starter/config/development.yaml</code>. And enable the corresponding database backend feature flag of SeaORM in <code>loco_starter/Cargo.toml</code>.</p>
<p>Now, start our REST application:</p>
<div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">$ </span><span class="token function" style="color:rgb(0, 0, 255)">cargo</span><span class="token plain"> loco start</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    Finished </span><span class="token variable" style="color:rgb(9, 134, 88)">`</span><span class="token variable" style="color:rgb(9, 134, 88)">dev</span><span class="token variable" style="color:rgb(9, 134, 88)">`</span><span class="token plain"> profile </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">unoptimized + debuginfo</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> target</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">s</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">in</span><span class="token plain"> 1m 42s</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">     Running </span><span class="token variable" style="color:rgb(9, 134, 88)">`</span><span class="token variable" style="color:rgb(9, 134, 88)">target/debug/loco_starter-cli start</span><span class="token variable" style="color:rgb(9, 134, 88)">`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-05-20T06:56:42.724350Z  INFO app: loco_rs::config: loading environment from </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">selected_path</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token string" style="color:rgb(163, 21, 21)">"config/development.yaml"</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-05-20T06:56:42.740338Z  WARN app: loco_rs::boot: pretty backtraces are enabled </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">this is great </span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> development but has a runtime cost </span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> production. disable with </span><span class="token variable" style="color:rgb(9, 134, 88)">`</span><span class="token variable" style="color:rgb(9, 134, 88)">logger.pretty_backtrace</span><span class="token variable" style="color:rgb(9, 134, 88)">`</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">in</span><span class="token plain"> your config yaml</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-05-20T06:56:42.833747Z  INFO app: loco_rs::db: auto migrating </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-05-20T06:56:42.845983Z  INFO app: sea_orm_migration::migrator: Applying all pending migrations </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-05-20T06:56:42.850231Z  INFO app: sea_orm_migration::migrator: Applying migration </span><span class="token string" style="color:rgb(163, 21, 21)">'m20220101_000001_users'</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-05-20T06:56:42.864095Z  INFO app: sea_orm_migration::migrator: Migration </span><span class="token string" style="color:rgb(163, 21, 21)">'m20220101_000001_users'</span><span class="token plain"> has been applied </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-05-20T06:56:42.865799Z  INFO app: sea_orm_migration::migrator: Applying migration </span><span class="token string" style="color:rgb(163, 21, 21)">'m20231103_114510_notes'</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-05-20T06:56:42.873653Z  INFO app: sea_orm_migration::migrator: Migration </span><span class="token string" style="color:rgb(163, 21, 21)">'m20231103_114510_notes'</span><span class="token plain"> has been applied </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-05-20T06:56:42.875645Z  INFO app: loco_rs::boot: initializers loaded </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">initializers</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token string" style="color:rgb(163, 21, 21)">""</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-05-20T06:56:42.906072Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">GET</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> /api/_ping </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-05-20T06:56:42.906176Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">GET</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> /api/_health </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-05-20T06:56:42.906264Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">GET</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> /api/notes </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-05-20T06:56:42.906335Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">POST</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> /api/notes </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-05-20T06:56:42.906414Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">GET</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> /api/notes/:id </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-05-20T06:56:42.906501Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">DELETE</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> /api/notes/:id </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-05-20T06:56:42.906558Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">POST</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> /api/notes/:id </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-05-20T06:56:42.906609Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">POST</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> /api/auth/register </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-05-20T06:56:42.906680Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">POST</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> /api/auth/verify </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-05-20T06:56:42.906753Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">POST</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> /api/auth/login </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-05-20T06:56:42.906838Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">POST</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> /api/auth/forgot </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-05-20T06:56:42.906931Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">POST</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> /api/auth/reset </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-05-20T06:56:42.907012Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">GET</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> /api/user/current </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-05-20T06:56:42.907309Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">Middleware</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> Adding limit payload </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">data</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token string" style="color:rgb(163, 21, 21)">"5mb"</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-05-20T06:56:42.907440Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">Middleware</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> Adding log trace </span><span class="token function" style="color:rgb(0, 0, 255)">id</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-05-20T06:56:42.907714Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">Middleware</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> Adding cors </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-05-20T06:56:42.907788Z  INFO app: loco_rs::controller::app_routes: </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">Middleware</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> Adding etag layer </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                      ▄     ▀</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                                 ▀  ▄</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                  ▄       ▀     ▄  ▄ ▄▀</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                                    ▄ ▀▄▄</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                        ▄     ▀    ▀  ▀▄▀█▄</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                                          ▀█▄</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">▄▄▄▄▄▄▄  ▄▄▄▄▄▄▄▄▄   ▄▄▄▄▄▄▄▄▄▄▄ ▄▄▄▄▄▄▄▄▄ ▀▀█</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"> ██████  █████   ███ █████   ███ █████   ███ ▀█</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"> ██████  █████   ███ █████   ▀▀▀ █████   ███ ▄█▄</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"> ██████  █████   ███ █████       █████   ███ ████▄</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"> ██████  █████   ███ █████   ▄▄▄ █████   ███ █████</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"> ██████  █████   ███  ████   ███ █████   ███ ████▀</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">   ▀▀▀██▄ ▀▀▀▀▀▀▀▀▀▀  ▀▀▀▀▀▀▀▀▀▀  ▀▀▀▀▀▀▀▀▀▀ ██▀</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">       ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                https://loco.rs</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">environment: development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">   database: automigrate</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">     logger: debug</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">compilation: debug</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      modes: server</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">listening on </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">::</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain">:3000</span><br></span></code></pre></div></div>
<p>From the log messages printed above, we saw:</p>
<ul>
<li>Database migrations have been applied</li>
<li>All available REST API</li>
</ul>
<p>To check if the application listen for requests:</p>
<div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">$ </span><span class="token function" style="color:rgb(0, 0, 255)">curl</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(9, 134, 88)">--location</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">'http://localhost:3000/api/_ping'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token string" style="color:rgb(163, 21, 21)">"ok"</span><span class="token plain">:true</span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="user-management">User Management<a href="https://www.sea-ql.org/blog/2024-05-28-getting-started-with-loco-seaorm/#user-management" class="hash-link" aria-label="Direct link to User Management" title="Direct link to User Management">​</a></h2>
<p>The starter template comes with a basic user management module.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="registration">Registration<a href="https://www.sea-ql.org/blog/2024-05-28-getting-started-with-loco-seaorm/#registration" class="hash-link" aria-label="Direct link to Registration" title="Direct link to Registration">​</a></h3>
<p>It is a common practice to send a verification email to the provided email. However, that would requires a SMTP server and this is not the focus of this blog post. So, I will skip the email verification:</p>
<div class="language-diff codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockTitle_OeMC">loco_starter/src/controllers/auth.rs</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-diff codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">#[debug_handler]</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">async fn register(</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    State(ctx): State&lt;AppContext&gt;,</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    Json(params): Json&lt;RegisterParams&gt;,</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">) -&gt; Result&lt;Response&gt; {</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    let res = users::Model::create_with_password(&amp;ctx.db, &amp;params).await;</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    let user = match res {</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        Ok(user) =&gt; user,</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        Err(err) =&gt; {</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            tracing::info!(</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                message = err.to_string(),</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                user_email = &amp;params.email,</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                "could not register user",</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            );</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            return format::json(());</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    };</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">+   // Skip email verification, all new registrations are considered verified</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">+   let _user = user</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">+       .into_active_model()</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">+       .verified(&amp;ctx.db)</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">+       .await?;</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">+   // Skip sending verification email as we don't have a mail server</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">+   /*</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    let user = user</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        .into_active_model()</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        .set_email_verification_sent(&amp;ctx.db)</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        .await?;</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    AuthMailer::send_welcome(&amp;ctx, &amp;user).await?;</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">+   */</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    format::json(())</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">}</span><br></span></code></pre></div></div>
<p>Compile and run the application, then register a new user account:</p>
<div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">$ </span><span class="token function" style="color:rgb(0, 0, 255)">curl</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(9, 134, 88)">--location</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">'http://localhost:3000/api/auth/register'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">--data-raw </span><span class="token string" style="color:rgb(163, 21, 21)">'{</span><br></span><span class="token-line" style="color:#000000"><span class="token string" style="color:rgb(163, 21, 21)">    "name": "Billy",</span><br></span><span class="token-line" style="color:#000000"><span class="token string" style="color:rgb(163, 21, 21)">    "email": "cwchan.billy@gmail.com",</span><br></span><span class="token-line" style="color:#000000"><span class="token string" style="color:rgb(163, 21, 21)">    "password": "password"</span><br></span><span class="token-line" style="color:#000000"><span class="token string" style="color:rgb(163, 21, 21)">}'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">null</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="login">Login<a href="https://www.sea-ql.org/blog/2024-05-28-getting-started-with-loco-seaorm/#login" class="hash-link" aria-label="Direct link to Login" title="Direct link to Login">​</a></h3>
<p>You should see there is a new row of <code>user</code> in the database.</p>
<p>Next, we login the user account with the corresponding email and password:</p>
<div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">$ </span><span class="token function" style="color:rgb(0, 0, 255)">curl</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(9, 134, 88)">--location</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">'http://localhost:3000/api/auth/login'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">--data-raw </span><span class="token string" style="color:rgb(163, 21, 21)">'{</span><br></span><span class="token-line" style="color:#000000"><span class="token string" style="color:rgb(163, 21, 21)">    "email": "cwchan.billy@gmail.com",</span><br></span><span class="token-line" style="color:#000000"><span class="token string" style="color:rgb(163, 21, 21)">    "password": "password"</span><br></span><span class="token-line" style="color:#000000"><span class="token string" style="color:rgb(163, 21, 21)">}'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token string" style="color:rgb(163, 21, 21)">"token"</span><span class="token builtin class-name" style="color:rgb(38, 127, 153)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJwaWQiOiIxMWQwMWFmMy02ZmUyLTQ0ZjMtODlmMC1jMDJjZWMzOTc0MWQiLCJleHAiOjE3MTY3OTU3NjR9.i1OElxy33rkorkxk6QpTG1Kg4_Q8O0jqBJ2i82nltkcQYZsLmSSnrxtdtlfdvV0ccJ3hQA3JoY9L13cjz2uSCw"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token string" style="color:rgb(163, 21, 21)">"pid"</span><span class="token builtin class-name" style="color:rgb(38, 127, 153)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"11d01af3-6fe2-44f3-89f0-c02cec39741d"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token string" style="color:rgb(163, 21, 21)">"name"</span><span class="token builtin class-name" style="color:rgb(38, 127, 153)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"Billy"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token string" style="color:rgb(163, 21, 21)">"is_verified"</span><span class="token builtin class-name" style="color:rgb(38, 127, 153)">:</span><span class="token plain"> </span><span class="token boolean">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="authentication">Authentication<a href="https://www.sea-ql.org/blog/2024-05-28-getting-started-with-loco-seaorm/#authentication" class="hash-link" aria-label="Direct link to Authentication" title="Direct link to Authentication">​</a></h3>
<p>The JWT token above will be used in user authentication. You must set the <code>Authorization</code> header to access any REST endpoint that requires user login.</p>
<p>For example, fetching the user info of the current user:</p>
<div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">$ </span><span class="token function" style="color:rgb(0, 0, 255)">curl</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(9, 134, 88)">--location</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">'http://localhost:3000/api/user/current'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(9, 134, 88)">--header</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJwaWQiOiIxMWQwMWFmMy02ZmUyLTQ0ZjMtODlmMC1jMDJjZWMzOTc0MWQiLCJleHAiOjE3MTY3OTU3NjR9.i1OElxy33rkorkxk6QpTG1Kg4_Q8O0jqBJ2i82nltkcQYZsLmSSnrxtdtlfdvV0ccJ3hQA3JoY9L13cjz2uSCw'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">"pid"</span><span class="token builtin class-name" style="color:rgb(38, 127, 153)">:</span><span class="token string" style="color:rgb(163, 21, 21)">"11d01af3-6fe2-44f3-89f0-c02cec39741d"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">"name"</span><span class="token builtin class-name" style="color:rgb(38, 127, 153)">:</span><span class="token string" style="color:rgb(163, 21, 21)">"Billy"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">"email"</span><span class="token builtin class-name" style="color:rgb(38, 127, 153)">:</span><span class="token string" style="color:rgb(163, 21, 21)">"cwchan.billy@gmail.com"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="handling-rest-requests">Handling REST Requests<a href="https://www.sea-ql.org/blog/2024-05-28-getting-started-with-loco-seaorm/#handling-rest-requests" class="hash-link" aria-label="Direct link to Handling REST Requests" title="Direct link to Handling REST Requests">​</a></h2>
<p>The starter application comes with a notes controller for the <code>notes</code> table.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="create-notes">Create Notes<a href="https://www.sea-ql.org/blog/2024-05-28-getting-started-with-loco-seaorm/#create-notes" class="hash-link" aria-label="Direct link to Create Notes" title="Direct link to Create Notes">​</a></h3>
<div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">$ </span><span class="token function" style="color:rgb(0, 0, 255)">curl</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(9, 134, 88)">--location</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">'http://localhost:3000/api/notes'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(9, 134, 88)">--header</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJwaWQiOiIxMWQwMWFmMy02ZmUyLTQ0ZjMtODlmMC1jMDJjZWMzOTc0MWQiLCJleHAiOjE3MTY3OTU3NjR9.i1OElxy33rkorkxk6QpTG1Kg4_Q8O0jqBJ2i82nltkcQYZsLmSSnrxtdtlfdvV0ccJ3hQA3JoY9L13cjz2uSCw'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(9, 134, 88)">--data</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">'{</span><br></span><span class="token-line" style="color:#000000"><span class="token string" style="color:rgb(163, 21, 21)">    "title": "Getting Started with Loco &amp; SeaORM",</span><br></span><span class="token-line" style="color:#000000"><span class="token string" style="color:rgb(163, 21, 21)">    "content": "In this tutorial, we would create an REST notepad backend starting from scratch and adding a new REST endpoint to handle file uploads."</span><br></span><span class="token-line" style="color:#000000"><span class="token string" style="color:rgb(163, 21, 21)">}'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token string" style="color:rgb(163, 21, 21)">"created_at"</span><span class="token builtin class-name" style="color:rgb(38, 127, 153)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"2024-05-20T08:43:45.408449"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token string" style="color:rgb(163, 21, 21)">"updated_at"</span><span class="token builtin class-name" style="color:rgb(38, 127, 153)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"2024-05-20T08:43:45.408449"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token string" style="color:rgb(163, 21, 21)">"id"</span><span class="token builtin class-name" style="color:rgb(38, 127, 153)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token string" style="color:rgb(163, 21, 21)">"title"</span><span class="token builtin class-name" style="color:rgb(38, 127, 153)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"Getting Started with Loco &amp; SeaORM"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token string" style="color:rgb(163, 21, 21)">"content"</span><span class="token builtin class-name" style="color:rgb(38, 127, 153)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"In this tutorial, we would create an REST notepad backend starting from scratch and adding a new REST endpoint to handle file uploads."</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="list-notes">List Notes<a href="https://www.sea-ql.org/blog/2024-05-28-getting-started-with-loco-seaorm/#list-notes" class="hash-link" aria-label="Direct link to List Notes" title="Direct link to List Notes">​</a></h3>
<div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">$ </span><span class="token function" style="color:rgb(0, 0, 255)">curl</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(9, 134, 88)">--location</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">'http://localhost:3000/api/notes'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(9, 134, 88)">--header</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJwaWQiOiIxMWQwMWFmMy02ZmUyLTQ0ZjMtODlmMC1jMDJjZWMzOTc0MWQiLCJleHAiOjE3MTY3OTU3NjR9.i1OElxy33rkorkxk6QpTG1Kg4_Q8O0jqBJ2i82nltkcQYZsLmSSnrxtdtlfdvV0ccJ3hQA3JoY9L13cjz2uSCw'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">"created_at"</span><span class="token builtin class-name" style="color:rgb(38, 127, 153)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"2024-05-20T08:43:45.408449"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">"updated_at"</span><span class="token builtin class-name" style="color:rgb(38, 127, 153)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"2024-05-20T08:43:45.408449"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">"id"</span><span class="token builtin class-name" style="color:rgb(38, 127, 153)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">"title"</span><span class="token builtin class-name" style="color:rgb(38, 127, 153)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"Getting Started with Loco &amp; SeaORM"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">"content"</span><span class="token builtin class-name" style="color:rgb(38, 127, 153)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"In this tutorial, we would create an REST notepad backend starting from scratch and adding a new REST endpoint to handle file uploads."</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">"created_at"</span><span class="token builtin class-name" style="color:rgb(38, 127, 153)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"2024-05-20T08:45:38.973130"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">"updated_at"</span><span class="token builtin class-name" style="color:rgb(38, 127, 153)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"2024-05-20T08:45:38.973130"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">"id"</span><span class="token builtin class-name" style="color:rgb(38, 127, 153)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">"title"</span><span class="token builtin class-name" style="color:rgb(38, 127, 153)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"Introducing SeaORM X"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">"content"</span><span class="token builtin class-name" style="color:rgb(38, 127, 153)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"SeaORM X is built on top of SeaORM with support for SQL Server"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="get-notes">Get Notes<a href="https://www.sea-ql.org/blog/2024-05-28-getting-started-with-loco-seaorm/#get-notes" class="hash-link" aria-label="Direct link to Get Notes" title="Direct link to Get Notes">​</a></h3>
<div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">$ </span><span class="token function" style="color:rgb(0, 0, 255)">curl</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(9, 134, 88)">--location</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">'http://localhost:3000/api/notes/2'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(9, 134, 88)">--header</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJwaWQiOiIxMWQwMWFmMy02ZmUyLTQ0ZjMtODlmMC1jMDJjZWMzOTc0MWQiLCJleHAiOjE3MTY3OTU3NjR9.i1OElxy33rkorkxk6QpTG1Kg4_Q8O0jqBJ2i82nltkcQYZsLmSSnrxtdtlfdvV0ccJ3hQA3JoY9L13cjz2uSCw'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token string" style="color:rgb(163, 21, 21)">"created_at"</span><span class="token builtin class-name" style="color:rgb(38, 127, 153)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"2024-05-20T08:45:38.973130"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token string" style="color:rgb(163, 21, 21)">"updated_at"</span><span class="token builtin class-name" style="color:rgb(38, 127, 153)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"2024-05-20T08:45:38.973130"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token string" style="color:rgb(163, 21, 21)">"id"</span><span class="token builtin class-name" style="color:rgb(38, 127, 153)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token string" style="color:rgb(163, 21, 21)">"title"</span><span class="token builtin class-name" style="color:rgb(38, 127, 153)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"Introducing SeaORM X"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token string" style="color:rgb(163, 21, 21)">"content"</span><span class="token builtin class-name" style="color:rgb(38, 127, 153)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"SeaORM X is built on top of SeaORM with support for SQL Server"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="handling-file-uploads">Handling File Uploads<a href="https://www.sea-ql.org/blog/2024-05-28-getting-started-with-loco-seaorm/#handling-file-uploads" class="hash-link" aria-label="Direct link to Handling File Uploads" title="Direct link to Handling File Uploads">​</a></h2>
<p>Next, we will add a file upload feature where user can upload files that is related to the notes.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="file-table-migration">File Table Migration<a href="https://www.sea-ql.org/blog/2024-05-28-getting-started-with-loco-seaorm/#file-table-migration" class="hash-link" aria-label="Direct link to File Table Migration" title="Direct link to File Table Migration">​</a></h3>
<p>Create a migration file for the new <code>files</code> table. Each row of <code>files</code> reference a specific <code>notes</code> in the database.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockTitle_OeMC">loco_starter/migration/src/m20240520_173001_files.rs</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">use</span><span class="token plain"> </span><span class="token namespace">sea_orm_migration</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token namespace">prelude</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token operator" style="color:rgb(0, 0, 0)">*</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token namespace">schema</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token operator" style="color:rgb(0, 0, 0)">*</span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">use</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">super</span><span class="token module-declaration namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token module-declaration namespace">m20231103_114510_notes</span><span class="token module-declaration namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Notes</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(DeriveMigrationName)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Migration</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[async_trait::async_trait]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">impl</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">MigrationTrait</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Migration</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">up</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> manager</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token class-name" style="color:rgb(38, 127, 153)">SchemaManager</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Result</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DbErr</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        manager</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">create_table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                </span><span class="token function" style="color:rgb(0, 0, 255)">table_auto</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Files</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token function" style="color:rgb(0, 0, 255)">pk_auto</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Files</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token function" style="color:rgb(0, 0, 255)">integer</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Files</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">NotesId</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token function" style="color:rgb(0, 0, 255)">string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Files</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">FilePath</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">foreign_key</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                        </span><span class="token class-name" style="color:rgb(38, 127, 153)">ForeignKey</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">create</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"FK_files_notes_id"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">from</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Files</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Files</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">NotesId</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Notes</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Notes</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_owned</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">down</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> manager</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token class-name" style="color:rgb(38, 127, 153)">SchemaManager</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Result</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DbErr</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        manager</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">drop_table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">drop</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Files</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_owned</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(DeriveIden)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">enum</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Files</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">NotesId</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">FilePath</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>Then, we need to enable the new migration.</p>
<div class="language-diff codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockTitle_OeMC">loco_starter/migration/src/lib.rs</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-diff codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">#![allow(elided_lifetimes_in_paths)]</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">#![allow(clippy::wildcard_imports)]</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">pub use sea_orm_migration::prelude::*;</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">mod m20220101_000001_users;</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">mod m20231103_114510_notes;</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">+ mod m20240520_173001_files;</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">pub struct Migrator;</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">#[async_trait::async_trait]</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">impl MigratorTrait for Migrator {</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    fn migrations() -&gt; Vec&lt;Box&lt;dyn MigrationTrait&gt;&gt; {</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        vec![</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            Box::new(m20220101_000001_users::Migration),</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            Box::new(m20231103_114510_notes::Migration),</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">+           Box::new(m20240520_173001_files::Migration),</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        ]</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">}</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span></code></pre></div></div>
<p>Compile and start the application, it should run our new migration on startup.</p>
<div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">$ </span><span class="token function" style="color:rgb(0, 0, 255)">cargo</span><span class="token plain"> loco start</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token plain">.</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-05-20T09:39:59.607525Z  INFO app: loco_rs::db: auto migrating </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-05-20T09:39:59.611997Z  INFO app: sea_orm_migration::migrator: Applying all pending migrations </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-05-20T09:39:59.621699Z  INFO app: sea_orm_migration::migrator: Applying migration </span><span class="token string" style="color:rgb(163, 21, 21)">'m20240520_173001_files'</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token number" style="color:rgb(9, 134, 88)">2024</span><span class="token plain">-05-20T09:39:59.643886Z  INFO app: sea_orm_migration::migrator: Migration </span><span class="token string" style="color:rgb(163, 21, 21)">'m20240520_173001_files'</span><span class="token plain"> has been applied </span><span class="token assign-left variable" style="color:rgb(9, 134, 88)">environment</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token plain">.</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="file-model-definition">File Model Definition<a href="https://www.sea-ql.org/blog/2024-05-28-getting-started-with-loco-seaorm/#file-model-definition" class="hash-link" aria-label="Direct link to File Model Definition" title="Direct link to File Model Definition">​</a></h3>
<p>Define <code>files</code> entity model.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockTitle_OeMC">loco_starter/src/models/_entities/files.rs</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">use</span><span class="token plain"> </span><span class="token namespace">sea_orm</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">entity</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">prelude</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token operator" style="color:rgb(0, 0, 0)">*</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">use</span><span class="token plain"> </span><span class="token namespace">serde</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token class-name" style="color:rgb(38, 127, 153)">Deserialize</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Serialize</span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(table_name = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"files"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> created_at</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DateTime</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> updated_at</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DateTime</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(primary_key)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> notes_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> file_path</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">enum</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Relation</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(</span><br></span><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">        belongs_to = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"super::notes::Entity"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">,</span><br></span><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">        from = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"Column::NotesId"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">,</span><br></span><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">        to = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"super::notes::Column::Id"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)"></span><br></span><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">    )]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Notes</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">impl</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Related</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token keyword" style="color:rgb(0, 0, 255)">super</span><span class="token module-declaration namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token module-declaration namespace">notes</span><span class="token module-declaration namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">to</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">RelationDef</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Relation</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Notes</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">def</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>Implement the <code>ActiveModelBehavior</code> in the parent module.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockTitle_OeMC">loco_starter/src/models/files.rs</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">use</span><span class="token plain"> </span><span class="token namespace">sea_orm</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">entity</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">prelude</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token operator" style="color:rgb(0, 0, 0)">*</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">use</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">super</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token plain">_entities</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">files</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">impl</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModelBehavior</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">// extend activemodel below (keep comment for generators)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="file-controller">File Controller<a href="https://www.sea-ql.org/blog/2024-05-28-getting-started-with-loco-seaorm/#file-controller" class="hash-link" aria-label="Direct link to File Controller" title="Direct link to File Controller">​</a></h3>
<p>Controller is where we handle the file uploading, listing and viewing.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="upload-file">Upload File<a href="https://www.sea-ql.org/blog/2024-05-28-getting-started-with-loco-seaorm/#upload-file" class="hash-link" aria-label="Direct link to Upload File" title="Direct link to Upload File">​</a></h4>
<p>The following upload handler allows multiple files to be uploaded in a single POST request.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockTitle_OeMC">loco_starter/src/controllers/files.rs</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[debug_handler]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">upload</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    _auth</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token namespace">auth</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token constant" style="color:rgb(129, 31, 63)">JWT</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Path</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">notes_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Path</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">State</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">State</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">AppContext</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">mut</span><span class="token plain"> multipart</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Multipart</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Result</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Response</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">// Collect all uploaded files</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">mut</span><span class="token plain"> files </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Vec</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">// Iterate all files in the POST body</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">while</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Some</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">field</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> multipart</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">next_field</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">map_err</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token closure-params closure-punctuation punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token closure-params">err</span><span class="token closure-params closure-punctuation punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token namespace">tracing</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token macro property">error!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">error </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token plain">err</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token string" style="color:rgb(163, 21, 21)">"could not readd multipart"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Error</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">BadRequest</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"could not readd multipart"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">// Get the file name</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> file_name </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">match</span><span class="token plain"> field</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">file_name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token class-name" style="color:rgb(38, 127, 153)">Some</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">file_name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=&gt;</span><span class="token plain"> file_name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            _ </span><span class="token operator" style="color:rgb(0, 0, 0)">=&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">return</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Err</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Error</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">BadRequest</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"file name not found"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">// Get the file content as bytes</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> content </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> field</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">bytes</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">map_err</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token closure-params closure-punctuation punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token closure-params">err</span><span class="token closure-params closure-punctuation punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token namespace">tracing</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token macro property">error!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">error </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token plain">err</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token string" style="color:rgb(163, 21, 21)">"could not readd bytes"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token class-name" style="color:rgb(38, 127, 153)">Error</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">BadRequest</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"could not readd bytes"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">// Create a folder to store the uploaded file</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> now </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">chrono</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">offset</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Local</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">now</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">format</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"%Y%m%d_%H%M%S"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> uuid </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">uuid</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Uuid</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new_v4</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> folder </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token macro property">format!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"{now}_{uuid}"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> upload_folder </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">PathBuf</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">from</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token constant" style="color:rgb(129, 31, 63)">UPLOAD_DIR</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">join</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">folder</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token namespace">fs</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">create_dir_all</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">upload_folder</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">// Write the file into the newly created folder</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> path </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> upload_folder</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">join</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">file_name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">mut</span><span class="token plain"> f </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">fs</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">OpenOptions</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">create_new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token boolean">true</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">write</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token boolean">true</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">open</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">path</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        f</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">write_all</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">content</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        f</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">flush</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">// Record the file upload in database</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> file </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">files</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveModel</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            notes_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveValue</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">notes_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            file_path</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">ActiveValue</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Set</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                path</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">strip_prefix</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token constant" style="color:rgb(129, 31, 63)">UPLOAD_DIR</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unwrap</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_str</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unwrap</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token class-name" style="color:rgb(38, 127, 153)">Default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">insert</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">ctx</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        files</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">push</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">file</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token namespace">format</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">json</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">files</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>Try uploading multiple files in a single POST request:</p>
<p><img decoding="async" loading="lazy" src="https://www.sea-ql.org/blog/img/Loco%20x%20SeaORM%20upload%20file.png" alt="" class="img_ev3q"></p>
<p>All uploaded files are saved into the <code>uploads</code> directory:</p>
<p><img decoding="async" loading="lazy" src="https://www.sea-ql.org/blog/img/Loco%20x%20SeaORM%20upload%20directory.png" alt="" class="img_ev3q"></p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="list-file">List File<a href="https://www.sea-ql.org/blog/2024-05-28-getting-started-with-loco-seaorm/#list-file" class="hash-link" aria-label="Direct link to List File" title="Direct link to List File">​</a></h4>
<p>List all <code>files</code> that are related to a specific <code>notes_id</code>.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockTitle_OeMC">loco_starter/src/controllers/files.rs</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[debug_handler]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">list</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    _auth</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token namespace">auth</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token constant" style="color:rgb(129, 31, 63)">JWT</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Path</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">notes_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Path</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">State</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">State</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">AppContext</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Result</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Response</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">// Fetch all files uploaded for a specific notes</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> files </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">files</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">find</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">filter</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">files</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">NotesId</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">eq</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">notes_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">order_by_asc</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">files</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">all</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">ctx</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token namespace">format</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">json</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">files</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p><img decoding="async" loading="lazy" src="https://www.sea-ql.org/blog/img/Loco%20x%20SeaORM%20list%20file.png" alt="" class="img_ev3q"></p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="view-file">View File<a href="https://www.sea-ql.org/blog/2024-05-28-getting-started-with-loco-seaorm/#view-file" class="hash-link" aria-label="Direct link to View File" title="Direct link to View File">​</a></h4>
<p>View a specific <code>files</code>.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockTitle_OeMC">loco_starter/src/controllers/files.rs</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[debug_handler]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">view</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    _auth</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token namespace">auth</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token constant" style="color:rgb(129, 31, 63)">JWT</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Path</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">files_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Path</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">State</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">State</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">AppContext</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Result</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Response</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">// Fetch the file info from database</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> file </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">files</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">find_by_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">files_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">one</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">ctx</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">expect</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"File not found"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">// Stream the file</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> file </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">fs</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">File</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">open</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token macro property">format!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"{UPLOAD_DIR}/{}"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> file</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">file_path</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> stream </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">ReaderStream</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">file</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> body </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Body</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">from_stream</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">stream</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Ok</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">format</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">render</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">response</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">body</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">body</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p><img decoding="async" loading="lazy" src="https://www.sea-ql.org/blog/img/Loco%20x%20SeaORM%20view%20file.png" alt="" class="img_ev3q"></p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="file-controller-routes">File Controller Routes<a href="https://www.sea-ql.org/blog/2024-05-28-getting-started-with-loco-seaorm/#file-controller-routes" class="hash-link" aria-label="Direct link to File Controller Routes" title="Direct link to File Controller Routes">​</a></h4>
<p>Add our newly defined files handler to the application routes.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockTitle_OeMC">loco_starter/src/controllers/files.rs</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">routes</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Routes</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">// Bind the routes</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Routes</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">prefix</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"files"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">add</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"/upload/:notes_id"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token function" style="color:rgb(0, 0, 255)">post</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">upload</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">add</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"/list/:notes_id"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token function" style="color:rgb(0, 0, 255)">get</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">list</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">add</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"/view/:files_id"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token function" style="color:rgb(0, 0, 255)">get</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">view</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<div class="language-diff codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockTitle_OeMC">loco_starter/src/app.rs</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-diff codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">pub struct App;</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">#[async_trait]</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">impl Hooks for App {</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    // ...</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    fn routes(_ctx: &amp;AppContext) -&gt; AppRoutes {</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        AppRoutes::with_default_routes()</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            .prefix("/api")</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            .add_route(controllers::notes::routes())</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            .add_route(controllers::auth::routes())</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            .add_route(controllers::user::routes())</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">+           .add_route(controllers::files::routes())</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    // ...</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">}</span><br></span></code></pre></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="extra-rust-dependencies">Extra Rust Dependencies<a href="https://www.sea-ql.org/blog/2024-05-28-getting-started-with-loco-seaorm/#extra-rust-dependencies" class="hash-link" aria-label="Direct link to Extra Rust Dependencies" title="Direct link to Extra Rust Dependencies">​</a></h4>
<p>Remember to enable <code>multipart</code> in <code>axum</code> and add <code>tokio-util</code> dependency.</p>
<div class="language-diff codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockTitle_OeMC">loco_starter/Cargo.toml</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-diff codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">- axum = "0.7.1"</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">+ axum = { version = "0.7.1", features = ["multipart"] }</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">+ tokio-util = "0.7.11"</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="sql-server-support">SQL Server Support<a href="https://www.sea-ql.org/blog/2024-05-28-getting-started-with-loco-seaorm/#sql-server-support" class="hash-link" aria-label="Direct link to SQL Server Support" title="Direct link to SQL Server Support">​</a></h2>
<p><a href="https://www.sea-ql.org/SeaORM-X/" target="_blank" rel="noopener noreferrer">SQL Server for SeaORM</a> is now available as a closed beta. If you are interested, please signup <a href="https://forms.office.com/r/1MuRPJmYBR" target="_blank" rel="noopener noreferrer">here</a>.</p>
<p>Migrating from <code>sea-orm</code> to <code>sea-orm-x</code> is straightforward with two simple steps. First, update the existing <code>sea-orm</code> dependency to <code>sea-orm-x</code> and enable the <code>sqlz-mssql</code> feature. Note that you might need to patch SeaORM dependency for the upstream dependencies.</p>
<div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockTitle_OeMC">Cargo.toml</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token key property">sea-orm</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token key property">path</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"&lt;SEA_ORM_X_ROOT&gt;/sea-orm-x"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token key property">features</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token string" style="color:rgb(163, 21, 21)">"runtime-async-std-rustls"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"sqlz-mssql"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token key property">sea-orm-migration</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token key property">path</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"&lt;SEA_ORM_X_ROOT&gt;/sea-orm-x/sea-orm-migration"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)"># Patch SeaORM dependency for the upstream dependencies</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token table class-name" style="color:rgb(38, 127, 153)">patch.crates-io</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token key property">sea-orm</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token key property">path</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"&lt;SEA_ORM_X_ROOT&gt;/sea-orm-x"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token key property">sea-orm-migration</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> </span><span class="token key property">path</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"&lt;SEA_ORM_X_ROOT&gt;/sea-orm-x/sea-orm-migration"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>Second, update the connection string to connect to the MSSQL database.</p>
<div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)"># If the schema is `dbo`, simply write:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">mssql://username:password@host/database</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)"># Or, specify the schema name by providing an extra `currentSchema` query param.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">mssql://username:password@host/database?currentSchema</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">my_schema</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)"># You can trust peer certificate by providing an extra trustCertificate query param.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">mssql://username:password@host/database?trustCertificate</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">true</span><br></span></code></pre></div></div>
<p>SeaORM X has full Loco support and integrate seamlessly with many web frameworks:</p>
<ul>
<li>Actix</li>
<li>Axum</li>
<li>Async GraphQL</li>
<li>jsonrpsee</li>
<li>Loco</li>
<li>Poem</li>
<li>Salvo</li>
<li>Tonic</li>
</ul>
<p>Happy Coding!</p>]]></content>
        <author>
            <name>Billy Chan</name>
            <uri>https://github.com/billy1624</uri>
        </author>
        <category label="news" term="news"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[The rainbow bridge between sync and async Rust]]></title>
        <id>https://www.sea-ql.org/blog/2024-05-20-async-rainbow-bridge/</id>
        <link href="https://www.sea-ql.org/blog/2024-05-20-async-rainbow-bridge/"/>
        <updated>2024-05-20T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This story stems from the saying "What Color is Your Function?" as a criticism to the async implementation of common programming languages. Well, Rust also falls into the category of "colored functions". So in this blog post, let's see how we can design systems to effectively combine sync and async code.]]></summary>
        <content type="html"><![CDATA[<img src="https://www.sea-ql.org/blog/img/async-rainbow-bridge.png">
<p>This story stems from the saying "What Color is Your Function?" as a criticism to the async implementation of common programming languages. Well, Rust also falls into the category of "colored functions". So in this blog post, let's see how we can design systems to effectively combine sync and async code.</p>
<p>Rainbow bridge is a reference to the bridge in Thor that teleports you between different realms - a perfect analogy!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="background">Background<a href="https://www.sea-ql.org/blog/2024-05-20-async-rainbow-bridge/#background" class="hash-link" aria-label="Direct link to Background" title="Direct link to Background">​</a></h2>
<p>Sync code can be blocking IO, or expensive computation. Async code is usually network IO where you'd wait for results.</p>
<p>In both cases, we want to maximize concurrency, such that the program can make full use of the CPU instead of sitting there idle. A common approach is message passing, where we package tasks and send them to different workers for execution.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="sync---sync">Sync -&gt; Sync<a href="https://www.sea-ql.org/blog/2024-05-20-async-rainbow-bridge/#sync---sync" class="hash-link" aria-label="Direct link to Sync -> Sync" title="Direct link to Sync -> Sync">​</a></h2>
<p>Let's start with the classic example, pure sync code. There exists <a href="https://doc.rust-lang.org/std/sync/mpsc/index.html" target="_blank" rel="noopener noreferrer">std::sync::mpsc</a> in the standard library, so let's take a look.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">use</span><span class="token plain"> </span><span class="token namespace">std</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">sync</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">mpsc</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token plain">channel</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// create an unbounded channel</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">sender</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> receiver</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(0, 0, 255)">channel</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// never blocks</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">sender</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">send</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"Hello"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unwrap</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> handle </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">std</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">thread</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">spawn</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">move</span><span class="token closure-params closure-punctuation punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token closure-params closure-punctuation punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">// wait until there is a message</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> message </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> receiver</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">recv</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unwrap</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token macro property">println!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"{message}"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">handle</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">join</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unwrap</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">println!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"Bye"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>Prints (<a href="https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2021&amp;gist=4eecb3216b6b10477849f5648bb026f4" target="_blank" rel="noopener noreferrer">Playground</a>):</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">Hello</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">Bye</span><br></span></code></pre></div></div>
<p>Now, we'll make a more elaborate example: a program that spawns a number of worker threads to perform some 'expensive' computation. The main thread would dispatch the tasks to those threads and in turn collect the results via another channel.</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">┌─────────────┐    tasks    ┌─────────────────┐   result</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">│             ╞═════════════╡ worker thread 1 ╞═════════════╗    ┌─────────────┐ </span><br></span><span class="token-line" style="color:#000000"><span class="token plain">│ main thread │             ├─────────────────┤             ╠════╡ main thread │ </span><br></span><span class="token-line" style="color:#000000"><span class="token plain">│             ╞═════════════╡ worker thread 2 ╞═════════════╝    └─────────────┘ </span><br></span><span class="token-line" style="color:#000000"><span class="token plain">└─────────────┘             └─────────────────┘              </span><br></span></code></pre></div></div>
<p>First, setup the channels.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">result</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> collector</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(0, 0, 255)">channel</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// result</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">mut</span><span class="token plain"> senders </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Vec</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> _ </span><span class="token keyword" style="color:rgb(0, 0, 255)">in</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">0</span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token constant" style="color:rgb(129, 31, 63)">THREADS</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">sender</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> receiver</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(0, 0, 255)">channel</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// tasks</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    senders</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">push</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">sender</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> result </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> result</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">clone</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token namespace">std</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">thread</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">spawn</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">move</span><span class="token plain"> </span><span class="token closure-params closure-punctuation punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token closure-params closure-punctuation punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token plain"> </span><span class="token function" style="color:rgb(0, 0, 255)">worker</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">receiver</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> result</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>The worker thread looks like:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">worker</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">receiver</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Receiver</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Task</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> sender</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Sender</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">Done</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">while</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Ok</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">task</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> receiver</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">recv</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> result </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(0, 0, 255)">process</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">task</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        sender</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">send</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">result</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unwrap</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>Then, dispatch tasks.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> c </span><span class="token keyword" style="color:rgb(0, 0, 255)">in</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">0</span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token constant" style="color:rgb(129, 31, 63)">TASKS</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> task </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(0, 0, 255)">some_random_task</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    senders</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">c </span><span class="token operator" style="color:rgb(0, 0, 0)">%</span><span class="token plain"> </span><span class="token constant" style="color:rgb(129, 31, 63)">THREADS</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">send</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">task</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unwrap</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>Finally, we can collect results.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> _ </span><span class="token keyword" style="color:rgb(0, 0, 255)">in</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">0</span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token constant" style="color:rgb(129, 31, 63)">TASKS</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> result </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> collector</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">recv</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unwrap</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token macro property">println!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"{result:?}"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>Full source code can be found <a href="https://github.com/SeaQL/FireDBG.Rust.Testbench/tree/main/multi-thread-matrix" target="_blank" rel="noopener noreferrer">here</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="async---async">Async -&gt; Async<a href="https://www.sea-ql.org/blog/2024-05-20-async-rainbow-bridge/#async---async" class="hash-link" aria-label="Direct link to Async -> Async" title="Direct link to Async -> Async">​</a></h2>
<p>Next, we'll migrate to async land. Using <a href="https://docs.rs/tokio/latest/tokio/sync/mpsc/index.html" target="_blank" rel="noopener noreferrer">tokio::sync::mpsc</a>, it's very similar to the above example, except every operation is <code>async</code> and thus imposes additional restrictions to lifetimes. (The trick is, just move / clone. Don't borrow)</p>
<p><code>tokio</code>'s <code>unbounded_channel</code> is the equivalent to <code>std</code>'s <code>channel</code>. Otherwise it's very similar. The <code>spawn</code> method takes in a <code>Future</code>; since the worker needs to take in the channels, we construct an async closure with <code>async move {}</code>.</p>
<table><thead><tr><th>std</th><th>tokio</th></tr></thead><tbody><tr><td>(unbounded) <a href="https://doc.rust-lang.org/std/sync/mpsc/fn.channel.html" target="_blank" rel="noopener noreferrer"><code>channel</code></a></td><td><a href="https://docs.rs/tokio/latest/tokio/sync/mpsc/fn.unbounded_channel.html" target="_blank" rel="noopener noreferrer"><code>unbounded_channel</code></a></td></tr><tr><td><a href="https://doc.rust-lang.org/std/sync/mpsc/fn.sync_channel.html" target="_blank" rel="noopener noreferrer"><code>sync_channel</code></a></td><td>(bounded) <a href="https://docs.rs/tokio/latest/tokio/sync/mpsc/fn.channel.html" target="_blank" rel="noopener noreferrer"><code>channel</code></a></td></tr></tbody></table>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">result</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">mut</span><span class="token plain"> collector</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(0, 0, 255)">unbounded_channel</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">mut</span><span class="token plain"> senders </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Vec</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> _ </span><span class="token keyword" style="color:rgb(0, 0, 255)">in</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">0</span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token constant" style="color:rgb(129, 31, 63)">WORKERS</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">sender</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">mut</span><span class="token plain"> receiver</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(0, 0, 255)">unbounded_channel</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    senders</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">push</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">sender</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> result </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> result</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">clone</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token namespace">tokio</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">task</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">spawn</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">move</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">while</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Some</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">task</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> receiver</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">recv</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            result</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">send</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token function" style="color:rgb(0, 0, 255)">process</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">task</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unwrap</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token namespace">std</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">mem</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">drop</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">result</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// &lt;-- ?</span><br></span></code></pre></div></div>
<p>Why do we need to drop the <code>result</code> sender? This is one of the foot gun: <code>tokio</code> would swallow panics originated within the task, and so if that happened, the program would never exit. By dropping the last copy of <code>result</code> in scope, the channel would automatically close <em>after</em> all tasks exit, which in turn would triggle up to our <code>collector</code>.</p>
<p>The rest is almost the same.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">i</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> task</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">in</span><span class="token plain"> tasks</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">iter</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">enumerate</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    senders</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">i </span><span class="token operator" style="color:rgb(0, 0, 0)">%</span><span class="token plain"> </span><span class="token constant" style="color:rgb(129, 31, 63)">WORKERS</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">send</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">task</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">clone</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unwrap</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token namespace">std</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">mem</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">drop</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">senders</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> _ </span><span class="token keyword" style="color:rgb(0, 0, 255)">in</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">0</span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token plain">tasks</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">len</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> result </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> collector</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">recv</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unwrap</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token macro property">println!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"{result:?}"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>Full source code can be found <a href="https://github.com/SeaQL/FireDBG.Rust.Testbench/tree/main/tokio-mpsc" target="_blank" rel="noopener noreferrer">here</a>.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="flume-mpmc">Flume mpmc<a href="https://www.sea-ql.org/blog/2024-05-20-async-rainbow-bridge/#flume-mpmc" class="hash-link" aria-label="Direct link to Flume mpmc" title="Direct link to Flume mpmc">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="mpmc---multi-producer-multi-consumer">mpmc - multi producer, multi consumer<a href="https://www.sea-ql.org/blog/2024-05-20-async-rainbow-bridge/#mpmc---multi-producer-multi-consumer" class="hash-link" aria-label="Direct link to mpmc - multi producer, multi consumer" title="Direct link to mpmc - multi producer, multi consumer">​</a></h4>
<p>The previous examples have a flaw: we have to spawn multiple <code>mpsc</code> channels to send tasks, which is:</p>
<ol>
<li>clumsy. we need to keep a list of <code>senders</code></li>
<li>not the most efficient. is round-robin the best way of distributing tasks? some of the workers may remain idle</li>
</ol>
<p>Here is the ideal setup:</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">                      tasks   ┌─────────────────┐   result</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">┌─────────────┐   ╔═══════════╡ worker thread 1 ╞════════════╗   ┌─────────────┐ </span><br></span><span class="token-line" style="color:#000000"><span class="token plain">│ main thread ╞═══╣           ├─────────────────┤            ╠═══╡ main thread │ </span><br></span><span class="token-line" style="color:#000000"><span class="token plain">└─────────────┘   ╚═══════════╡ worker thread 2 ╞════════════╝   └─────────────┘ </span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                              └─────────────────┘              </span><br></span></code></pre></div></div>
<p>Let's rewrite our example using <a href="https://docs.rs/flume/latest/flume/" target="_blank" rel="noopener noreferrer">Flume</a>. But first, know the mapping between <code>tokio</code> and <code>flume</code>:</p>
<table><thead><tr><th>Tokio</th><th>Flume</th></tr></thead><tbody><tr><td><a href="https://docs.rs/tokio/latest/tokio/sync/mpsc/fn.unbounded_channel.html" target="_blank" rel="noopener noreferrer"><code>unbounded_channel</code></a></td><td><a href="https://docs.rs/flume/latest/flume/fn.unbounded.html" target="_blank" rel="noopener noreferrer"><code>unbounded</code></a> (channel)</td></tr><tr><td>(bounded) <a href="https://docs.rs/tokio/latest/tokio/sync/mpsc/fn.channel.html" target="_blank" rel="noopener noreferrer"><code>channel</code></a></td><td><a href="https://docs.rs/flume/latest/flume/fn.bounded.html" target="_blank" rel="noopener noreferrer">bounded</a> (channel)</td></tr><tr><td><code>send</code></td><td><code>send</code></td></tr><tr><td><code>recv</code></td><td><code>recv_async</code></td></tr></tbody></table>
<p>In <code>tokio</code>, the method is exclusive: <code>async fn recv(&amp;mut self)</code>; in <code>flume</code>, the method is <code>fn recv_async(&amp;self) -&gt; RecvFut</code>. The type signature already told you the distinction between <code>mpsc</code> vs <code>mpmc</code>! It is wrong to use the blocking <code>recv</code> method in async context in <code>flume</code>, but sadly the compiler would not warn you about it.</p>
<p>The channel setup is now slightly simpler:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">sender</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> receiver</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(0, 0, 255)">unbounded</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// task</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">result</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> collector</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(0, 0, 255)">unbounded</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// result</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> _ </span><span class="token keyword" style="color:rgb(0, 0, 255)">in</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">0</span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token constant" style="color:rgb(129, 31, 63)">WORKERS</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> receiver </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> receiver</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">clone</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> result </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> result</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">clone</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token namespace">tokio</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">task</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">spawn</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">move</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">while</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Ok</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">task</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> receiver</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">recv_async</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            result</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">send</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token function" style="color:rgb(0, 0, 255)">process</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">task</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unwrap</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>We no longer have to dispatch tasks ourselves. All workers share the same task queue, and thus workers would fetch the next task as soon as the previous one is finished - effectively load balance among themselves!</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> task </span><span class="token keyword" style="color:rgb(0, 0, 255)">in</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">tasks </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    sender</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">send</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">task</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">clone</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unwrap</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> _ </span><span class="token keyword" style="color:rgb(0, 0, 255)">in</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">0</span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token plain">tasks</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">len</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> result </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> collector</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">recv_async</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unwrap</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token macro property">println!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"{result:?}"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>Full source code can be found <a href="https://github.com/SeaQL/FireDBG.Rust.Testbench/tree/main/flume-mpmc" target="_blank" rel="noopener noreferrer">here</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="sync---async">Sync -&gt; Async<a href="https://www.sea-ql.org/blog/2024-05-20-async-rainbow-bridge/#sync---async" class="hash-link" aria-label="Direct link to Sync -> Async" title="Direct link to Sync -> Async">​</a></h2>
<p>In the final example, let's consider a program that is mostly sync, but has a few async operations that we want to handle in a background thread.</p>
<p>In the example below, our blocking operation is 'reading from stdin' from the main thread. And we send those lines to an async thread to handle.</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">┌─────────────┐           ┌──────────────┐</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">│ main thread ╞═══════════╡ async thread │</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">└─────────────┘           └──────────────┘</span><br></span></code></pre></div></div>
<p>It follows the usual 3 steps:</p>
<ol>
<li>create a flume channel</li>
<li>pass the receiver end to a worker thread</li>
<li>send tasks over the channel</li>
</ol>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">main</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Result</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">sender</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> receiver</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(0, 0, 255)">unbounded</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// flume channel</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token namespace">std</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">thread</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">spawn</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">move</span><span class="token plain"> </span><span class="token closure-params closure-punctuation punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token closure-params closure-punctuation punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">// this runtime is single-threaded</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> rt </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">tokio</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">runtime</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Builder</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new_current_thread</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">enable_all</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">build</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unwrap</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        rt</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">block_on</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token function" style="color:rgb(0, 0, 255)">handler</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">receiver</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">loop</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">mut</span><span class="token plain"> line </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">// this blocks the current thread until there is a new line</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token keyword" style="color:rgb(0, 0, 255)">match</span><span class="token plain"> </span><span class="token namespace">std</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">io</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">stdin</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">read_line</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">mut</span><span class="token plain"> line</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token class-name" style="color:rgb(38, 127, 153)">Ok</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">0</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">break</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// this means stdin is closed</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token class-name" style="color:rgb(38, 127, 153)">Ok</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">_</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token class-name" style="color:rgb(38, 127, 153)">Err</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">e</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=&gt;</span><span class="token plain"> </span><span class="token macro property">panic!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"{e:?}"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        sender</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">send</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">line</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Ok</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>This is the handler:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">handler</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">receiver</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Receiver</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Result</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">while</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Ok</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">line</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> receiver</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">recv_async</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token function" style="color:rgb(0, 0, 255)">process</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">line</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Ok</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>It doesn't look much different from the <code>async -&gt; async</code> example, the only difference is one side is sync! Full source code can be found <a href="https://github.com/SeaQL/sea-streamer/blob/main/sea-streamer-file/src/bin/stdin-to-file.rs" target="_blank" rel="noopener noreferrer">here</a>.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="graceful-shutdown">Graceful shutdown<a href="https://www.sea-ql.org/blog/2024-05-20-async-rainbow-bridge/#graceful-shutdown" class="hash-link" aria-label="Direct link to Graceful shutdown" title="Direct link to Graceful shutdown">​</a></h3>
<p>The above code has a problem: we never know whether a line has been processed. If the program has an exit mechanism from handling <code>sigint</code>, there is a possibility of exiting before all the lines has been processed.</p>
<p>Let's see how we can shutdown properly.</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> handle </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">std</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">thread</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">spawn</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">..</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// running is an AtomicBool</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">while</span><span class="token plain"> running</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">load</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Ordering</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Acquire</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> line </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(0, 0, 255)">read_line_from_stdin</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    sender</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">send</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">line</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token namespace">std</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">mem</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">drop</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">sender</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">handle</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">join</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unwrap</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unwrap</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>The shutdown sequence has 3 steps:</p>
<ol start="0">
<li>we first obtain the <code>JoinHandle</code> to the thread</li>
<li>we drop all copies of <code>sender</code>, effectively closing the channel</li>
<li>in the worker thread, <code>receiver.recv_async()</code> would result in an error, as stated in the <a href="https://docs.rs/flume/latest/flume/struct.Receiver.html#method.recv_async" target="_blank" rel="noopener noreferrer">docs</a>
<blockquote>
<p>Asynchronously receive a value from the channel, returning an error if all senders have been dropped.</p>
</blockquote>
</li>
<li>the worker thread finishes, joining the main thread</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="async---sync">Async -&gt; Sync<a href="https://www.sea-ql.org/blog/2024-05-20-async-rainbow-bridge/#async---sync" class="hash-link" aria-label="Direct link to Async -> Sync" title="Direct link to Async -> Sync">​</a></h2>
<p>The other way around is equally simple, as illustrated in <a href="https://github.com/SeaQL/sea-streamer/blob/main/examples/src/bin/blocking.rs" target="_blank" rel="noopener noreferrer">SeaStreamer's example</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://www.sea-ql.org/blog/2024-05-20-async-rainbow-bridge/#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion">​</a></h2>
<table><thead><tr><th></th><th>sync</th><th>async</th></tr></thead><tbody><tr><td>to spawn worker</td><td><a href="https://doc.rust-lang.org/std/thread/fn.spawn.html" target="_blank" rel="noopener noreferrer"><code>std::thread::spawn</code></a></td><td><a href="https://docs.rs/tokio/latest/tokio/task/fn.spawn.html" target="_blank" rel="noopener noreferrer"><code>tokio::task::spawn</code></a></td></tr><tr><td>concurrency</td><td>multi-threaded</td><td>can be multi-threaded or single-threaded</td></tr><tr><td>worker is</td><td><code>FnOnce</code></td><td><code>Future</code></td></tr><tr><td>send message with</td><td><code>send</code></td><td><code>send</code></td></tr><tr><td>receive message with</td><td><code>recv</code></td><td><code>recv_async</code></td></tr><tr><td>waiting for messages</td><td>blocking</td><td>yield to runtime</td></tr></tbody></table>
<p>In this article we discussed:</p>
<ol>
<li>Multi-threaded parallelism in sync realm</li>
<li>Concurrency in async realm - with <code>tokio</code> and <code>flume</code></li>
<li>Bridging sync and async code with <code>flume</code></li>
</ol>
<p>Now you already learnt the powers of <code>flume</code>, but there is more!</p>
<p>In the next episode, hopefully we will get to discuss other interesting features of <code>flume</code> - bounded channels and 'rendezvous channels'.</p>
<ul>
<li><a href="https://firedbg.sea-ql.org/blog/2024-06-30-fizzbuzz-multithread/" target="_blank" rel="noopener noreferrer">FizzBuzz Multithreaded - synchronization with rendezvous channels</a></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="rustacean-sticker-pack-">Rustacean Sticker Pack 🦀<a href="https://www.sea-ql.org/blog/2024-05-20-async-rainbow-bridge/#rustacean-sticker-pack-" class="hash-link" aria-label="Direct link to Rustacean Sticker Pack 🦀" title="Direct link to Rustacean Sticker Pack 🦀">​</a></h2>
<p>The Rustacean Sticker Pack is the perfect way to express your passion for Rust.
Our stickers are made with a premium water-resistant vinyl with a unique matte finish.
Stick them on your laptop, notebook, or any gadget to show off your love for Rust!</p>
<p>Moreover, all proceeds contributes directly to the ongoing development of SeaQL projects.</p>
<p>Sticker Pack Contents:</p>
<ul>
<li>Logo of SeaQL projects: SeaQL, SeaORM, SeaQuery, Seaography, FireDBG</li>
<li>Mascot of SeaQL: Terres the Hermit Crab</li>
<li>Mascot of Rust: Ferris the Crab</li>
<li>The Rustacean word</li>
</ul>
<p><a href="https://www.sea-ql.org/sticker-pack/" target="_blank" rel="noopener noreferrer">Support SeaQL and get a Sticker Pack!</a></p>
<a href="https://www.sea-ql.org/sticker-pack/"><img style="border-radius:25px" alt="Rustacean Sticker Pack by SeaQL" src="https://www.sea-ql.org/static/sticker-pack-1s.jpg"></a>]]></content>
        <author>
            <name>Chris Tsang</name>
            <uri>https://github.com/tyt2y3</uri>
        </author>
        <category label="news" term="news"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building a Redis / Kafka Data Sink]]></title>
        <id>https://www.sea-ql.org/blog/2024-05-05-redis-kafka-data-sink/</id>
        <link href="https://www.sea-ql.org/blog/2024-05-05-redis-kafka-data-sink/"/>
        <updated>2024-05-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This tutorial shows you how to use Rust to build a system that:]]></summary>
        <content type="html"><![CDATA[<img src="https://www.sea-ql.org/SeaStreamer/img/SeaStreamer%20banner.png">
<p>This tutorial shows you how to use Rust to build a system that:</p>
<ol>
<li>Subscribe to a real-time websocket data feed</li>
<li>Stream the data to Kafka / Redis</li>
<li>Save the data into a SQL database</li>
</ol>
<p>Here, we'll employ a micro-services architecture, and split the functionality into two apps:</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">┌─────────────────────┐      ─────────────────      ┌───────────────┐</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">│ Websocket Data Feed │ ---&gt;   Redis / Kafka   ---&gt; │ SQL Data Sink │</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">└─────────────────────┘      ─────────────────      └───────────────┘</span><br></span></code></pre></div></div>
<p>In stream processing, we often use the terms "source" / "sink", but a data sink is simply a stream consumer that persists the data into a store.</p>
<p>On the source side, we'd use <a href="https://github.com/SeaQL/sea-streamer" target="_blank" rel="noopener noreferrer">SeaStreamer</a>. On the sink side, we'd be using <a href="https://github.com/SeaQL/sea-orm" target="_blank" rel="noopener noreferrer">SeaORM</a>. Below are the supported technologies; for the rest of this article, we'll be using <code>Redis</code> and <code>SQLite</code> because they're easy to setup.</p>
<table><thead><tr><th>SeaStreamer</th><th>SeaORM</th></tr></thead><tbody><tr><td>Kafka, Redis</td><td>MySQL, Postgres, SQLite, SQL Server<sup><a href="https://www.sea-ql.org/blog/2024-05-05-redis-kafka-data-sink/#user-content-fn-1-870cc4" id="user-content-fnref-1-870cc4" data-footnote-ref="true" aria-describedby="footnote-label">1</a></sup></td></tr></tbody></table>
<p>To get started, you can quickly start a Redis instance via Docker:</p>
<div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token function" style="color:rgb(0, 0, 255)">docker</span><span class="token plain"> run </span><span class="token parameter variable" style="color:rgb(9, 134, 88)">-d</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(9, 134, 88)">--rm</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(9, 134, 88)">--name</span><span class="token plain"> redis </span><span class="token parameter variable" style="color:rgb(9, 134, 88)">-p</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">6379</span><span class="token plain">:6379 redis</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="1-websocket-subscription">1. Websocket subscription<a href="https://www.sea-ql.org/blog/2024-05-05-redis-kafka-data-sink/#1-websocket-subscription" class="hash-link" aria-label="Direct link to 1. Websocket subscription" title="Direct link to 1. Websocket subscription">​</a></h2>
<p>Let's write a websocket subscriber in Rust. Here we'd use the awesome <a href="https://crates.io/crates/async-tungstenite" target="_blank" rel="noopener noreferrer">async-tungstenite</a> library.</p>
<p>We'd subscribe to the <code>GBP/USD</code> price feed from Kraken, API documentation can be found <a href="https://docs.kraken.com/websockets/#message-spread" target="_blank" rel="noopener noreferrer">here</a>. NB: they're not real FX data, but should be good enough for demo.</p>
<p>Step 1, create a websocket connection:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">mut</span><span class="token plain"> ws</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> _</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">async_tungstenite</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">tokio</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">connect_async</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"wss://ws.kraken.com/"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>Step 2, send a subscription request:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">ws</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">send</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Message</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Text</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">r#"{ "event": "subscribe", "pair": ["GBP/USD"], "subscription": { "name": "spread" } }"#</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_owned</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>Step 3, stream the messages:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">loop</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">match</span><span class="token plain"> ws</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">next</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Some</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Ok</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Message</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Text</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">data</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token keyword" style="color:rgb(0, 0, 255)">if</span><span class="token plain"> data </span><span class="token operator" style="color:rgb(0, 0, 0)">==</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">r#"{"event":"heartbeat"}"#</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                </span><span class="token keyword" style="color:rgb(0, 0, 255)">continue</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token macro property">println!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"{data}"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Some</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Err</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">e</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=&gt;</span><span class="token plain"> </span><span class="token macro property">bail!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"Socket error: {e}"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">None</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=&gt;</span><span class="token plain"> </span><span class="token macro property">bail!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"Stream ended"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        e </span><span class="token operator" style="color:rgb(0, 0, 0)">=&gt;</span><span class="token plain"> </span><span class="token macro property">bail!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"Unexpected message {e:?}"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="2-redis--kafka-stream-producer">2. Redis / Kafka Stream Producer<a href="https://www.sea-ql.org/blog/2024-05-05-redis-kafka-data-sink/#2-redis--kafka-stream-producer" class="hash-link" aria-label="Direct link to 2. Redis / Kafka Stream Producer" title="Direct link to 2. Redis / Kafka Stream Producer">​</a></h2>
<p>Step 1, create a <code>SeaStreamer</code> instance connecting to Redis / Kafka:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> streamer </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SeaStreamer</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">connect</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token string" style="color:rgb(163, 21, 21)">"redis://localhost"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SeaConnectOptions</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>There are a bunch of different options for <a href="https://docs.rs/sea-streamer-redis/latest/sea_streamer_redis/struct.RedisConnectOptions.html" target="_blank" rel="noopener noreferrer">Redis</a> &amp; <a href="https://docs.rs/sea-streamer-kafka/0.5.0/sea_streamer_kafka/struct.KafkaConnectOptions.html" target="_blank" rel="noopener noreferrer">Kafka</a> respectively, you can refer to SeaStreamer's <a href="https://www.sea-ql.org/SeaStreamer/" target="_blank" rel="noopener noreferrer">documentation</a>.</p>
<p>Step 2, create a producer:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> producer</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SeaProducer</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> streamer</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">create_producer</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token string" style="color:rgb(163, 21, 21)">"GBP_USD"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">parse</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// Stream Key</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// Producer Options</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>There aren't any specific options for Producer.</p>
<p>Step 3, decode the messages:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> spread</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SpreadMessage</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">serde_json</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">from_str</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">data</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> message </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">serde_json</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">to_string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">spread</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>Here, we use the awesome <a href="https://crates.io/crates/serde" target="_blank" rel="noopener noreferrer"><code>serde</code></a> library to perform message parsing and conversion:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)">// The raw message looks like: [80478222,["1.25475","1.25489","1714946803.030088","949.74917071","223.36195920"],"spread","GBP/USD"]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Debug, Serialize, Deserialize)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">SpreadMessage</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[allow(dead_code)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[serde(skip_serializing)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    channel_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">u32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// placeholder; not needed</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    spread</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Spread</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// nested object</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    channel_name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    pair</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Debug, Serialize, Deserialize)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Spread</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    bid</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Decimal</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    ask</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Decimal</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[serde(with = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"timestamp_serde"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// custom serde</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    timestamp</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Timestamp</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    bid_vol</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Decimal</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    ask_vol</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Decimal</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>Step 4, send the messages:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">loop</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">match</span><span class="token plain"> ws</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">next</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Some</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Ok</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Message</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Text</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">data</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> spread</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SpreadMessage</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">serde_json</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">from_str</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">data</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> message </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">serde_json</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">to_string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">spread</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            producer</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">send</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">message</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// &lt;--</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>Note that the <a href="https://docs.rs/sea-streamer/latest/sea_streamer/trait.Producer.html#method.send" target="_blank" rel="noopener noreferrer"><code>producer.send</code></a> call is not <code>async/await</code>, and this is a crucial detail! This removes the stream processing bottleneck. Behind the scene, messages will be buffered and handled on a different thread, so that your input stream can run as close to real-time as possible.</p>
<p>Here is the complete <a href="https://github.com/SeaQL/sea-streamer/tree/main/examples/price-feed" target="_blank" rel="noopener noreferrer"><code>price-feed</code></a> app which you can checkout from the SeaStreamer repository:</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">$ cd examples/price-feed</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">$ cargo run</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">Connecting ..</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">Connected.</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">Subscribed.</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">{"spread":{"bid":"1.25495","ask":"1.25513","timestamp":"2024-05-05T16:31:00.961214","bid_vol":"61.50588918","ask_vol":"787.90883861"},"channel_name":"spread","pair":"GBP/USD"}</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">..</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="3-sql-data-sink">3. SQL Data Sink<a href="https://www.sea-ql.org/blog/2024-05-05-redis-kafka-data-sink/#3-sql-data-sink" class="hash-link" aria-label="Direct link to 3. SQL Data Sink" title="Direct link to 3. SQL Data Sink">​</a></h2>
<p>Step 1, create a stream consumer:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> streamer </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SeaStreamer</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">connect</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">streamer_uri</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> consumer </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> streamer</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">create_consumer</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain">stream_key</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">SeaConsumerOptions</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>There are a bunch of different options for <a href="https://docs.rs/sea-streamer-redis/latest/sea_streamer_redis/struct.RedisConsumerOptions.html" target="_blank" rel="noopener noreferrer">Redis</a> &amp; <a href="https://docs.rs/sea-streamer-kafka/0.5.0/sea_streamer_kafka/struct.KafkaConsumerOptions.html" target="_blank" rel="noopener noreferrer">Kafka</a> respectively, you can refer to SeaStreamer's <a href="https://github.com/SeaQL/sea-streamer/tree/main/examples/" target="_blank" rel="noopener noreferrer">examples</a>. Here we use the default, which is a real-time state-less stream consumer.</p>
<p>Step 2, create a database:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">mut</span><span class="token plain"> opt </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">ConnectOptions</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"sqlite://my_db.sqlite?mode=rwc"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">opt</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">max_connections</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">sqlx_logging</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token boolean">false</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> db </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Database</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">connect</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">opt</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>We set <code>max_connections</code> to <code>1</code>, because our data sink will not do concurrent inserts anyway.</p>
<p>Here is the <code>Entity</code>:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Debug, Clone, PartialEq, Eq, DeriveEntityModel, Deserialize)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(table_name = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"event"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(primary_key)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[serde(default)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> timestamp</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> bid</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> ask</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> bid_vol</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> ask_vol</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>The table shall be named <code>event</code> and we derive <code>Deserialize</code> on the Model.</p>
<p>We will use the following helper method to create the database table, where the schema is derived from the Entity:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">create_tables</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token class-name" style="color:rgb(38, 127, 153)">DbConn</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Result</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DbErr</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> builder </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">get_database_backend</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> schema </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Schema</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">builder</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> stmt </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> builder</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">build</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        schema</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">create_table_from_entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">if_not_exists</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token namespace">log</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token macro property">info!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"{stmt}"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">execute</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">stmt</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Ok</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>This is especially handy for SQLite, where the app owns the database schema. For other databases, you'd probably use the <a href="https://www.sea-ql.org/SeaORM/docs/next/migration/setting-up-migration/" target="_blank" rel="noopener noreferrer">SeaORM migration system</a>.</p>
<p>Step 3, insert the data into database:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">loop</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> message </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> consumer</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">next</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> payload </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> message</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">message</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> json </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> payload</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">as_str</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> item</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Item</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token namespace">serde_json</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">from_str</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">json</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">mut</span><span class="token plain"> spread </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> item</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">spread</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into_active_model</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    spread</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">id </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">NotSet</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// let the db assign primary key</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    spread</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">save</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>In a few lines of code, we:</p>
<ol>
<li>receive the message from Redis</li>
<li>decode the message as JSON</li>
<li>convert the message into a SeaORM Model</li>
<li>insert the Model into database</li>
</ol>
<p>Run the <a href="https://github.com/SeaQL/sea-streamer/tree/main/examples/sea-orm-sink" target="_blank" rel="noopener noreferrer"><code>sea-orm-sink</code></a> app in another terminal:</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">$ cd examples/sea-orm-sink</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">$ RUST_LOG=info cargo run</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">[INFO  sea_streamer_sea_orm_sink] CREATE TABLE IF NOT EXISTS "event" ( "id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "timestamp" varchar NOT NULL, "bid" varchar NOT NULL, "ask" varchar NOT NULL, "bid_vol" varchar NOT NULL, "ask_vol" varchar NOT NULL )</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">[INFO  sea_streamer_sea_orm_sink] {"spread":{"bid":"1.25495","ask":"1.25513","timestamp":"2024-05-05T16:31:00.961214","bid_vol":"61.50588918","ask_vol":"787.90883861"},"channel_name":"spread","pair":"GBP/USD"}</span><br></span></code></pre></div></div>
<p>That's it! Now you can inspect the data with your favourite database GUI and write some SQL queries:</p>
<img alt="screenshot of SQLite database" src="https://www.sea-ql.org/blog/img/2024-05-05-redis-kafka-data-sink-sqlite.png">
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://www.sea-ql.org/blog/2024-05-05-redis-kafka-data-sink/#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion">​</a></h2>
<p>In this article, we covered:</p>
<ol>
<li>Micro-services architecture in stream processing</li>
<li>Async real-time programming in Rust</li>
<li>The awesomeness of the SeaQL and Rust ecosystem<sup><a href="https://www.sea-ql.org/blog/2024-05-05-redis-kafka-data-sink/#user-content-fn-2-870cc4" id="user-content-fnref-2-870cc4" data-footnote-ref="true" aria-describedby="footnote-label">2</a></sup></li>
</ol>
<p>Here are a few suggestions how you can take it from here:</p>
<ol>
<li>Stream the data to a "big database" like MySQL or Postgres</li>
<li>Subscribe to more streams and sink to more tables</li>
<li>Buffer the events and insert the data in batches to achieve higher throughput, further reads:<!-- -->
<ul>
<li><a href="https://github.com/SeaQL/sea-streamer/blob/main/examples/src/bin/buffered.rs" target="_blank" rel="noopener noreferrer">https://github.com/SeaQL/sea-streamer/blob/main/examples/src/bin/buffered.rs</a></li>
<li><a href="https://github.com/SeaQL/FireDBG.for.Rust/blob/main/indexer/src/main.rs" target="_blank" rel="noopener noreferrer">https://github.com/SeaQL/FireDBG.for.Rust/blob/main/indexer/src/main.rs</a></li>
</ul>
</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="rustacean-sticker-pack-">Rustacean Sticker Pack 🦀<a href="https://www.sea-ql.org/blog/2024-05-05-redis-kafka-data-sink/#rustacean-sticker-pack-" class="hash-link" aria-label="Direct link to Rustacean Sticker Pack 🦀" title="Direct link to Rustacean Sticker Pack 🦀">​</a></h2>
<p>The Rustacean Sticker Pack is the perfect way to express your passion for Rust.
Our stickers are made with a premium water-resistant vinyl with a unique matte finish.
Stick them on your laptop, notebook, or any gadget to show off your love for Rust!</p>
<p>Moreover, all proceeds contributes directly to the ongoing development of SeaQL projects.</p>
<p>Sticker Pack Contents:</p>
<ul>
<li>Logo of SeaQL projects: SeaQL, SeaORM, SeaQuery, Seaography, FireDBG</li>
<li>Mascot of SeaQL: Terres the Hermit Crab</li>
<li>Mascot of Rust: Ferris the Crab</li>
<li>The Rustacean word</li>
</ul>
<p><a href="https://www.sea-ql.org/sticker-pack/" target="_blank" rel="noopener noreferrer">Support SeaQL and get a Sticker Pack!</a></p>
<a href="https://www.sea-ql.org/sticker-pack/"><img style="border-radius:25px" alt="Rustacean Sticker Pack by SeaQL" src="https://www.sea-ql.org/static/sticker-pack-1s.jpg"></a>
<!-- -->
<section data-footnotes="true" class="footnotes"><h2 class="anchor anchorWithStickyNavbar_LWe7 sr-only" id="footnote-label">Footnotes<a href="https://www.sea-ql.org/blog/2024-05-05-redis-kafka-data-sink/#footnote-label" class="hash-link" aria-label="Direct link to Footnotes" title="Direct link to Footnotes">​</a></h2>
<ol>
<li id="user-content-fn-1-870cc4">
<p>via <a href="https://www.sea-ql.org/SeaORM-X/" target="_blank" rel="noopener noreferrer">SeaORM X</a> <a href="https://www.sea-ql.org/blog/2024-05-05-redis-kafka-data-sink/#user-content-fnref-1-870cc4" data-footnote-backref="" aria-label="Back to reference 1" class="data-footnote-backref">↩</a></p>
</li>
<li id="user-content-fn-2-870cc4">
<p><a href="https://www.sea-ql.org/SeaStreamer/docs/introduction/intro-to-streams/#why-rust" target="_blank" rel="noopener noreferrer">Why Rust?</a> <a href="https://www.sea-ql.org/blog/2024-05-05-redis-kafka-data-sink/#user-content-fnref-2-870cc4" data-footnote-backref="" aria-label="Back to reference 2" class="data-footnote-backref">↩</a></p>
</li>
</ol>
</section>]]></content>
        <author>
            <name>Chris Tsang</name>
            <uri>https://github.com/tyt2y3</uri>
        </author>
        <category label="news" term="news"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[What's new in SeaORM 1.0-rc.x]]></title>
        <id>https://www.sea-ql.org/blog/2024-04-08-whats-new-in-seaorm-1.0-rc.x/</id>
        <link href="https://www.sea-ql.org/blog/2024-04-08-whats-new-in-seaorm-1.0-rc.x/"/>
        <updated>2024-04-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This blog post summarizes the new features and enhancements introduced in SeaORM 1.0-rc.x:]]></summary>
        <content type="html"><![CDATA[<img alt="SeaORM 1.0-rc Banner" src="https://www.sea-ql.org/blog/img/SeaORM%201.0-rc%20Banner.png">
<p>This blog post summarizes the new features and enhancements introduced in SeaORM <code>1.0-rc.x</code>:</p>
<ul>
<li><a href="https://github.com/SeaQL/sea-orm/releases/tag/1.0.0-rc.1" target="_blank" rel="noopener noreferrer">1.0.0-rc.1</a></li>
<li><a href="https://github.com/SeaQL/sea-orm/releases/tag/1.0.0-rc.2" target="_blank" rel="noopener noreferrer">1.0.0-rc.2</a></li>
<li><a href="https://github.com/SeaQL/sea-orm/releases/tag/1.0.0-rc.3" target="_blank" rel="noopener noreferrer">1.0.0-rc.3</a></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="new-features">New Features<a href="https://www.sea-ql.org/blog/2024-04-08-whats-new-in-seaorm-1.0-rc.x/#new-features" class="hash-link" aria-label="Direct link to New Features" title="Direct link to New Features">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="refreshed-migration-schema-definition">Refreshed migration schema definition<a href="https://www.sea-ql.org/blog/2024-04-08-whats-new-in-seaorm-1.0-rc.x/#refreshed-migration-schema-definition" class="hash-link" aria-label="Direct link to Refreshed migration schema definition" title="Direct link to Refreshed migration schema definition">​</a></h3>
<p><a href="https://github.com/SeaQL/sea-orm/pull/2099" target="_blank" rel="noopener noreferrer">#2099</a> We are aware that SeaORM's migration scripts can sometimes look verbose. Thanks to the clever design made by Loco, we've refreshed the schema definition syntax.</p>
<p>An old migration script looks like this:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[async_trait::async_trait]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">impl</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">MigrationTrait</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Migration</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">up</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> manager</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token class-name" style="color:rgb(38, 127, 153)">SchemaManager</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Result</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DbErr</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        manager</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">create_table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                </span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">create</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Users</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">if_not_exists</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                        </span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Users</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">integer</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">not_null</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">auto_increment</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">primary_key</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Users</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Pid</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">uuid</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">not_null</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Users</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Email</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">not_null</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unique_key</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token comment" style="color:rgb(0, 128, 0)">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>Now, using the new schema helpers, you can define the schema with a simplified syntax!</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)">// Remember to import `sea_orm_migration::schema::*`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">use</span><span class="token plain"> </span><span class="token namespace">sea_orm_migration</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token namespace">prelude</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token operator" style="color:rgb(0, 0, 0)">*</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token namespace">schema</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token operator" style="color:rgb(0, 0, 0)">*</span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(DeriveMigrationName)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Migration</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[async_trait::async_trait]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">impl</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">MigrationTrait</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Migration</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">up</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> manager</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token class-name" style="color:rgb(38, 127, 153)">SchemaManager</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Result</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DbErr</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        manager</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">create_table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                </span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">create</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Users</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">if_not_exists</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token function" style="color:rgb(0, 0, 255)">pk_auto</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Users</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// Primary key with auto-increment</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token function" style="color:rgb(0, 0, 255)">uuid</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Users</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Pid</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// UUID column</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token function" style="color:rgb(0, 0, 255)">string_uniq</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Users</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Email</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// String column with unique and not null constraint</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token function" style="color:rgb(0, 0, 255)">string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Users</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Password</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// String column</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token function" style="color:rgb(0, 0, 255)">string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Users</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ApiKey</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">unique_key</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token function" style="color:rgb(0, 0, 255)">string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Users</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token function" style="color:rgb(0, 0, 255)">string_null</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Users</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ResetToken</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// Nullable string column</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token function" style="color:rgb(0, 0, 255)">timestamp_null</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Users</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">ResetSentAt</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// Nullable timestamp column</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token function" style="color:rgb(0, 0, 255)">string_null</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Users</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">EmailVerificationToken</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token function" style="color:rgb(0, 0, 255)">timestamp_null</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Users</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">EmailVerificationSentAt</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token function" style="color:rgb(0, 0, 255)">timestamp_null</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Users</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">EmailVerifiedAt</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_owned</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<p>There are three variants for each commonly used column type:</p>
<ul>
<li><code>&lt;COLUMN_TYPE&gt;()</code> helper function, e.g. <code>string()</code>, define a non-null string column</li>
<li><code>&lt;COLUMN_TYPE&gt;_null()</code> helper function, e.g. <code>string_null()</code>, define a nullable string column</li>
<li><code>&lt;COLUMN_TYPE&gt;_uniq()</code> helper function, e.g. <code>string_uniq()</code>, define a non-null and unique string column</li>
</ul>
<p>The new schema helpers can be used by importing <code>sea_orm_migration::schema::*</code>. The migration library is fully backward compatible, so there is no rush to migrate old scripts. The new syntax is recommended for new scripts, and all examples in the SeaORM repository have been updated for demonstration. For advanced use cases, the old SeaQuery syntax can still be used.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="reworked-sqlite-type-mappings">Reworked SQLite Type Mappings<a href="https://www.sea-ql.org/blog/2024-04-08-whats-new-in-seaorm-1.0-rc.x/#reworked-sqlite-type-mappings" class="hash-link" aria-label="Direct link to Reworked SQLite Type Mappings" title="Direct link to Reworked SQLite Type Mappings">​</a></h3>
<p><a href="https://github.com/SeaQL/sea-orm/pull/2077" target="_blank" rel="noopener noreferrer">sea-orm#2077</a> <a href="https://github.com/SeaQL/sea-query/pull/735" target="_blank" rel="noopener noreferrer">sea-query#735</a> <a href="https://github.com/SeaQL/sea-schema/pull/117" target="_blank" rel="noopener noreferrer">sea-schema#117</a> We've reworked the type mappings for SQLite across the SeaQL ecosystem, such that SeaQuery and SeaSchema are now reciprocal to each other. Migrations written with SeaQuery can be rediscovered by <code>sea-orm-cli</code> and generate compatible entities! In other words, the roundtrip is complete.</p>
<p>Data types will be mapped to SQLite types with a custom naming scheme following SQLite's affinity rule:</p>
<ul>
<li><code>INTEGER</code>: <code>integer</code>, <code>tiny_integer</code>, <code>small_integer</code>, <code>big_integer</code> and <code>boolean</code> are stored as <code>integer</code></li>
<li><code>REAL</code>: <code>float</code>, <code>double</code>, <code>decimal</code> and <code>money</code> are stored as <code>real</code></li>
<li><code>BLOB</code>: <code>blob</code> and <code>varbinary_blob</code> are stored as <code>blob</code></li>
<li><code>TEXT</code>: all other data types are stored as <code>text</code>, including <code>string</code>, <code>char</code>, <code>text</code>, <code>json</code>, <code>uuid</code>, <code>date</code>, <code>time</code>, <code>datetime</code>, <code>timestamp</code>, etc.</li>
</ul>
<p>To illustrate,</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">create</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Alias</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"strange"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Alias</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"id"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">integer</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">not_null</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">auto_increment</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">primary_key</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Alias</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"int1"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">integer</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Alias</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"int2"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">tiny_integer</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Alias</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"int3"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">small_integer</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Alias</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"int4"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">big_integer</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Alias</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"string1"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Alias</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"string2"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">string_len</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">24</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Alias</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"char1"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">char</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Alias</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"char2"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">char_len</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">24</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Alias</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"text_col"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">text</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Alias</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"json_col"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">json</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Alias</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"uuid_col"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">uuid</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Alias</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"decimal1"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">decimal</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Alias</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"decimal2"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">decimal_len</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">12</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">4</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Alias</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"money1"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">money</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Alias</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"money2"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">money_len</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">12</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">4</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Alias</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"float_col"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">float</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Alias</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"double_col"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">double</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Alias</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"date_col"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">date</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Alias</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"time_col"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">time</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Alias</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"datetime_col"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">date_time</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Alias</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"boolean_col"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">boolean</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Alias</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"binary2"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">binary_len</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">1024</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Alias</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"binary3"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">var_binary</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">1024</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">SqliteQueryBuilder</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token string" style="color:rgb(163, 21, 21)">r#"CREATE TABLE "strange" ("#</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token string" style="color:rgb(163, 21, 21)">r#""id" integer NOT NULL PRIMARY KEY AUTOINCREMENT,"#</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token string" style="color:rgb(163, 21, 21)">r#""int1" integer,"#</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token string" style="color:rgb(163, 21, 21)">r#""int2" tinyint,"#</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token string" style="color:rgb(163, 21, 21)">r#""int3" smallint,"#</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token string" style="color:rgb(163, 21, 21)">r#""int4" bigint,"#</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token string" style="color:rgb(163, 21, 21)">r#""string1" varchar,"#</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token string" style="color:rgb(163, 21, 21)">r#""string2" varchar(24),"#</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token string" style="color:rgb(163, 21, 21)">r#""char1" char,"#</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token string" style="color:rgb(163, 21, 21)">r#""char2" char(24),"#</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token string" style="color:rgb(163, 21, 21)">r#""text_col" text,"#</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token string" style="color:rgb(163, 21, 21)">r#""json_col" json_text,"#</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token string" style="color:rgb(163, 21, 21)">r#""uuid_col" uuid_text,"#</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token string" style="color:rgb(163, 21, 21)">r#""decimal1" real,"#</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token string" style="color:rgb(163, 21, 21)">r#""decimal2" real(12, 4),"#</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token string" style="color:rgb(163, 21, 21)">r#""money1" real_money,"#</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token string" style="color:rgb(163, 21, 21)">r#""money2" real_money(12, 4),"#</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token string" style="color:rgb(163, 21, 21)">r#""float_col" float,"#</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token string" style="color:rgb(163, 21, 21)">r#""double_col" double,"#</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token string" style="color:rgb(163, 21, 21)">r#""date_col" date_text,"#</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token string" style="color:rgb(163, 21, 21)">r#""time_col" time_text,"#</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token string" style="color:rgb(163, 21, 21)">r#""datetime_col" datetime_text,"#</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token string" style="color:rgb(163, 21, 21)">r#""boolean_col" boolean,"#</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token string" style="color:rgb(163, 21, 21)">r#""binary2" blob(1024),"#</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token string" style="color:rgb(163, 21, 21)">r#""binary3" varbinary_blob(1024)"#</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token string" style="color:rgb(163, 21, 21)">r#")"#</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">join</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">" "</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<p>The full type mapping table is <a href="https://docs.rs/sea-query/0.31.0-rc.4/sea_query/table/enum.ColumnType.html" target="_blank" rel="noopener noreferrer">documented here</a>:</p>
<table><thead><tr><th>ColumnType</th><th>MySQL data type</th><th>PostgreSQL data type</th><th>SQLite data type</th></tr></thead><tbody><tr><td>Char</td><td>char</td><td>char</td><td>char</td></tr><tr><td>String</td><td>varchar</td><td>varchar</td><td>varchar</td></tr><tr><td>Text</td><td>text</td><td>text</td><td>text</td></tr><tr><td>TinyInteger</td><td>tinyint</td><td>smallint</td><td>tinyint</td></tr><tr><td>SmallInteger</td><td>smallint</td><td>smallint</td><td>smallint</td></tr><tr><td>Integer</td><td>int</td><td>integer</td><td>integer</td></tr><tr><td>BigInteger</td><td>bigint</td><td>bigint</td><td>integer</td></tr><tr><td>TinyUnsigned</td><td>tinyint unsigned</td><td>smallint</td><td>tinyint</td></tr><tr><td>SmallUnsigned</td><td>smallint unsigned</td><td>smallint</td><td>smallint</td></tr><tr><td>Unsigned</td><td>int unsigned</td><td>integer</td><td>integer</td></tr><tr><td>BigUnsigned</td><td>bigint unsigned</td><td>bigint</td><td>integer</td></tr><tr><td>Float</td><td>float</td><td>real</td><td>float</td></tr><tr><td>Double</td><td>double</td><td>double precision</td><td>double</td></tr><tr><td>Decimal</td><td>decimal</td><td>decimal</td><td>real</td></tr><tr><td>DateTime</td><td>datetime</td><td>timestamp without time zone</td><td>datetime_text</td></tr><tr><td>Timestamp</td><td>timestamp</td><td>timestamp</td><td>timestamp_text</td></tr><tr><td>TimestampWithTimeZone</td><td>timestamp</td><td>timestamp with time zone</td><td>timestamp_with_timezone_text</td></tr><tr><td>Time</td><td>time</td><td>time</td><td>time_text</td></tr><tr><td>Date</td><td>date</td><td>date</td><td>date_text</td></tr><tr><td>Year</td><td>year</td><td>N/A</td><td>N/A</td></tr><tr><td>Interval</td><td>N/A</td><td>interval</td><td>N/A</td></tr><tr><td>Binary</td><td>binary</td><td>bytea</td><td>blob</td></tr><tr><td>VarBinary</td><td>varbinary</td><td>bytea</td><td>varbinary_blob</td></tr><tr><td>Bit</td><td>bit</td><td>bit</td><td>N/A</td></tr><tr><td>VarBit</td><td>bit</td><td>varbit</td><td>N/A</td></tr><tr><td>Boolean</td><td>bool</td><td>bool</td><td>boolean</td></tr><tr><td>Money</td><td>decimal</td><td>money</td><td>real_money</td></tr><tr><td>Json</td><td>json</td><td>json</td><td>json_text</td></tr><tr><td>JsonBinary</td><td>json</td><td>jsonb</td><td>jsonb_text</td></tr><tr><td>Uuid</td><td>binary(16)</td><td>uuid</td><td>uuid_text</td></tr><tr><td>Enum</td><td>ENUM(...)</td><td>ENUM_NAME</td><td>enum_text</td></tr><tr><td>Array</td><td>N/A</td><td>DATA_TYPE[]</td><td>N/A</td></tr><tr><td>Cidr</td><td>N/A</td><td>cidr</td><td>N/A</td></tr><tr><td>Inet</td><td>N/A</td><td>inet</td><td>N/A</td></tr><tr><td>MacAddr</td><td>N/A</td><td>macaddr</td><td>N/A</td></tr><tr><td>LTree</td><td>N/A</td><td>ltree</td><td>N/A</td></tr></tbody></table>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="enhancements">Enhancements<a href="https://www.sea-ql.org/blog/2024-04-08-whats-new-in-seaorm-1.0-rc.x/#enhancements" class="hash-link" aria-label="Direct link to Enhancements" title="Direct link to Enhancements">​</a></h2>
<ul>
<li><a href="https://github.com/SeaQL/sea-orm/pull/2137" target="_blank" rel="noopener noreferrer">#2137</a> <code>DerivePartialModel</code> macro attribute <code>entity</code> now supports <code>syn::Type</code></li>
</ul>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(DerivePartialModel)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(entity = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"&lt;entity::Model as ModelTrait&gt;::Entity"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">EntityNameNotAIdent</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(from_col = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"foo2"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    _foo</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(from_col = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"bar2"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    _bar</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<ul>
<li><a href="https://github.com/SeaQL/sea-orm/pull/2146" target="_blank" rel="noopener noreferrer">#2146</a> Added <code>RelationDef::from_alias()</code></li>
</ul>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">find</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">join_as</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token class-name" style="color:rgb(38, 127, 153)">JoinType</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">LeftJoin</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token namespace">cake_filling</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Relation</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Cake</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">def</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">rev</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            cf</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">clone</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">join</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token class-name" style="color:rgb(38, 127, 153)">JoinType</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">LeftJoin</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token namespace">cake_filling</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Relation</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Filling</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">def</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">from_alias</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">cf</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">build</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">DbBackend</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">MySql</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token string" style="color:rgb(163, 21, 21)">"SELECT `cake`.`id`, `cake`.`name` FROM `cake`"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token string" style="color:rgb(163, 21, 21)">"LEFT JOIN `cake_filling` AS `cf` ON `cake`.`id` = `cf`.`cake_id`"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token string" style="color:rgb(163, 21, 21)">"LEFT JOIN `filling` ON `cf`.`filling_id` = `filling`.`id`"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">join</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">" "</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<ul>
<li><a href="https://github.com/SeaQL/sea-orm/pull/1665" target="_blank" rel="noopener noreferrer">#1665</a> [sea-orm-macro] Qualify traits in <code>DeriveActiveModel</code> macro</li>
<li><a href="https://github.com/SeaQL/sea-orm/pull/2064" target="_blank" rel="noopener noreferrer">#2064</a> [sea-orm-cli] Fix <code>migrate generate</code> on empty <code>mod.rs</code> files</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="breaking-changes">Breaking Changes<a href="https://www.sea-ql.org/blog/2024-04-08-whats-new-in-seaorm-1.0-rc.x/#breaking-changes" class="hash-link" aria-label="Direct link to Breaking Changes" title="Direct link to Breaking Changes">​</a></h2>
<ul>
<li><a href="https://github.com/SeaQL/sea-orm/pull/2145" target="_blank" rel="noopener noreferrer">#2145</a> Renamed <code>ConnectOptions::pool_options()</code> to <code>ConnectOptions::sqlx_pool_options()</code></li>
<li><a href="https://github.com/SeaQL/sea-orm/pull/2145" target="_blank" rel="noopener noreferrer">#2145</a> Made <code>sqlx_common</code> private, hiding <code>sqlx_error_to_xxx_err</code></li>
<li>MySQL <code>money</code> type maps to <code>decimal</code></li>
<li>MySQL <code>blob</code> types moved to <code>extension::mysql::MySqlType</code>; <code>ColumnDef::blob()</code> now takes no parameters</li>
</ul>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">create</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">BinaryType</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">BinaryType</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">BinaryLen</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">binary_len</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">BinaryType</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Binary</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">binary</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">BinaryType</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Blob</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">custom</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">MySqlType</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Blob</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">BinaryType</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">TinyBlob</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">custom</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">MySqlType</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">TinyBlob</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">BinaryType</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">MediumBlob</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">custom</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">MySqlType</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">MediumBlob</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">ColumnDef</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">new</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">BinaryType</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">LongBlob</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">custom</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">MySqlType</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">LongBlob</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_string</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">MysqlQueryBuilder</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token string" style="color:rgb(163, 21, 21)">"CREATE TABLE `binary_type` ("</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token string" style="color:rgb(163, 21, 21)">"`binlen` binary(32),"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token string" style="color:rgb(163, 21, 21)">"`bin` binary(1),"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token string" style="color:rgb(163, 21, 21)">"`b` blob,"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token string" style="color:rgb(163, 21, 21)">"`tb` tinyblob,"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token string" style="color:rgb(163, 21, 21)">"`mb` mediumblob,"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token string" style="color:rgb(163, 21, 21)">"`lb` longblob"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token string" style="color:rgb(163, 21, 21)">")"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">join</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">" "</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<ul>
<li><code>ColumnDef::binary()</code> sets column type as <code>binary</code> with default length of <code>1</code></li>
<li>Removed <code>BlobSize</code> enum</li>
<li>Added <code>StringLen</code> to represent length of <code>varchar</code> / <code>varbinary</code></li>
</ul>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)">/// Length for var-char/binary; default to 255</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">enum</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">StringLen</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">/// String size</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">N</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token keyword" style="color:rgb(0, 0, 255)">u32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Max</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[default]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">None</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<ul>
<li><code>ValueType::columntype()</code> of <code>Vec&lt;u8&gt;</code> maps to <code>VarBinary(StringLen::None)</code></li>
<li><code>ValueType::columntype()</code> of <code>String</code> maps to <code>String(StringLen::None)</code></li>
<li><code>ColumnType::Bit</code> maps to <code>bit</code> for Postgres</li>
<li><code>ColumnType::Binary</code> and <code>ColumnType::VarBinary</code> map to <code>bytea</code> for Postgres</li>
<li><code>Value::Decimal</code> and <code>Value::BigDecimal</code> map to <code>real</code> for SQLite</li>
<li><code>ColumnType::Year(Option&lt;MySqlYear&gt;)</code> changed to <code>ColumnType::Year</code></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="upgrades">Upgrades<a href="https://www.sea-ql.org/blog/2024-04-08-whats-new-in-seaorm-1.0-rc.x/#upgrades" class="hash-link" aria-label="Direct link to Upgrades" title="Direct link to Upgrades">​</a></h2>
<ul>
<li>Upgrade <code>sea-query</code> to <code>0.31.0-rc.3</code></li>
<li>Upgrade <code>sea-schema</code> to <code>0.15.0-rc.4</code></li>
<li>Upgrade <code>sea-query-binder</code> to <code>0.6.0-rc.1</code></li>
<li><a href="https://github.com/SeaQL/sea-orm/pull/2088" target="_blank" rel="noopener noreferrer">#2088</a> Upgrade <code>strum</code> to <code>0.26</code></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="house-keeping">House Keeping<a href="https://www.sea-ql.org/blog/2024-04-08-whats-new-in-seaorm-1.0-rc.x/#house-keeping" class="hash-link" aria-label="Direct link to House Keeping" title="Direct link to House Keeping">​</a></h2>
<ul>
<li><a href="https://github.com/SeaQL/sea-orm/pull/2140" target="_blank" rel="noopener noreferrer">#2140</a> Improved Actix example to return 404 not found on unexpected inputs</li>
<li><a href="https://github.com/SeaQL/sea-orm/pull/2154" target="_blank" rel="noopener noreferrer">#2154</a> Deprecated Actix v3 example</li>
<li><a href="https://github.com/SeaQL/sea-orm/pull/2136" target="_blank" rel="noopener noreferrer">#2136</a> Re-enabled <code>rocket_okapi</code> example</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="release-planning">Release Planning<a href="https://www.sea-ql.org/blog/2024-04-08-whats-new-in-seaorm-1.0-rc.x/#release-planning" class="hash-link" aria-label="Direct link to Release Planning" title="Direct link to Release Planning">​</a></h2>
<p>In the <a href="https://www.sea-ql.org/blog/2024-01-23-whats-new-in-seaorm-0.12.x/#release-planning" target="_blank" rel="noopener noreferrer">previous release</a> of SeaORM, we stated that we want our next release to be <code>1.0</code>. We are indeed very close to <code>1.0</code> now!</p>
<p>While <code>0.12</code> will still be maintained before <code>1.0</code> get finalized, you are welcome to try out <code>1.0-rc.x</code> today! There will still be a few minor but still technically breaking changes:</p>
<ol>
<li><a href="https://github.com/SeaQL/sea-orm/pull/2185" target="_blank" rel="noopener noreferrer">#2185</a> Adding trait const <code>ARITY</code> to <code>PrimaryKeyTrait</code>, allowing users to write better generic code</li>
<li><a href="https://github.com/SeaQL/sea-orm/pull/2186" target="_blank" rel="noopener noreferrer">#2186</a> Associating <code>ActiveModel</code> to <code>EntityTrait</code>, allowing users to extend the behaviour of Entities</li>
</ol>
<p>Now is also the perfect time for you to propose breaking changes that'd have long term impact to SeaORM. After the stablization, we hope that SeaORM can offer a stable API surface that developers can use in production for the years to come.</p>
<p>We'd not have more than 2 major releases in a year, and each major release will be maintained for at least 1 year. It's still tentative, but that's what we have in mind for now. Moreoever, it will actually allow us to ship new features more frequently!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="sql-server-support">SQL Server Support<a href="https://www.sea-ql.org/blog/2024-04-08-whats-new-in-seaorm-1.0-rc.x/#sql-server-support" class="hash-link" aria-label="Direct link to SQL Server Support" title="Direct link to SQL Server Support">​</a></h2>
<p>We've been planning <a href="https://www.sea-ql.org/SeaORM-X/" target="_blank" rel="noopener noreferrer">SQL Server for SeaORM</a> for a while, but it was put aside in 2023 (which I regretted). Anyway SQL Server support is coming soon! It will first be offered as a closed beta to our partners. If you are interested, please join our <a href="https://forms.office.com/r/1MuRPJmYBR" target="_blank" rel="noopener noreferrer">waiting list</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="sponsor">Sponsor<a href="https://www.sea-ql.org/blog/2024-04-08-whats-new-in-seaorm-1.0-rc.x/#sponsor" class="hash-link" aria-label="Direct link to Sponsor" title="Direct link to Sponsor">​</a></h2>
<p>If you feel generous, a small donation will be greatly appreciated, and goes a long way towards sustaining the organization.</p>
<p>A big shout out to our <a href="https://github.com/sponsors/SeaQL" target="_blank" rel="noopener noreferrer">sponsors</a> 😇:</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="gold-sponsors">Gold Sponsors<a href="https://www.sea-ql.org/blog/2024-04-08-whats-new-in-seaorm-1.0-rc.x/#gold-sponsors" class="hash-link" aria-label="Direct link to Gold Sponsors" title="Direct link to Gold Sponsors">​</a></h4>
<a href="https://osmos.io/"><img src="https://www.sea-ql.org/static/sponsors/Osmos.svg#light" width="238"><img src="https://www.sea-ql.org/static/sponsors/Osmos-dark.svg#dark" width="238"></a>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="github-sponsors">GitHub Sponsors<a href="https://www.sea-ql.org/blog/2024-04-08-whats-new-in-seaorm-1.0-rc.x/#github-sponsors" class="hash-link" aria-label="Direct link to GitHub Sponsors" title="Direct link to GitHub Sponsors">​</a></h4>
<div class="row"><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/tugascript"><img src="https://avatars.githubusercontent.com/u/64930104?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Afonso Barracha</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/shanesveller"><img src="https://avatars.githubusercontent.com/u/831?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Shane Sveller</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/deansheather"><img src="https://avatars.githubusercontent.com/u/11241812?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Dean Sheather</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/marcusbuffett"><img src="https://avatars.githubusercontent.com/u/1834328?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Marcus Buffett</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/reneklacan"><img src="https://avatars.githubusercontent.com/u/1935686?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>René Klačan</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/Iceapinan"><img src="https://avatars.githubusercontent.com/u/2698243?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Apinan I.</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/ktanaka101"><img src="https://avatars.githubusercontent.com/u/10344925?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Kentaro Tanaka</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/siketyan"><img src="https://avatars.githubusercontent.com/u/12772118?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Natsuki Ikeguchi</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/mmuellersoppart"><img src="https://avatars.githubusercontent.com/u/16762461?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Marlon Mueller-Soppart</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/gitmalong"><img src="https://avatars.githubusercontent.com/u/18363591?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>ul</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/yuly3"><img src="https://avatars.githubusercontent.com/u/25814001?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>MasakiMiyazaki</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/manfredcml"><img src="https://avatars.githubusercontent.com/u/27536502?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Manfred Lee</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/kallydev"><img src="https://avatars.githubusercontent.com/u/36319157?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>KallyDev</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/dsgallups"><img src="https://avatars.githubusercontent.com/u/44790295?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Daniel Gallups</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/caido"><img src="https://avatars.githubusercontent.com/u/78991750?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Caido</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/Coolpany-SE"><img src="https://avatars.githubusercontent.com/u/96304487?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Coolpany SE</p></div></div></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="rustacean-sticker-pack-">Rustacean Sticker Pack 🦀<a href="https://www.sea-ql.org/blog/2024-04-08-whats-new-in-seaorm-1.0-rc.x/#rustacean-sticker-pack-" class="hash-link" aria-label="Direct link to Rustacean Sticker Pack 🦀" title="Direct link to Rustacean Sticker Pack 🦀">​</a></h2>
<p>The Rustacean Sticker Pack is the perfect way to express your passion for Rust.
Our stickers are made with a premium water-resistant vinyl with a unique matte finish.
Stick them on your laptop, notebook, or any gadget to show off your love for Rust!</p>
<p>Moreover, all proceeds contributes directly to the ongoing development of SeaQL projects.</p>
<p>Sticker Pack Contents:</p>
<ul>
<li>Logo of SeaQL projects: SeaQL, SeaORM, SeaQuery, Seaography, FireDBG</li>
<li>Mascot of SeaQL: Terres the Hermit Crab</li>
<li>Mascot of Rust: Ferris the Crab</li>
<li>The Rustacean word</li>
</ul>
<p><a href="https://www.sea-ql.org/sticker-pack/" target="_blank" rel="noopener noreferrer">Support SeaQL and get a Sticker Pack!</a></p>
<a href="https://www.sea-ql.org/sticker-pack/"><img style="border-radius:25px" alt="Rustacean Sticker Pack by SeaQL" src="https://www.sea-ql.org/static/sticker-pack-1s.jpg"></a>]]></content>
        <author>
            <name>SeaQL Team</name>
            <uri>https://github.com/SeaQL</uri>
        </author>
        <category label="news" term="news"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[What's new in SeaORM 0.12.x]]></title>
        <id>https://www.sea-ql.org/blog/2024-01-23-whats-new-in-seaorm-0.12.x/</id>
        <link href="https://www.sea-ql.org/blog/2024-01-23-whats-new-in-seaorm-0.12.x/"/>
        <updated>2024-01-23T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[It had been a while since the initial SeaORM 0.12 release. This blog post summarizes the new features and enhancements introduced in SeaORM 0.12.2 through 0.12.12!]]></summary>
        <content type="html"><![CDATA[<img alt="SeaORM 0.12 Banner" src="https://www.sea-ql.org/blog/img/SeaORM%2012%20Banner.png">
<p>It had been a while since the initial <a href="https://www.sea-ql.org/blog/2023-08-12-announcing-seaorm-0.12/" target="_blank" rel="noopener noreferrer">SeaORM 0.12 release</a>. This blog post summarizes the new features and enhancements introduced in SeaORM <a href="https://github.com/SeaQL/sea-orm/releases/tag/0.12.2" target="_blank" rel="noopener noreferrer"><code>0.12.2</code></a> through <a href="https://github.com/SeaQL/sea-orm/releases/tag/0.12.12" target="_blank" rel="noopener noreferrer"><code>0.12.12</code></a>!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="celebrating-2m-downloads-on-cratesio-">Celebrating 2M downloads on crates.io 📦<a href="https://www.sea-ql.org/blog/2024-01-23-whats-new-in-seaorm-0.12.x/#celebrating-2m-downloads-on-cratesio-" class="hash-link" aria-label="Direct link to Celebrating 2M downloads on crates.io 📦" title="Direct link to Celebrating 2M downloads on crates.io 📦">​</a></h2>
<p>We've just reached the milestone of 2,000,000 all time downloads on <a href="https://crates.io/crates/sea-orm" target="_blank" rel="noopener noreferrer">crates.io</a>. It's a testament to SeaORM's adoption in professional use. Thank you to all our users for your trust and for being a part of our community.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="new-features">New Features<a href="https://www.sea-ql.org/blog/2024-01-23-whats-new-in-seaorm-0.12.x/#new-features" class="hash-link" aria-label="Direct link to New Features" title="Direct link to New Features">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="entity-format-update">Entity format update<a href="https://www.sea-ql.org/blog/2024-01-23-whats-new-in-seaorm-0.12.x/#entity-format-update" class="hash-link" aria-label="Direct link to Entity format update" title="Direct link to Entity format update">​</a></h3>
<ul>
<li><a href="https://github.com/SeaQL/sea-orm/pull/1898" target="_blank" rel="noopener noreferrer">#1898</a> Add support for root JSON arrays (requires the <code>json-array</code> / <code>postgres-array</code> feature)! It involved an intricate type system refactor to work around the orphan rule.</li>
</ul>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Clone, Debug, PartialEq, Eq, DeriveEntityModel)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(table_name = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"json_struct_vec"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(primary_key)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(column_type = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"Json"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> struct_vec</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Vec</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token class-name" style="color:rgb(38, 127, 153)">JsonColumn</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Clone, Debug, PartialEq, Eq, Serialize, Deserialize, FromJsonQueryResult)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">JsonColumn</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> value</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<ul>
<li><a href="https://github.com/SeaQL/sea-orm/pull/2009" target="_blank" rel="noopener noreferrer">#2009</a> Added <code>comment</code> attribute for Entity; <code>create_table_from_entity</code> now supports comment on MySQL</li>
</ul>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Clone, Debug, PartialEq, Eq, DeriveEntityModel)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(table_name = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"applog"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">, comment = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"app logs"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(primary_key, comment = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"ID"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i32</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(comment = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"action"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> action</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> json</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Json</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> created_at</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DateTimeWithTimeZone</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="cursor-paginator-improvements">Cursor paginator improvements<a href="https://www.sea-ql.org/blog/2024-01-23-whats-new-in-seaorm-0.12.x/#cursor-paginator-improvements" class="hash-link" aria-label="Direct link to Cursor paginator improvements" title="Direct link to Cursor paginator improvements">​</a></h3>
<ul>
<li><a href="https://github.com/SeaQL/sea-orm/pull/2037" target="_blank" rel="noopener noreferrer">#2037</a> Added descending order to Cursor:</li>
</ul>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)">// (default behaviour) Before 5 ASC, i.e. id &lt; 5</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">mut</span><span class="token plain"> cursor </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">find</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">cursor_by</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">cursor</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">before</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">5</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    cursor</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">first</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">4</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">all</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">3</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">4</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// (new API) After 5 DESC, i.e. id &lt; 5</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">let</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">mut</span><span class="token plain"> cursor </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">find</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">cursor_by</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">cursor</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">after</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">5</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">desc</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    cursor</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">first</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">4</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">all</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">4</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">3</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<ul>
<li><a href="https://github.com/SeaQL/sea-orm/pull/1826" target="_blank" rel="noopener noreferrer">#1826</a> Added cursor support to <code>SelectTwo</code>:</li>
</ul>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)">// Join with linked relation; cursor by first table's id</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">find</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">find_also_linked</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">entity_linked</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">CakeToFillingVendor</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">cursor_by</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">before</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">10</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">first</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">all</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// Join with relation; cursor by the 2nd table's id </span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token namespace">cake</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">find</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">find_also_related</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Fruit</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">cursor_by_other</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token namespace">fruit</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Column</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">before</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">10</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">first</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">all</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="added-proxy-to-database-backend">Added "proxy" to database backend<a href="https://www.sea-ql.org/blog/2024-01-23-whats-new-in-seaorm-0.12.x/#added-proxy-to-database-backend" class="hash-link" aria-label="Direct link to Added &quot;proxy&quot; to database backend" title="Direct link to Added &quot;proxy&quot; to database backend">​</a></h3>
<p><a href="https://github.com/SeaQL/sea-orm/pull/1881" target="_blank" rel="noopener noreferrer">#1881</a>, <a href="https://github.com/SeaQL/sea-orm/pull/2000" target="_blank" rel="noopener noreferrer">#2000</a> Added "proxy" to database backend (requires feature flag <code>proxy</code>).</p>
<p>It enables the possibility of using SeaORM on edge / client-side! See the <a href="https://github.com/SeaQL/sea-orm/tree/master/examples/proxy_gluesql_example" target="_blank" rel="noopener noreferrer">GlueSQL demo</a> for an example.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="enhancements">Enhancements<a href="https://www.sea-ql.org/blog/2024-01-23-whats-new-in-seaorm-0.12.x/#enhancements" class="hash-link" aria-label="Direct link to Enhancements" title="Direct link to Enhancements">​</a></h2>
<ul>
<li><a href="https://github.com/SeaQL/sea-orm/pull/1954" target="_blank" rel="noopener noreferrer">#1954</a> [sea-orm-macro] Added <code>#[sea_orm(skip)]</code> to <code>FromQueryResult</code> derive macro</li>
</ul>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(Clone, Debug, PartialEq, Eq, Deserialize, Serialize, FromQueryResult)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">PublicUser</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">i64</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">String</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[serde(skip_serializing_if = </span><span class="token attribute attr-name string" style="color:rgb(163, 21, 21)">"Vec::is_empty"</span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[sea_orm(skip)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> something</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Something</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<ul>
<li><a href="https://github.com/SeaQL/sea-orm/pull/1598" target="_blank" rel="noopener noreferrer">#1598</a> [sea-orm-macro] Added support for Postgres arrays in <code>FromQueryResult</code> impl of <code>JsonValue</code></li>
</ul>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token comment" style="color:rgb(0, 128, 0)">// existing API:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">find_by_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">one</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Some</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Model</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"Collection 1"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        integers</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token macro property">vec!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">3</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        teas</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token macro property">vec!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token class-name" style="color:rgb(38, 127, 153)">Tea</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">BreakfastTea</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        colors</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token macro property">vec!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token class-name" style="color:rgb(38, 127, 153)">Color</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Black</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// new API:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Entity</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">find_by_id</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">into_json</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">one</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">db</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token class-name" style="color:rgb(38, 127, 153)">Some</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token macro property">json!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token string" style="color:rgb(163, 21, 21)">"id"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token string" style="color:rgb(163, 21, 21)">"name"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"Collection 1"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token string" style="color:rgb(163, 21, 21)">"integers"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token number" style="color:rgb(9, 134, 88)">1</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">2</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">3</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token string" style="color:rgb(163, 21, 21)">"teas"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token string" style="color:rgb(163, 21, 21)">"BreakfastTea"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token string" style="color:rgb(163, 21, 21)">"colors"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token number" style="color:rgb(9, 134, 88)">0</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><br></span></code></pre></div></div>
<ul>
<li><a href="https://github.com/SeaQL/sea-orm/pull/1828" target="_blank" rel="noopener noreferrer">#1828</a> [sea-orm-migration] Check if an index exists</li>
</ul>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#000000;background-color:#ffffff"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">use</span><span class="token plain"> </span><span class="token namespace">sea_orm_migration</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token namespace">prelude</span><span class="token namespace punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token operator" style="color:rgb(0, 0, 0)">*</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[derive(DeriveMigrationName)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(38, 127, 153)">Migration</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(255, 0, 0)">#[async_trait::async_trait]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">impl</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">MigrationTrait</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">for</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Migration</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">up</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> manager</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token class-name" style="color:rgb(38, 127, 153)">SchemaManager</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Result</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DbErr</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">// Make sure the index haven't been created</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token macro property">assert!</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">!</span><span class="token plain">manager</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">has_index</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"cake"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"cake_name_index"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        manager</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">create_index</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                </span><span class="token class-name" style="color:rgb(38, 127, 153)">Index</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token function" style="color:rgb(0, 0, 255)">create</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"cake_name_index"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Cake</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Table</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">col</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token class-name" style="color:rgb(38, 127, 153)">Cake</span><span class="token punctuation" style="color:rgb(4, 81, 165)">::</span><span class="token class-name" style="color:rgb(38, 127, 153)">Name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">to_owned</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token operator" style="color:rgb(0, 0, 0)">?</span><span class="token punctuation" style="color:rgb(4, 81, 165)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token class-name" style="color:rgb(38, 127, 153)">Ok</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token keyword" style="color:rgb(0, 0, 255)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(0, 0, 255)">down</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token keyword" style="color:rgb(0, 0, 255)">self</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> manager</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token class-name" style="color:rgb(38, 127, 153)">SchemaManager</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">Result</span><span class="token operator" style="color:rgb(0, 0, 0)">&lt;</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(38, 127, 153)">DbErr</span><span class="token operator" style="color:rgb(0, 0, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token comment" style="color:rgb(0, 128, 0)">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre></div></div>
<ul>
<li><a href="https://github.com/SeaQL/sea-orm/pull/2030" target="_blank" rel="noopener noreferrer">#2030</a> Improve query performance of <code>Paginator</code>'s <code>COUNT</code> query</li>
<li><a href="https://github.com/SeaQL/sea-orm/pull/2055" target="_blank" rel="noopener noreferrer">#2055</a> Added SQLx slow statements logging to <code>ConnectOptions</code></li>
<li><a href="https://github.com/SeaQL/sea-orm/pull/1867" target="_blank" rel="noopener noreferrer">#1867</a> Added <code>QuerySelect::lock_with_behavior</code></li>
<li><a href="https://github.com/SeaQL/sea-orm/pull/2002" target="_blank" rel="noopener noreferrer">#2002</a> Cast enums in <code>is_in</code> and <code>is_not_in</code></li>
<li><a href="https://github.com/SeaQL/sea-orm/pull/1999" target="_blank" rel="noopener noreferrer">#1999</a> Add source annotations to errors</li>
<li><a href="https://github.com/SeaQL/sea-orm/issues/1960" target="_blank" rel="noopener noreferrer">#1960</a> Implement <code>StatementBuilder</code> for <code>sea_query::WithQuery</code></li>
<li><a href="https://github.com/SeaQL/sea-orm/pull/1979" target="_blank" rel="noopener noreferrer">#1979</a> Added method <code>expr_as_</code> that accepts <code>self</code></li>
<li><a href="https://github.com/SeaQL/sea-orm/pull/1868" target="_blank" rel="noopener noreferrer">#1868</a> Loader: use <code>ValueTuple</code> as hash key</li>
<li><a href="https://github.com/SeaQL/sea-orm/pull/1934" target="_blank" rel="noopener noreferrer">#1934</a> [sea-orm-cli] Added <code>--enum-extra-derives</code></li>
<li><a href="https://github.com/SeaQL/sea-orm/pull/1952" target="_blank" rel="noopener noreferrer">#1952</a> [sea-orm-cli] Added <code>--enum-extra-attributes</code></li>
<li><a href="https://github.com/SeaQL/sea-orm/pull/1693" target="_blank" rel="noopener noreferrer">#1693</a> [sea-orm-cli] Support generation of related entity with composite foreign key</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="bug-fixes">Bug fixes<a href="https://www.sea-ql.org/blog/2024-01-23-whats-new-in-seaorm-0.12.x/#bug-fixes" class="hash-link" aria-label="Direct link to Bug fixes" title="Direct link to Bug fixes">​</a></h2>
<ul>
<li><a href="https://github.com/SeaQL/sea-orm/pull/1855" target="_blank" rel="noopener noreferrer">#1855</a>, <a href="https://github.com/SeaQL/sea-orm/pull/2054" target="_blank" rel="noopener noreferrer">#2054</a> [sea-orm-macro] Qualify types in <code>DeriveValueType</code> macro</li>
<li><a href="https://github.com/SeaQL/sea-orm/pull/1953" target="_blank" rel="noopener noreferrer">#1953</a> [sea-orm-cli] Fix duplicated active enum use statements on generated entities</li>
<li><a href="https://github.com/SeaQL/sea-orm/pull/1821" target="_blank" rel="noopener noreferrer">#1821</a> [sea-orm-cli] Fix entity generation for non-alphanumeric enum variants</li>
<li><a href="https://github.com/SeaQL/sea-orm/pull/2071" target="_blank" rel="noopener noreferrer">#2071</a> [sea-orm-cli] Fix entity generation for relations with composite keys</li>
<li><a href="https://github.com/SeaQL/sea-orm/issues/1800" target="_blank" rel="noopener noreferrer">#1800</a> Fixed <code>find_with_related</code> consolidation logic</li>
<li><a href="https://github.com/SeaQL/sea-orm/commit/5a6acd67312601e4dba32896600044950e20f99f" target="_blank" rel="noopener noreferrer">5a6acd67</a> Fixed <code>Loader</code> panic on empty inputs</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="upgrades">Upgrades<a href="https://www.sea-ql.org/blog/2024-01-23-whats-new-in-seaorm-0.12.x/#upgrades" class="hash-link" aria-label="Direct link to Upgrades" title="Direct link to Upgrades">​</a></h2>
<ul>
<li><a href="https://github.com/SeaQL/sea-orm/pull/1984" target="_blank" rel="noopener noreferrer">#1984</a> Upgraded <code>axum</code> example to <code>0.7</code></li>
<li><a href="https://github.com/SeaQL/sea-orm/pull/1858" target="_blank" rel="noopener noreferrer">#1858</a> Upgraded <code>chrono</code> to <code>0.4.30</code></li>
<li><a href="https://github.com/SeaQL/sea-orm/pull/1959" target="_blank" rel="noopener noreferrer">#1959</a> Upgraded <code>rocket</code> to <code>0.5.0</code></li>
<li>Upgraded <code>sea-query</code> to <code>0.30.5</code></li>
<li>Upgraded <code>sea-schema</code> to <code>0.14.2</code></li>
<li>Upgraded <code>salvo</code> to <code>0.50</code></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="house-keeping">House Keeping<a href="https://www.sea-ql.org/blog/2024-01-23-whats-new-in-seaorm-0.12.x/#house-keeping" class="hash-link" aria-label="Direct link to House Keeping" title="Direct link to House Keeping">​</a></h2>
<ul>
<li><a href="https://github.com/SeaQL/sea-orm/pull/2057" target="_blank" rel="noopener noreferrer">#2057</a> Fix clippy warnings on 1.75</li>
<li><a href="https://github.com/SeaQL/sea-orm/pull/1811" target="_blank" rel="noopener noreferrer">#1811</a> Added test cases for <code>find_xxx_related/linked</code></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="release-planning">Release planning<a href="https://www.sea-ql.org/blog/2024-01-23-whats-new-in-seaorm-0.12.x/#release-planning" class="hash-link" aria-label="Direct link to Release planning" title="Direct link to Release planning">​</a></h2>
<p>In the <a href="https://www.sea-ql.org/blog/2023-08-12-announcing-seaorm-0.12/" target="_blank" rel="noopener noreferrer">announcement blog post</a> of SeaORM 0.12, we stated we want to reduce the frequency of breaking releases while maintaining the pace for feature updates and enhancements. I am glad to say we've accomplished that!</p>
<p>There are still a few breaking changes planned for the next major release. After some <a href="https://github.com/SeaQL/sea-orm/discussions/2031" target="_blank" rel="noopener noreferrer">discussions</a> and consideration, we decided that the next major release will be a release candidate for 1.0!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="sponsor">Sponsor<a href="https://www.sea-ql.org/blog/2024-01-23-whats-new-in-seaorm-0.12.x/#sponsor" class="hash-link" aria-label="Direct link to Sponsor" title="Direct link to Sponsor">​</a></h2>
<p>If you feel generous, a small donation will be greatly appreciated, and goes a long way towards sustaining the organization.</p>
<p>A big shout out to our <a href="https://github.com/sponsors/SeaQL" target="_blank" rel="noopener noreferrer">sponsors</a> 😇:</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="gold-sponsors">Gold Sponsors<a href="https://www.sea-ql.org/blog/2024-01-23-whats-new-in-seaorm-0.12.x/#gold-sponsors" class="hash-link" aria-label="Direct link to Gold Sponsors" title="Direct link to Gold Sponsors">​</a></h4>
<a href="https://osmos.io/"><img src="https://www.sea-ql.org/static/sponsors/Osmos.svg#light" width="238"><img src="https://www.sea-ql.org/static/sponsors/Osmos-dark.svg#dark" width="238"></a>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="github-sponsors">GitHub Sponsors<a href="https://www.sea-ql.org/blog/2024-01-23-whats-new-in-seaorm-0.12.x/#github-sponsors" class="hash-link" aria-label="Direct link to GitHub Sponsors" title="Direct link to GitHub Sponsors">​</a></h4>
<div class="row"><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/Sytten"><img src="https://avatars.githubusercontent.com/u/2366731?u=2f43900772265deac96eb7a816d28a5a48b9a8dd&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Émile Fugulin</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/tugascript"><img src="https://avatars.githubusercontent.com/u/64930104?u=1171ed4ccb6da73b52de274109077686290da3a5&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Afonso Barracha</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/shanesveller"><img src="https://avatars.githubusercontent.com/u/831?u=474c7b31ddf0a5c1a03d1142dd18a300279c644a&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Shane Sveller</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/deansheather"><img src="https://avatars.githubusercontent.com/u/11241812?u=260538c7d8b8c3c5350dba175ebb8294358441e0&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Dean Sheather</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/marcusbuffett"><img src="https://avatars.githubusercontent.com/u/1834328?u=fd066d99cf4a6333bfb3927d1c756af4bb8baf7e&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Marcus Buffett</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/reneklacan"><img src="https://avatars.githubusercontent.com/u/1935686?u=132be985351312fcf96999daef515f551a93bb0d&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>René Klačan</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/Iceapinan"><img src="https://avatars.githubusercontent.com/u/2698243?u=a852c75ac10098b9980f57af298be1399f6de66b&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>IceApinan</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/trueb2"><img src="https://avatars.githubusercontent.com/u/8592049?u=031c9ee96b47c27e3a8c485c3c0ebcd4f96120c9&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Jacob Trueb</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/ktanaka101"><img src="https://avatars.githubusercontent.com/u/10344925?u=a96d92e7cdd73f774b35fd0bc998964c07b24e29&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Kentaro Tanaka</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/siketyan"><img src="https://avatars.githubusercontent.com/u/12772118?u=1a51e0a06690e52982e7594bc7379481e65155a1&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Natsuki Ikeguchi</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/mmuellersoppart"><img src="https://avatars.githubusercontent.com/u/16762461?u=bef7454cb73c164b2d18e077e5ba6b7891aae3d2&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Marlon Mueller-Soppart</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/gitmalong"><img src="https://avatars.githubusercontent.com/u/18363591?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>ul</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/manfredcml"><img src="https://avatars.githubusercontent.com/u/27536502?u=b71636bdabbc698458b32e2ac05c5771ad41097e&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Manfred Lee</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/kallydev"><img src="https://avatars.githubusercontent.com/u/36319157?u=5be882aa4dbe7eea97b1a80a6473857369146df6&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>KallyDev</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/dsgallups"><img src="https://avatars.githubusercontent.com/u/44790295?u=d1c8d2a60930dfbe95497df7fecf52cf5d95dd5f&amp;v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Daniel Gallups</p></div></div></div></div><div class="col col--6 margin-bottom--md"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--sm" href="https://github.com/Coolpany-SE"><img src="https://avatars.githubusercontent.com/u/96304487?v=4"></a><div class="avatar__intro"><div class="avatar__name"><p>Coolpany-SE</p></div></div></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="rustacean-sticker-pack-">Rustacean Sticker Pack 🦀<a href="https://www.sea-ql.org/blog/2024-01-23-whats-new-in-seaorm-0.12.x/#rustacean-sticker-pack-" class="hash-link" aria-label="Direct link to Rustacean Sticker Pack 🦀" title="Direct link to Rustacean Sticker Pack 🦀">​</a></h2>
<p>The Rustacean Sticker Pack is the perfect way to express your passion for Rust.
Our stickers are made with a premium water-resistant vinyl with a unique matte finish.
Stick them on your laptop, notebook, or any gadget to show off your love for Rust!</p>
<p>Moreover, all proceeds contributes directly to the ongoing development of SeaQL projects.</p>
<p>Sticker Pack Contents:</p>
<ul>
<li>Logo of SeaQL projects: SeaQL, SeaORM, SeaQuery, Seaography, FireDBG</li>
<li>Mascot of SeaQL: Terres the Hermit Crab</li>
<li>Mascot of Rust: Ferris the Crab</li>
<li>The Rustacean word</li>
</ul>
<p><a href="https://www.sea-ql.org/sticker-pack/" target="_blank" rel="noopener noreferrer">Support SeaQL and get a Sticker Pack!</a></p>
<a href="https://www.sea-ql.org/sticker-pack/"><img style="border-radius:25px" alt="Rustacean Sticker Pack by SeaQL" src="https://www.sea-ql.org/static/sticker-pack-1s.jpg"></a>]]></content>
        <author>
            <name>SeaQL Team</name>
            <uri>https://github.com/SeaQL</uri>
        </author>
        <category label="news" term="news"/>
    </entry>
</feed>