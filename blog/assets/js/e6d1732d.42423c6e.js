"use strict";(self.webpackChunksea_ql_blog=self.webpackChunksea_ql_blog||[]).push([[4967],{1625:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var a=t(2874),s=t(8790),r=t(7630);const i={slug:"2021-10-01-whats-new-in-0.2.4",title:"What's new in SeaORM 0.2.4",author:"SeaQL Team",author_title:"Chris Tsang",author_url:"https://github.com/SeaQL",author_image_url:"https://www.sea-ql.org/SeaORM/img/SeaQL.png",tags:["news"]},o=void 0,l={authorsImageUrls:[void 0]},c=[{value:"Better ergonomic when working with custom select list",id:"better-ergonomic-when-working-with-custom-select-list",level:2},{value:"Rename column name &amp; column enum variant",id:"rename-column-name--column-enum-variant",level:2},{value:"<code>not</code> on a condition tree",id:"not-on-a-condition-tree",level:2},{value:"Community",id:"community",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["\ud83c\udf89 We are pleased to release SeaORM ",(0,s.jsx)(n.a,{href:"https://github.com/SeaQL/sea-orm/releases/tag/0.2.4",children:(0,s.jsx)(n.code,{children:"0.2.4"})})," today! Some feature highlights:"]}),"\n",(0,s.jsx)(n.h2,{id:"better-ergonomic-when-working-with-custom-select-list",children:"Better ergonomic when working with custom select list"}),"\n",(0,s.jsxs)(n.p,{children:["[",(0,s.jsx)(n.a,{href:"https://github.com/SeaQL/sea-orm/pull/208",children:"#208"}),"] Use ",(0,s.jsx)(n.a,{href:"https://docs.rs/sea-orm/0.2.4/sea_orm/entity/prelude/struct.Select.html#method.into_values",children:"Select::into_values"})," to quickly select a custom column list and destruct as tuple."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:'use sea_orm::{entity::*, query::*, tests_cfg::cake, DeriveColumn, EnumIter};\n\n#[derive(Copy, Clone, Debug, EnumIter, DeriveColumn)]\nenum QueryAs {\n    CakeName,\n    NumOfCakes,\n}\n\nlet res: Vec<(String, i64)> = cake::Entity::find()\n    .select_only()\n    .column_as(cake::Column::Name, QueryAs::CakeName)\n    .column_as(cake::Column::Id.count(), QueryAs::NumOfCakes)\n    .group_by(cake::Column::Name)\n    .into_values::<_, QueryAs>()\n    .all(&db)\n    .await?;\n\nassert_eq!(\n    res,\n    vec![("Chocolate Forest".to_owned(), 2i64)]\n);\n'})}),"\n",(0,s.jsx)(n.p,{children:"Contributed by:"}),"\n",(0,s.jsx)("div",{class:"col col--3 margin-bottom--md",children:(0,s.jsxs)("div",{class:"avatar",children:[(0,s.jsx)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/MuhannadAlrusayni",children:(0,s.jsx)("img",{src:"https://avatars.githubusercontent.com/u/14802524?v=4"})}),(0,s.jsx)("div",{class:"avatar__intro",children:(0,s.jsx)("div",{class:"avatar__name",children:(0,s.jsx)(n.p,{children:"Muhannad"})})})]})}),"\n",(0,s.jsx)(n.h2,{id:"rename-column-name--column-enum-variant",children:"Rename column name & column enum variant"}),"\n",(0,s.jsxs)(n.p,{children:["[",(0,s.jsx)(n.a,{href:"https://github.com/SeaQL/sea-orm/pull/209",children:"#209"}),"] Rename the column name and enum variant of a model attribute, especially helpful when the column name is a Rust keyword."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:'mod my_entity {\n    use sea_orm::entity::prelude::*;\n\n    #[derive(Clone, Debug, PartialEq, DeriveEntityModel)]\n    #[sea_orm(table_name = "my_entity")]\n    pub struct Model {\n        #[sea_orm(primary_key, enum_name = "IdentityColumn", column_name = "id")]\n        pub id: i32,\n        #[sea_orm(column_name = "type")]\n        pub type_: String,\n    }\n\n    //...\n}\n\nassert_eq!(my_entity::Column::IdentityColumn.to_string().as_str(), "id");\nassert_eq!(my_entity::Column::Type.to_string().as_str(), "type");\n'})}),"\n",(0,s.jsx)(n.p,{children:"Contributed by:"}),"\n",(0,s.jsx)("div",{class:"container",children:(0,s.jsx)("div",{class:"row",children:(0,s.jsx)("div",{class:"col col--3 margin-bottom--md",children:(0,s.jsxs)("div",{class:"avatar",children:[(0,s.jsx)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/billy1624",children:(0,s.jsx)("img",{src:"https://avatars.githubusercontent.com/u/30400950?v=4"})}),(0,s.jsx)("div",{class:"avatar__intro",children:(0,s.jsx)("div",{class:"avatar__name",children:(0,s.jsx)(n.p,{children:"Billy Chan"})})})]})})})}),"\n",(0,s.jsxs)(n.h2,{id:"not-on-a-condition-tree",children:[(0,s.jsx)(n.code,{children:"not"})," on a condition tree"]}),"\n",(0,s.jsxs)(n.p,{children:["[",(0,s.jsx)(n.a,{href:"https://github.com/SeaQL/sea-query/pull/145",children:"#145"}),"] Build a complex condition tree with ",(0,s.jsx)(n.a,{href:"https://docs.rs/sea-query/0.16.5/sea_query/query/struct.Condition.html",children:"Condition"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:'use sea_orm::{entity::*, query::*, tests_cfg::cake, sea_query::Expr, DbBackend};\n\nassert_eq!(\n    cake::Entity::find()\n        .filter(\n            Condition::all()\n                .add(\n                    Condition::all()\n                        .not()\n                        .add(Expr::val(1).eq(1))\n                        .add(Expr::val(2).eq(2))\n                )\n                .add(\n                    Condition::any()\n                        .add(Expr::val(3).eq(3))\n                        .add(Expr::val(4).eq(4))\n                )\n        )\n        .build(DbBackend::Postgres)\n        .to_string(),\n    r#"SELECT "cake"."id", "cake"."name" FROM "cake" WHERE (NOT (1 = 1 AND 2 = 2)) AND (3 = 3 OR 4 = 4)"#\n);\n'})}),"\n",(0,s.jsx)(n.p,{children:"Contributed by:"}),"\n",(0,s.jsx)("div",{class:"container",children:(0,s.jsxs)("div",{class:"row",children:[(0,s.jsx)("div",{class:"col col--3 margin-bottom--md",children:(0,s.jsxs)("div",{class:"avatar",children:[(0,s.jsx)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/nitnelave",children:(0,s.jsx)("img",{src:"https://avatars.githubusercontent.com/u/796633?v=4"})}),(0,s.jsx)("div",{class:"avatar__intro",children:(0,s.jsx)("div",{class:"avatar__name",children:(0,s.jsx)(n.p,{children:"nitnelave"})})})]})}),(0,s.jsx)("div",{class:"col col--3 margin-bottom--md",children:(0,s.jsxs)("div",{class:"avatar",children:[(0,s.jsx)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/6xzo",children:(0,s.jsx)("img",{src:"https://avatars.githubusercontent.com/u/36180574?v=4"})}),(0,s.jsx)("div",{class:"avatar__intro",children:(0,s.jsx)("div",{class:"avatar__name",children:(0,s.jsx)(n.p,{children:"6xzo"})})})]})})]})}),"\n",(0,s.jsx)(n.h2,{id:"community",children:"Community"}),"\n",(0,s.jsx)(n.p,{children:"SeaQL is a community driven project. We welcome you to participate, contribute and together build for Rust's future."}),"\n",(0,s.jsxs)(n.p,{children:["Here is the roadmap for SeaORM ",(0,s.jsx)(n.a,{href:"https://github.com/SeaQL/sea-orm/milestone/3",children:(0,s.jsx)(n.code,{children:"0.3.x"})}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},2874:e=>{e.exports=JSON.parse('{"permalink":"/blog/2021-10-01-whats-new-in-0.2.4","editUrl":"https://github.com/SeaQL/seaql.github.io/edit/master/Blog/blog/2021-10-01-whats-new-in-0.2.4.md","source":"@site/blog/2021-10-01-whats-new-in-0.2.4.md","title":"What\'s new in SeaORM 0.2.4","description":"\ud83c\udf89 We are pleased to release SeaORM 0.2.4 today! Some feature highlights:","date":"2021-10-01T00:00:00.000Z","tags":[{"inline":true,"label":"news","permalink":"/blog/tags/news"}],"readingTime":1.76,"hasTruncateMarker":false,"authors":[{"name":"SeaQL Team","title":"Chris Tsang","url":"https://github.com/SeaQL","imageURL":"https://www.sea-ql.org/SeaORM/img/SeaQL.png","key":null,"page":null}],"frontMatter":{"slug":"2021-10-01-whats-new-in-0.2.4","title":"What\'s new in SeaORM 0.2.4","author":"SeaQL Team","author_title":"Chris Tsang","author_url":"https://github.com/SeaQL","author_image_url":"https://www.sea-ql.org/SeaORM/img/SeaQL.png","tags":["news"]},"unlisted":false,"prevItem":{"title":"What\'s new in SeaORM 0.3.0","permalink":"/blog/2021-10-15-whats-new-in-0.3.0"},"nextItem":{"title":"Introducing SeaORM \ud83d\udc1a","permalink":"/blog/2021-09-20-introducing-sea-orm"}}')},7630:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var a=t(2374);const s={},r=a.createContext(s);function i(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);