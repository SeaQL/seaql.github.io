"use strict";(self.webpackChunksea_orm_pro=self.webpackChunksea_orm_pro||[]).push([[19],{5942:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>p});var a=n(6687);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),d=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=d(e.components);return a.createElement(c.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),h=d(n),p=r,u=h["".concat(c,".").concat(p)]||h[p]||f[p]||o;return n?a.createElement(u,i(i({ref:t},s),{},{components:n})):a.createElement(u,i({ref:t},s))}));function p(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=h;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var d=2;d<o;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},505:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>f,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var a=n(1308),r=(n(6687),n(5942));const o={},i="Dashboard",l={unversionedId:"site-config/dashboard",id:"site-config/dashboard",title:"Dashboard",description:"Info Card",source:"@site/docs/03-site-config/03-dashboard.md",sourceDirName:"03-site-config",slug:"/site-config/dashboard",permalink:"/preview/pr-143/sea-orm-pro/docs/site-config/dashboard",draft:!1,editUrl:"https://github.com/SeaQL/seaql.github.io/edit/master/sea-orm-pro/docs/03-site-config/03-dashboard.md",tags:[],version:"current",lastUpdatedBy:"Billy Chan",lastUpdatedAt:1740132726,formattedLastUpdatedAt:"Feb 21, 2025",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Theme",permalink:"/preview/pr-143/sea-orm-pro/docs/site-config/theme"},next:{title:"Overview",permalink:"/preview/pr-143/sea-orm-pro/docs/raw-table-config/overview"}},c={},d=[{value:"Info Card",id:"info-card",level:2},{value:"Chart",id:"chart",level:2},{value:"Fetching Chart Data",id:"fetching-chart-data",level:3},{value:"Line Chart",id:"line-chart",level:3},{value:"Datetime Picker",id:"datetime-picker",level:4},{value:"Pie Chart",id:"pie-chart",level:3},{value:"Full Spec",id:"full-spec",level:2}],s={toc:d};function f(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"dashboard"},"Dashboard"),(0,r.kt)("h2",{id:"info-card"},"Info Card"),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(5179).Z+"#light",width:"3295",height:"1714"}),"\n",(0,r.kt)("img",{src:n(6757).Z+"#dark",width:"3295",height:"1714"})),(0,r.kt)("p",null,"Setting the title of the info card."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-toml",metastring:"title=pro_admin/dashboard.toml",title:"pro_admin/dashboard.toml"},'# Title of info card section\ntitle = "SeaORM Pro"\n# Subtitle of info card section\nsubtitle = "Build professional admin panels with SeaORM Pro."\n')),(0,r.kt)("p",null,"You can add multiple info cards."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-toml",metastring:"title=pro_admin/dashboard.toml",title:"pro_admin/dashboard.toml"},'# 1st info card\n[[info.card]]\n# Title of info card\ntitle = "What is SeaORM Pro?"\n# Description of info card\ndescription = "SeaORM Pro is full-stack framework allowing you to quickly and easily launch an admin panel for your application."\n# Learn more link of info card\nlink = "https://www.sea-ql.org/sea-orm-pro/"\n\n\n# 2nd info card\n[[info.card]]\n# ...\n\n# 3rd info card\n[[info.card]]\n# ...\n')),(0,r.kt)("h2",{id:"chart"},"Chart"),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(455).Z+"#light",width:"3529",height:"1572"}),"\n",(0,r.kt)("img",{src:n(8370).Z+"#dark",width:"3529",height:"1572"})),(0,r.kt)("p",null,"There are some common configuration for both line chart and pie chart. Including the gutter size between chart, title of chart and the column span of each chart."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-toml",metastring:"title=pro_admin/dashboard.toml",title:"pro_admin/dashboard.toml"},'# Chart grid\n[[row]]\n# Row gutter\ngutter = 16\n\n\n# 1st chart\n[[row.col]]\n# Span half row\nspan = 12\n# Title of the chart\ntitle = "New Customers Per Month"\n\n[row.col.chart]\n# An unique key for fetching chart data\nchart = "new_customer_by_month"\n# Kind of chart\nkind = "line"\n# ...\n\n\n# 2nd chart\n[[row.col]]\n# Span half row\nspan = 12\n# Title of the chart\ntitle = "Sales Value of Week"\n\n[row.col.chart]\n# An unique key for fetching chart data\nchart = "sales_value_by_day"\n# Kind of chart\nkind = "line"\n# ...\n\n\n# 3rd chart\n[[row.col]]\n# Span entire row\nspan = 24\n# Title of the chart\ntitle = "Products of each Product Category"\n\n[row.col.chart]\n# An unique key for fetching chart data\nchart = "product_by_product_category"\n# Kind of chart\nkind = "pie"\n# ...\n')),(0,r.kt)("h3",{id:"fetching-chart-data"},"Fetching Chart Data"),(0,r.kt)("p",null,"A unique key, ",(0,r.kt)("inlineCode",{parentName:"p"},"chart"),", is defined for each chart to fetch chart data from the backend API. The SQL query can be found in the admin controller:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust",metastring:"title=src/controllers/admin.rs",title:"src/controllers/admin.rs"},'pub async fn dashboard(\n    _auth: auth::JWT,\n    State(ctx): State<AppContext>,\n    Json(body): Json<DashboardBody>,\n) -> Result<Response> {\n    let db = &ctx.db;\n    let data = match body.graph.as_str() {\n        "product_by_product_category" => {\n            product_category::Entity::find()\n                .select_only()\n                .column_as(Expr::expr(Expr::col((product_category::Entity, product_category::Column::Name))), DatumColumn::Key)\n                .column_as(Expr::expr(Func::cast_as(Func::count(Expr::col(Asterisk)), int_keyword(db))), DatumColumn::Val)\n                .left_join(product::Entity)\n                .group_by(Expr::col(DatumColumn::Key))\n                .order_by_desc(Expr::col(DatumColumn::Val))\n                .into_model::<Datum>()\n                .all(db)\n                .await?\n        },\n        _ => not_found()?,\n    };\n    format::json(data)\n}\n')),(0,r.kt)("h3",{id:"line-chart"},"Line Chart"),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(4153).Z+"#light",width:"3575",height:"962"}),"\n",(0,r.kt)("img",{src:n(1859).Z+"#dark",width:"3575",height:"962"})),(0,r.kt)("h4",{id:"datetime-picker"},"Datetime Picker"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Available ",(0,r.kt)("inlineCode",{parentName:"li"},"timescale"),' options: "time" / "day" / "month" / "year" / "decade".'),(0,r.kt)("li",{parentName:"ul"},"The default value of the datetime picker can be set to any exact value via ",(0,r.kt)("inlineCode",{parentName:"li"},"from_date")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"to_date")),(0,r.kt)("li",{parentName:"ul"},"Or, setting the default value dynamically based on current date: ",(0,r.kt)("inlineCode",{parentName:"li"},"default_date_range"),' can starts with "next" or "last" then follow a integer number and ends with any of "day" / "week" / "month" / "quarter" / "year"',(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"default_date_range"),' = "last 1 day", "last 7 days", "next 1 month", "next 3 years"')))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-toml",metastring:"title=pro_admin/dashboard.toml",title:"pro_admin/dashboard.toml"},'# 2nd chart\n[[row.col]]\n# Span half row\nspan = 12\n# Title of the chart\ntitle = "Sales Value of Week"\n\n[row.col.chart]\n# An unique key for fetching chart data\nchart = "sales_value_by_day"\n# Kind of chart\nkind = "line"\n# Time scale of datetime picker\ntimescale = "day"\n# Default start of datetime\nfrom_date = "2024-12-22"\n# Default end of datetime\nto_date = "2024-12-28"\n# Default dynamic date range based on current date\ndefault_date_range = "last 7 days"\n# Title of X axis\nx_axis_title = "Date"\n# Title of Y axis\ny_axis_title = "Sales"\n')),(0,r.kt)("h3",{id:"pie-chart"},"Pie Chart"),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(4434).Z+"#light",width:"1224",height:"752"}),"\n",(0,r.kt)("img",{src:n(3445).Z+"#dark",width:"1224",height:"752"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-toml",metastring:"title=pro_admin/dashboard.toml",title:"pro_admin/dashboard.toml"},'# 3rd chart\n[[row.col]]\n# Span entire row\nspan = 24\n# Title of the chart\ntitle = "Products of each Product Category"\n\n[row.col.chart]\n# An unique key for fetching chart data\nchart = "product_by_product_category"\n# Kind of chart\nkind = "pie"\n# Title of X axis\nx_axis_title = "Product Category"\n# Title of Y axis\ny_axis_title = "No. of Products"\n')),(0,r.kt)("h2",{id:"full-spec"},"Full Spec"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-toml",metastring:"title=pro_admin/dashboard.toml",title:"pro_admin/dashboard.toml"},'# Title of info card section\ntitle = "SeaORM Pro"\n# Subtitle of info card section\nsubtitle = "Build professional admin panels with SeaORM Pro."\n\n\n# 1st info card\n[[info.card]]\n# Title of info card\ntitle = "What is SeaORM Pro?"\n# Description of info card\ndescription = "SeaORM Pro is full-stack framework allowing you to quickly and easily launch an admin panel for your application."\n# Learn more link of info card\nlink = "https://www.sea-ql.org/sea-orm-pro/"\n\n\n# 2nd info card\n[[info.card]]\n# Title of info card\ntitle = "Download the Demo"\n# Description of info card\ndescription = "The source code of this demo is hosted on SeaQL/sea-orm-pro."\n# Learn more link of info card\nlink = "https://github.com/SeaQL/sea-orm-pro"\n\n\n# 3rd info card\n[[info.card]]\n# Title of info card\ntitle = "Learn More"\n# Description of info card\ndescription = "Learn how to customize the admin panel to make it your own!"\n# Learn more link of info card\nlink = "https://www.sea-ql.org/sea-orm-pro/docs/site-config/overview/"\n\n\n# Chart grid\n[[row]]\n# Row gutter\ngutter = 16\n\n\n# 1st chart\n[[row.col]]\n# Span half row\nspan = 12\n# Title of the chart\ntitle = "New Customers Per Month"\n\n[row.col.chart]\n# An unique key for fetching chart data\nchart = "new_customer_by_month"\n# Kind of chart\nkind = "line"\n# Time scale of datetime picker\ntimescale = "month"\n# Default start of datetime\nfrom_date = "2024-01"\n# Default end of datetime\nto_date = "2024-12"\n# Title of X axis\nx_axis_title = "Month"\n# Title of Y axis\ny_axis_title = "No. of Customers"\n\n\n# 2nd chart\n[[row.col]]\n# Span half row\nspan = 12\n# Title of the chart\ntitle = "Sales Value of Week"\n\n[row.col.chart]\n# An unique key for fetching chart data\nchart = "sales_value_by_day"\n# Kind of chart\nkind = "line"\n# Time scale of datetime picker\ntimescale = "day"\n# Default dynamic date range based on current date\ndefault_date_range = "last 7 days"\n# Title of X axis\nx_axis_title = "Date"\n# Title of Y axis\ny_axis_title = "Sales"\n\n\n# 3rd chart\n[[row.col]]\n# Span entire row\nspan = 24\n# Title of the chart\ntitle = "Products of each Product Category"\n\n[row.col.chart]\n# An unique key for fetching chart data\nchart = "product_by_product_category"\n# Kind of chart\nkind = "pie"\n# Title of X axis\nx_axis_title = "Product Category"\n# Title of Y axis\ny_axis_title = "No. of Products"\n')))}f.isMDXComponent=!0},8370:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/site-config-dashboard-chart-dark-2123d442034759a2283ea33ba4943a74.png"},1859:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/site-config-dashboard-chart-line-dark-ab7bdd6a8428576b6f5c972f81441b93.png"},4153:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/site-config-dashboard-chart-line-cd132b2615629958bf8aff44ec50b34a.png"},3445:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/site-config-dashboard-chart-pie-dark-6a2e5881f1acfc62fdd223ae9ef73e07.png"},4434:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/site-config-dashboard-chart-pie-c43c34954bad6ac1b202260f753908e7.png"},455:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/site-config-dashboard-chart-949cc4d41db7c3f3281fc9997bf6db3a.png"},6757:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/site-config-dashboard-info-dark-f2c9e6c8c5153e916aa6d1911ec9ed4d.png"},5179:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/site-config-dashboard-info-1cef265818621de3a8c2e7d3626d1887.png"}}]);