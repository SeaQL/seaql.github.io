"use strict";(self.webpackChunkseaography=self.webpackChunkseaography||[]).push([[6200],{7116:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"graphql-schema/data-types","title":"Data Types","description":"GraphQL only has these built-in scalar types:","source":"@site/docs/03-graphql-schema/01-data-types.md","sourceDirName":"03-graphql-schema","slug":"/graphql-schema/data-types","permalink":"/preview/pr-154/Seaography/docs/graphql-schema/data-types","draft":false,"unlisted":false,"editUrl":"https://github.com/SeaQL/seaql.github.io/edit/master/Seaography/docs/03-graphql-schema/01-data-types.md","tags":[],"version":"current","lastUpdatedBy":"Billy Chan","lastUpdatedAt":1761297220000,"sidebarPosition":1,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Project Structure","permalink":"/preview/pr-154/Seaography/docs/getting-started/project-structure"},"next":{"title":"Simple Query","permalink":"/preview/pr-154/Seaography/docs/graphql-schema/simple-query"}}');var t=s(8790),a=s(8032);const i={},l="Data Types",c={},o=[{value:"MySQL / Postgres Enums",id:"mysql--postgres-enums",level:3}];function d(e){const n={code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"data-types",children:"Data Types"})}),"\n",(0,t.jsx)(n.p,{children:"GraphQL only has these built-in scalar types:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Int"}),": A signed 32\u2010bit integer."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Float"}),": A signed double-precision floating-point value."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"String"}),": A UTF\u20108 character sequence."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Boolean"}),": ",(0,t.jsx)(n.code,{children:"true"})," or ",(0,t.jsx)(n.code,{children:"false"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The SeaORM type system supports a richer set of types, including:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Date"}),", ",(0,t.jsx)(n.code,{children:"Time"}),", ",(0,t.jsx)(n.code,{children:"Datetime"}),": will be mapped to ",(0,t.jsx)(n.code,{children:"String"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Decimal"}),", ",(0,t.jsx)(n.code,{children:"BigDecimal"}),": will be mapped to ",(0,t.jsx)(n.code,{children:"String"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Uuid"}),": will be mapped to ",(0,t.jsx)(n.code,{children:"String"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Json"}),": will be mapped to a custom scalar type ",(0,t.jsx)(n.code,{children:"Json"})]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"mysql--postgres-enums",children:"MySQL / Postgres Enums"}),"\n",(0,t.jsxs)(n.p,{children:["MySQL / Postgres enums are supported with SeaORM's ",(0,t.jsx)(n.code,{children:"ActiveEnum"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"For example, the following Rust enum would be mapped to a GraphQL enum:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:'#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]\n#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "mpaa_rating")]\npub enum MpaaRating {\n    #[sea_orm(string_value = "G")]\n    G,\n    #[sea_orm(string_value = "PG")]\n    Pg,\n    #[sea_orm(string_value = "PG-13")]\n    Pg13,\n    #[sea_orm(string_value = "R")]\n    R,\n    #[sea_orm(string_value = "NC-17")]\n    Nc17,\n}\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-graphql",children:"enum MpaaRatingEnum {\n  G\n  PG\n  PG13\n  R\n  NC17\n}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8032:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>l});var r=s(2374);const t={},a=r.createContext(t);function i(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);