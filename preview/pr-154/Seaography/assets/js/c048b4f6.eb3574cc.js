"use strict";(self.webpackChunkseaography=self.webpackChunkseaography||[]).push([[8752],{4121:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"customizations/field-names","title":"Field Names","description":"snake_case","source":"@site/docs/05-customizations/01-field-names.md","sourceDirName":"05-customizations","slug":"/customizations/field-names","permalink":"/preview/pr-154/Seaography/docs/customizations/field-names","draft":false,"unlisted":false,"editUrl":"https://github.com/SeaQL/seaql.github.io/edit/master/Seaography/docs/05-customizations/01-field-names.md","tags":[],"version":"current","lastUpdatedBy":"Billy Chan","lastUpdatedAt":1761297220000,"sidebarPosition":1,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Custom Method","permalink":"/preview/pr-154/Seaography/docs/custom-endpoints/custom-method"},"next":{"title":"Type Mappings","permalink":"/preview/pr-154/Seaography/docs/customizations/type-mappings"}}');var t=s(8790),i=s(8032);const r={},o="Field Names",l={},c=[{value:"snake_case",id:"snake_case",level:2},{value:"Plural fields",id:"plural-fields",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"field-names",children:"Field Names"})}),"\n",(0,t.jsx)(n.h2,{id:"snake_case",children:"snake_case"}),"\n",(0,t.jsxs)(n.p,{children:["Seaography supports customizing field names, in ",(0,t.jsx)(n.code,{children:"camelCase"})," (default) or ",(0,t.jsx)(n.code,{children:"snake_case"}),". You can turn on snake case with:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'title="Cargo.toml"',children:'[dependencies.seaography]\nversion = "~2.0.0-rc" # seaography version\nfeatures = ["field-snake-case"]\n'})}),"\n",(0,t.jsx)(n.p,{children:"Turning on snake case the GraphQL schema would look like the following:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-graphql",children:"type Actor {\n  actor_id: Int!\n  first_name: String!\n  last_name: String!\n  last_update: String!\n  film(\n    filters: FilmFilterInput\n    order_by: FilmOrderInput\n    pagination: PaginationInput\n  ): FilmConnection!\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"plural-fields",children:"Plural fields"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'title="Cargo.toml"',children:'[dependencies.seaography]\nversion = "~2.0.0-rc" # seaography version\nfeatures = ["field-pluralize"]\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The GraphQL schema looks like, note the ",(0,t.jsx)(n.code,{children:"actor"})," ",(0,t.jsx)(n.code,{children:"s"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-graphql",children:"actors(\n  filters: ActorFilterInput\n  having: ActorHavingInput\n  order_by: ActorOrderInput\n  pagination: PaginationInput\n): ActorsConnection!\n"})}),"\n",(0,t.jsx)(n.p,{children:"A new singular endpoint would be added:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-graphql",children:"actor(\n  id: Int!\n): Actor\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8032:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>o});var a=s(2374);const t={},i=a.createContext(t);function r(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);