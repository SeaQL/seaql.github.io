"use strict";(self.webpackChunksea_orm=self.webpackChunksea_orm||[]).push([[52634],{74168:(e,a,n)=>{n.r(a),n.d(a,{default:()=>T});var s=n(22374),t=n(5007),i=n(4317),o=n(29433);const r={heroBanner:"heroBanner_qdFl",buttons:"buttons_AeoN",homepageBanner:"homepageBanner_mBTI",homepageLogo:"homepageLogo_ewR0"};var l=n(84229);const c={features:"features_xdhU",featureSvg:"featureSvg__8YW"};var d=n(23355),m=n(88790);const h=[{title:"Async",icon:(0,m.jsx)(d.vSZ,{size:26}),description:(0,m.jsx)(m.Fragment,{children:"Relying on SQLx, SeaORM is a new library with async support from day 1."})},{title:"Dynamic",icon:(0,m.jsx)(d.UyI,{size:26}),description:(0,m.jsx)(m.Fragment,{children:"Built upon SeaQuery, SeaORM allows you to build complex dynamic queries."})},{title:"Testable",icon:(0,m.jsx)(d.mU9,{size:26}),description:(0,m.jsx)(m.Fragment,{children:"Use mock connections and/or SQLite to write tests for your application logic."})},{title:"Service Oriented",icon:(0,m.jsx)(d.dE0,{size:26}),description:(0,m.jsx)(m.Fragment,{children:"Quickly build services that join, filter, sort and paginate data in REST, GraphQL and gRPC APIs."})}];function p({icon:e,title:a,description:n}){return(0,m.jsx)("div",{className:(0,l.A)("col col--6"),children:(0,m.jsxs)("div",{style:{paddingBottom:"20px",paddingTop:"20px"},children:[(0,m.jsxs)("div",{style:{display:"flex"},children:[(0,m.jsx)("div",{style:{paddingRight:"22px"},children:e}),(0,m.jsx)("h3",{style:{fontSize:"20px",color:"var(--ifm-color-primary)"},children:a})]}),(0,m.jsx)("p",{children:n})]})})}function u(){return(0,m.jsx)("section",{className:(0,l.A)("home-section","home-section-alt",c.features),children:(0,m.jsx)("div",{className:"container",children:(0,m.jsx)("div",{className:"row",children:(0,m.jsx)("div",{className:"col col--11 col--offset-1",children:(0,m.jsx)("div",{className:"row",children:h.map(((e,a)=>(0,m.jsx)(p,{...e},a)))})})})})})}var x=n(74141),g=n(65266);const f={features:"features_SiWs",seaography:"seaography_BVQZ"};var j=n(34820),v=n(33786),y=n(56508);(void 0!==n.g?n.g:window).Prism=y.A,n(51256);const w=[{title:"Entity",code:'use sea_orm::entity::prelude::*;\n\n#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]\n#[sea_orm(table_name = "cake")]\npub struct Model {\n    #[sea_orm(primary_key)]\n    pub id: i32,\n    pub name: String,\n}\n\n#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]\npub enum Relation {\n    #[sea_orm(has_many = "super::fruit::Entity")]\n    Fruit,\n}\n\nimpl Related<super::fruit::Entity> for Entity {\n    fn to() -> RelationDef {\n        Relation::Fruit.def()\n    }\n}'},{title:"Select",code:'// find all models\nlet cakes: Vec<cake::Model> = Cake::find().all(db).await?;\n\n// find and filter\nlet chocolate: Vec<cake::Model> = Cake::find()\n    .filter(cake::Column::Name.contains("chocolate"))\n    .all(db)\n    .await?;\n\n// find one model\nlet cheese: Option<cake::Model> = Cake::find_by_id(1).one(db).await?;\nlet cheese: cake::Model = cheese.unwrap();\n\n// find related models (lazy)\nlet fruits: Vec<fruit::Model> = cheese.find_related(Fruit).all(db).await?;\n\n// find related models (eager)\nlet cake_with_fruits: Vec<(cake::Model, Vec<fruit::Model>)> =\n    Cake::find().find_with_related(Fruit).all(db).await?;'},{title:"Insert",code:'let apple = fruit::ActiveModel {\n    name: Set("Apple".to_owned()),\n    ..Default::default() // no need to set primary key\n};\n\nlet pear = fruit::ActiveModel {\n    name: Set("Pear".to_owned()),\n    ..Default::default()\n};\n\n// insert one\nlet pear = pear.insert(db).await?;\n\n// insert many\nFruit::insert_many([apple, pear]).exec(db).await?;'},{title:"Update",code:'use sea_orm::sea_query::{Expr, Value};\n\nlet pear: Option<fruit::Model> = Fruit::find_by_id(1).one(db).await?;\nlet mut pear: fruit::ActiveModel = pear.unwrap().into();\n\npear.name = Set("Sweet pear".to_owned());\n\n// update one\nlet pear: fruit::Model = pear.update(db).await?;\n\n// update many: UPDATE "fruit" SET "cake_id" = NULL WHERE "fruit"."name" LIKE \'%Apple%\'\nFruit::update_many()\n    .col_expr(fruit::Column::CakeId, Expr::value(Value::Int(None)))\n    .filter(fruit::Column::Name.contains("Apple"))\n    .exec(db)\n    .await?;'},{title:"Save",code:'let banana = fruit::ActiveModel {\n    id: NotSet,\n    name: Set("Banana".to_owned()),\n    ..Default::default()\n};\n\n// create, because primary key `id` is `NotSet`\nlet mut banana = banana.save(db).await?;\n\nbanana.name = Set("Banana Mongo".to_owned());\n\n// update, because primary key `id` is `Set`\nlet banana = banana.save(db).await?;'},{title:"Delete",code:'// delete one\nlet orange: Option<fruit::Model> = Fruit::find_by_id(1).one(db).await?;\nlet orange: fruit::Model = orange.unwrap();\nfruit::Entity::delete(orange.into_active_model())\n    .exec(db)\n    .await?;\n\n// or simply\nlet orange: Option<fruit::Model> = Fruit::find_by_id(1).one(db).await?;\nlet orange: fruit::Model = orange.unwrap();\norange.delete(db).await?;\n\n// delete many: DELETE FROM "fruit" WHERE "fruit"."name" LIKE \'Orange\'\nfruit::Entity::delete_many()\n    .filter(fruit::Column::Name.contains("Orange"))\n    .exec(db)\n    .await?;'}];function N(){const{siteConfig:{themeConfig:{prism:e={}}}}=(0,o.A)(),{colorMode:a}=(0,v.G)(),[n,t]=(0,s.useState)(!1);(0,s.useEffect)((()=>{t(!0)}),[]);const i=e.theme,r=e.darkTheme;return(0,m.jsx)("section",{className:(0,l.A)("home-section","home-section-alt",f.features),children:(0,m.jsx)("div",{className:"container",children:(0,m.jsx)("div",{className:"row",children:(0,m.jsx)("div",{className:(0,l.A)("col col--12"),children:(0,m.jsxs)("div",{className:"padding-horiz--md",children:[(0,m.jsx)("h2",{className:"text--center",children:"A quick taste of SeaORM"}),(0,m.jsx)(x.A,{className:(0,l.A)("aa"),defaultValue:w[0].title,values:w.map((({title:e,code:a})=>({label:e,value:e}))),children:w.map((({title:e,code:t},o)=>(0,m.jsx)(g.A,{value:e,children:(0,s.createElement)(j.Ay,{...j.Gs,code:t,key:n,theme:"dark"==a?r:i,language:"rust"},(({className:e,tokens:a,getLineProps:n,getTokenProps:s})=>(0,m.jsx)("pre",{className:`${e}`,children:a.map(((e,a)=>(0,m.jsx)("div",{...n({line:e,key:a}),children:e.map(((e,a)=>(0,m.jsx)("span",{...s({token:e,key:a})})))})))})))},o)))})]})})})})})}function b(){return(0,m.jsx)("section",{className:(0,l.A)("home-section","home-section-alt",f.features),children:(0,m.jsx)("div",{className:"container",children:(0,m.jsx)("div",{className:"row",children:(0,m.jsxs)("div",{className:(0,l.A)("col col--12"),children:[(0,m.jsx)("h2",{className:"text--center",children:"SeaORM \u2795 GraphQL = \ud83e\udded Seaography"}),(0,m.jsxs)("p",{className:"text--center",children:["With ",(0,m.jsx)(i.A,{to:"/docs/graph-ql/seaography-intro/",children:"Seaography"}),", you can easily launch a GraphQL server from SeaORM entities!"]}),(0,m.jsx)("div",{className:"text--center padding-horiz--md",children:(0,m.jsx)("img",{className:f.seaography,src:"/SeaORM/img/Seaography Screenshot.png"})})]})})})})}var _=n(98360);const S={features:"features_Em2x",spyglassLogo:"spyglassLogo_DddV",svixLogo:"svixLogo_ZdR9",mydatamyconsentLogo:"mydatamyconsentLogo_dng9",prefixdevLogo:"prefixdevLogo_ARcE",upvpnLogo:"upvpnLogo_kFbJ",anchorNormalText:"anchorNormalText_Wz4Z"},k=[{url:"https://caido.io/",logo:"img/other/caido-logo.png",desc:"A lightweight web security auditing toolkit",logoClassName:null},{url:"https://mydatamyconsent.com/",logo:"img/other/mydatamyconsent-logo.png",desc:"Online data sharing simplified",logoClassName:S.mydatamyconsentLogo},{url:"https://prefix.dev/",logo:"img/other/prefixdev-logo.png",desc:"Rethinking Package Management",logoClassName:S.prefixdevLogo},{url:"https://www.svix.com/",logo:"img/other/svix-logo.svg",desc:"The enterprise ready webhooks service",logoClassName:S.svixLogo},{url:"https://upvpn.app/",logo:"img/other/upvpn-logo.png",desc:"Serverless Pay as you go VPN",logoClassName:S.upvpnLogo}];function M({url:e,logo:a,desc:n,logoClassName:s}){return(0,m.jsx)("div",{style:{height:"180px"},children:(0,m.jsx)("a",{href:e,target:"_blank",className:(0,l.A)(S.anchorNormalText),children:(0,m.jsxs)("div",{style:{paddingBottom:"20px",paddingTop:"20px",height:"100%",textAlign:"center",display:"flex",flexDirection:"column",justifyContent:"flex-end"},children:[(0,m.jsx)("div",{style:{display:"flex",justifyContent:"center"},children:(0,m.jsx)("img",{src:`${a}?t=${Date.now()}`,className:(0,l.A)(s),style:{width:"250px"}})}),(0,m.jsx)("p",{style:{margin:"0px",marginTop:"20px"},children:n})]})})})}const A={dots:!1,infinite:!0,pauseOnHover:!0,swipeToSlide:!0,slidesToShow:4,slidesToScroll:1,initialSlide:Math.floor(Math.random()*k.length),rows:1,autoplay:!0,speed:500,autoplaySpeed:3e3,responsive:[{breakpoint:1680,settings:{slidesToShow:3}},{breakpoint:900,settings:{slidesToShow:2}},{breakpoint:650,settings:{slidesToShow:1,rows:2}}]};function R(){return(0,m.jsx)("section",{id:"our-users",className:(0,l.A)("home-section",S.features),children:(0,m.jsxs)("div",{className:"container",children:[(0,m.jsx)("div",{className:"row",children:(0,m.jsxs)("div",{className:"col col--12",children:[(0,m.jsx)("h2",{className:"text--center",children:"Who's using SeaORM?"}),(0,m.jsx)("br",{}),(0,m.jsx)("p",{className:"text--center",children:"The following startups are using SeaORM:"})]})}),(0,m.jsx)("div",{className:"row",children:(0,m.jsx)("div",{className:"col col--12",children:(0,m.jsx)(_.A,{...A,children:k.map(((e,a)=>(0,m.jsx)(M,{...e},a)))})})}),(0,m.jsx)("br",{}),(0,m.jsx)("div",{className:"row",children:(0,m.jsx)("div",{className:"col col--12",children:(0,m.jsxs)("p",{className:"text--center",children:["For more projects, see ",(0,m.jsx)("a",{href:"https://github.com/SeaQL/sea-orm/blob/master/COMMUNITY.md#built-with-seaorm",target:"_blank",children:"Built with SeaORM"}),"."]})})})]})})}function C(){const{colorMode:e}=(0,v.G)();return(0,m.jsx)("section",{id:"our-users",className:(0,l.A)("home-section","home-section-alt",S.features),children:(0,m.jsxs)("div",{className:"container",children:[(0,m.jsx)("h2",{className:"text--center",children:"Silver Sponsors"}),(0,m.jsx)("div",{className:"row",children:(0,m.jsx)("div",{className:"col col--12",children:(0,m.jsxs)("div",{className:"row",children:[(0,m.jsx)("div",{className:"col col--2"}),(0,m.jsx)("div",{className:"col col--2"}),(0,m.jsx)("div",{className:"col col--2",children:(0,m.jsx)("p",{className:"text--center",children:(0,m.jsx)("a",{href:"https://www.digitalocean.com/",target:"_blank",children:(0,m.jsx)("img",{src:"https://www.sea-ql.org/static/sponsors/DigitalOcean.svg",width:"148"})})})}),(0,m.jsx)("div",{className:"col col--2",children:(0,m.jsx)("p",{className:"text--center",children:(0,m.jsx)("a",{href:"https://www.jetbrains.com/",target:"_blank",children:(0,m.jsx)("img",{src:"https://www.sea-ql.org/static/sponsors/JetBrains.svg",width:"148"})})})}),(0,m.jsx)("div",{className:"col col--2"}),(0,m.jsx)("div",{className:"col col--2"})]})})})]})})}const L={features:"features_nemC",mascot:"mascot_Rqr3"};function E(){return(0,m.jsx)("section",{className:(0,l.A)("home-section",L.features),children:(0,m.jsx)("div",{className:"container",children:(0,m.jsx)("div",{className:"row",children:(0,m.jsxs)("div",{className:(0,l.A)("col col--12"),children:[(0,m.jsx)("h2",{className:"text--center",children:"Meet Terres, our official mascot"}),(0,m.jsxs)("p",{className:"text--center",children:["A friend of ",(0,m.jsx)("a",{href:"https://www.rustacean.net/",children:"Ferris"}),", Terres the hermit crab is a member of the Rustacean family."]}),(0,m.jsx)("div",{className:"text--center padding-horiz--md",children:(0,m.jsx)("img",{className:L.mascot,src:"/SeaORM/img/Terres.png"})})]})})})})}function O(){const{siteConfig:e}=(0,o.A)();return(0,m.jsx)("header",{className:r.heroBanner,children:(0,m.jsxs)("div",{className:"container",children:[(0,m.jsx)("img",{className:r.homepageLogo,width:"90%",src:"/SeaORM/img/SeaORM logo.png"}),(0,m.jsx)("img",{className:r.homepageBanner,width:"90%",src:"/SeaORM/img/SeaORM banner.png"}),(0,m.jsx)("h2",{className:"hero__subtitle",children:e.tagline}),(0,m.jsx)("br",{}),(0,m.jsx)("div",{className:r.buttons,children:(0,m.jsx)(i.A,{className:"button button--primary button--lg",to:"/docs/index",children:"Getting Started"})})]})})}function T(){const{siteConfig:e}=(0,o.A)();return(0,m.jsxs)(t.A,{description:e.tagline,children:[(0,m.jsx)(O,{}),(0,m.jsxs)("main",{children:[(0,m.jsx)(u,{}),(0,m.jsx)(N,{}),(0,m.jsx)(b,{}),(0,m.jsx)(R,{}),(0,m.jsx)(C,{}),(0,m.jsx)(E,{})]})]})}}}]);