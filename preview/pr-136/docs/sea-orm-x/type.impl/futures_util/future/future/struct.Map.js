(function() {var type_impls = {
"sqlz_rt":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Map%3CFut,+F%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/futures_util/future/future/mod.rs.html#48-53\">source</a><a href=\"#impl-Debug-for-Map%3CFut,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Fut, F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"futures_util/future/future/struct.Map.html\" title=\"struct futures_util::future::future::Map\">Map</a>&lt;Fut, F&gt;<div class=\"where\">where\n    Map&lt;Fut, F&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_util/future/future/mod.rs.html#48-53\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","sqlz_rt::rt_async_std::TaskHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FusedFuture-for-Map%3CFut,+F%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/futures_util/future/future/mod.rs.html#48-53\">source</a><a href=\"#impl-FusedFuture-for-Map%3CFut,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Fut, F&gt; <a class=\"trait\" href=\"futures_core/future/trait.FusedFuture.html\" title=\"trait futures_core::future::FusedFuture\">FusedFuture</a> for <a class=\"struct\" href=\"futures_util/future/future/struct.Map.html\" title=\"struct futures_util::future::future::Map\">Map</a>&lt;Fut, F&gt;<div class=\"where\">where\n    Map&lt;Fut, F&gt;: <a class=\"trait\" href=\"futures_core/future/trait.FusedFuture.html\" title=\"trait futures_core::future::FusedFuture\">FusedFuture</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_terminated\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_util/future/future/mod.rs.html#48-53\">source</a><a href=\"#method.is_terminated\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"futures_core/future/trait.FusedFuture.html#tymethod.is_terminated\" class=\"fn\">is_terminated</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if the underlying future should no longer be polled.</div></details></div></details>","FusedFuture","sqlz_rt::rt_async_std::TaskHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Future-for-Map%3CFut,+F%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/futures_util/future/future/mod.rs.html#48-53\">source</a><a href=\"#impl-Future-for-Map%3CFut,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Fut, F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a> for <a class=\"struct\" href=\"futures_util/future/future/struct.Map.html\" title=\"struct futures_util::future::future::Map\">Map</a>&lt;Fut, F&gt;<div class=\"where\">where\n    Map&lt;Fut, F&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.81.0/core/future/future/trait.Future.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;Map&lt;Fut, F&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.81.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a></h4></section></summary><div class='docblock'>The type of value produced on completion.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_util/future/future/mod.rs.html#48-53\">source</a><a href=\"#method.poll\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/future/future/trait.Future.html#tymethod.poll\" class=\"fn\">poll</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"futures_util/future/future/struct.Map.html\" title=\"struct futures_util::future::future::Map\">Map</a>&lt;Fut, F&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;&lt;<a class=\"struct\" href=\"futures_util/future/future/struct.Map.html\" title=\"struct futures_util::future::future::Map\">Map</a>&lt;Fut, F&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.81.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>Attempt to resolve the future to a final value, registering\nthe current task for wakeup if the value is not yet available. <a href=\"https://doc.rust-lang.org/1.81.0/core/future/future/trait.Future.html#tymethod.poll\">Read more</a></div></details></div></details>","Future","sqlz_rt::rt_async_std::TaskHandle"],["<section id=\"impl-Unpin-for-Map%3CFut,+F%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/futures_util/future/future/mod.rs.html#48-53\">source</a><a href=\"#impl-Unpin-for-Map%3CFut,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'__pin, Fut, F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"futures_util/future/future/struct.Map.html\" title=\"struct futures_util::future::future::Map\">Map</a>&lt;Fut, F&gt;<div class=\"where\">where\n    __Origin&lt;'__pin, Fut, F&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,</div></h3></section>","Unpin","sqlz_rt::rt_async_std::TaskHandle"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()