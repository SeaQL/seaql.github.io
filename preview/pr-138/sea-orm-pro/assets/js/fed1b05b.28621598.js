"use strict";(self.webpackChunksea_orm_pro=self.webpackChunksea_orm_pro||[]).push([[229],{5942:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(6687);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(r),m=o,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return r?n.createElement(f,i(i({ref:t},p),{},{components:r})):n.createElement(f,i({ref:t},p))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2273:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var n=r(1308),o=(r(6687),r(5942));const a={},i="User Authentication",s={unversionedId:"deployment/user-auth",id:"deployment/user-auth",title:"User Authentication",description:"You can override the login procedure in src/controllers/auth.rs.",source:"@site/docs/06-deployment/02-user-auth.md",sourceDirName:"06-deployment",slug:"/deployment/user-auth",permalink:"/preview/pr-138/sea-orm-pro/docs/deployment/user-auth",draft:!1,editUrl:"https://github.com/SeaQL/seaql.github.io/edit/master/sea-orm-pro/docs/06-deployment/02-user-auth.md",tags:[],version:"current",lastUpdatedBy:"Billy Chan",lastUpdatedAt:1735888817,formattedLastUpdatedAt:"Jan 3, 2025",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Nginx",permalink:"/preview/pr-138/sea-orm-pro/docs/deployment/nginx"}},l={},c=[],p={toc:c};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"user-authentication"},"User Authentication"),(0,o.kt)("p",null,"You can override the login procedure in ",(0,o.kt)("inlineCode",{parentName:"p"},"src/controllers/auth.rs"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},'// Login with email and password\nasync fn password_login(\n    State(ctx): State<AppContext>,\n    Json(params): Json<PasswordLoginParams>,\n) -> Result<Response> {\n    // Database connection\n    let db = ctx.db;\n\n    // Find user by email\n    let user = users::Model::find_by_email(db, &params.email).await?;\n\n    // Validate password\n    let algo = otpshka::Algorithm::SHA256;\n    let secret = "fxq9rHswDLfFVkdC69FeJPXStVMjwUjP".as_bytes();\n    let totp = otpshka::TOTP::new(algo, secret);\n    let valid = totp.verify_now(&params.password);\n    if !valid {\n        return unauthorized("unauthorized!");\n    }\n\n    // Generate JWT\n    let jwt_secret = ctx.config.get_jwt_config()?;\n    let token = user\n        .generate_jwt(&jwt_secret.secret, &jwt_secret.expiration)\n        .or_else(|_| unauthorized("unauthorized!"))?;\n\n    format::json(LoginResponse::new(&user, &token))\n}\n')))}u.isMDXComponent=!0}}]);