"use strict";(self.webpackChunksea_orm=self.webpackChunksea_orm||[]).push([[6461],{48859:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>u});var a=r(76687);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),l=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(r),u=n,h=d["".concat(p,".").concat(u)]||d[u]||g[u]||o;return r?a.createElement(h,i(i({ref:t},c),{},{components:r})):a.createElement(h,i({ref:t},c))}));function u(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},89449:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>g,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var a=r(31308),n=(r(76687),r(48859));const o={},i="Getting Started",s={unversionedId:"seaography/getting-started",id:"version-0.12.x/seaography/getting-started",title:"Getting Started",description:"This example can be found on SeaORM + Seaography Example.",source:"@site/versioned_docs/version-0.12.x/10-seaography/02-getting-started.md",sourceDirName:"10-seaography",slug:"/seaography/getting-started",permalink:"/preview/pr-126/SeaORM/docs/seaography/getting-started",draft:!1,editUrl:"https://github.com/SeaQL/seaql.github.io/edit/master/SeaORM/versioned_docs/version-0.12.x/10-seaography/02-getting-started.md",tags:[],version:"0.12.x",lastUpdatedBy:"Billy Chan",lastUpdatedAt:1721634007,formattedLastUpdatedAt:"Jul 22, 2024",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\ud83e\udded Seaography Intro",permalink:"/preview/pr-126/SeaORM/docs/seaography/seaography-intro"},next:{title:"Looking Forward",permalink:"/preview/pr-126/SeaORM/docs/seaography/looking-forward"}},p={},l=[{value:"Install Seaography",id:"install-seaography",level:2},{value:"Generate Seaography Entities",id:"generate-seaography-entities",level:2},{value:"Generate GraphQL Project",id:"generate-graphql-project",level:2},{value:"Start the server",id:"start-the-server",level:2}],c={toc:l};function g(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"getting-started"},"Getting Started"),(0,n.kt)("p",null,"This example can be found on ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/SeaQL/sea-orm/tree/master/examples/seaography_example"},"SeaORM + Seaography Example"),"."),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/SeaQL/sea-orm/master/examples/seaography_example/Seaography%20example.png",alt:null})),(0,n.kt)("p",null,"To get started, all you need is a live SQL database with schema. You can code everything in Rust by writing SeaORM migrations, or design the schema with a GUI tool (e.g. ",(0,n.kt)("a",{parentName:"p",href:"https://www.jetbrains.com/datagrip/"},"DataGrip"),")."),(0,n.kt)("h2",{id:"install-seaography"},"Install Seaography"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"cargo install seaography-cli@^1.0.0-rc.2\n")),(0,n.kt)("h2",{id:"generate-seaography-entities"},"Generate Seaography Entities"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sea-orm-cli generate entity --output-dir graphql/src/entities --seaography\n")),(0,n.kt)("p",null,"Generate entities with ",(0,n.kt)("inlineCode",{parentName:"p"},"sea-orm-cli"),", but with an additional ",(0,n.kt)("inlineCode",{parentName:"p"},"--seaography")," flag. The entities are basically good-old SeaORM entities, but with additional ",(0,n.kt)("inlineCode",{parentName:"p"},"RelatedEntity")," enum."),(0,n.kt)("h2",{id:"generate-graphql-project"},"Generate GraphQL Project"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"# seaography-cli <DESTINATION> <ENTITIES> <DATABASE_URL> <CRATE_NAME>\nseaography-cli graphql graphql/src/entities $DATABASE_URL sea-orm-seaography-example\n")),(0,n.kt)("h2",{id:"start-the-server"},"Start the server"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"cd graphql\ncargo run\n")),(0,n.kt)("p",null,"You are of course free to modify the project to suit your needs. But the interesting bit starts at the ",(0,n.kt)("inlineCode",{parentName:"p"},"seaography::register_entity!")," macro and the ",(0,n.kt)("a",{parentName:"p",href:"https://docs.rs/seaography/1.0.0-rc.2/seaography/builder/struct.Builder.html"},"seaography::Builder"),"."))}g.isMDXComponent=!0}}]);