"use strict";(self.webpackChunksea_orm=self.webpackChunksea_orm||[]).push([[87762],{28453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>i});var r=n(96540);const s={},a=r.createContext(s);function d(e){const t=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),r.createElement(a.Provider,{value:t},e.children)}},98660:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>d,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"basic-crud/delete","title":"Delete","description":"Delete One","source":"@site/versioned_docs/version-0.7.x/06-basic-crud/05-delete.md","sourceDirName":"06-basic-crud","slug":"/basic-crud/delete","permalink":"/preview/pr-150/SeaORM/docs/0.7.x/basic-crud/delete","draft":false,"unlisted":false,"editUrl":"https://github.com/SeaQL/seaql.github.io/edit/master/SeaORM/versioned_docs/version-0.7.x/06-basic-crud/05-delete.md","tags":[],"version":"0.7.x","lastUpdatedBy":"Chris Tsang","lastUpdatedAt":1756074242000,"sidebarPosition":5,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Save","permalink":"/preview/pr-150/SeaORM/docs/0.7.x/basic-crud/save"},"next":{"title":"JSON","permalink":"/preview/pr-150/SeaORM/docs/0.7.x/basic-crud/json"}}');var s=n(74848),a=n(28453);const d={},i="Delete",l={},o=[{value:"Delete One",id:"delete-one",level:2},{value:"Delete by Primary Key",id:"delete-by-primary-key",level:2},{value:"Delete Many",id:"delete-many",level:2}];function c(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"delete",children:"Delete"})}),"\n",(0,s.jsx)(t.h2,{id:"delete-one",children:"Delete One"}),"\n",(0,s.jsxs)(t.p,{children:["Find a ",(0,s.jsx)(t.code,{children:"Model"})," from the database, then delete the corresponding row from database."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-rust",children:"let orange: Option<fruit::Model> = Fruit::find_by_id(30).one(db).await?;\nlet orange: fruit::Model = orange.unwrap();\n\nlet res: DeleteResult = orange.delete(db).await?;\nassert_eq!(res.rows_affected, 1);\n"})}),"\n",(0,s.jsx)(t.h2,{id:"delete-by-primary-key",children:"Delete by Primary Key"}),"\n",(0,s.jsxs)(t.p,{children:["Instead of selecting ",(0,s.jsx)(t.code,{children:"Model"})," from the database then deleting it. You could also delete a row from database directly by its primary key."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-rust",children:"let res: DeleteResult = Fruit::delete_by_id(38).exec(db).await?;\nassert_eq!(res.rows_affected, 1);\n"})}),"\n",(0,s.jsx)(t.h2,{id:"delete-many",children:"Delete Many"}),"\n",(0,s.jsxs)(t.p,{children:["You can also delete multiple rows from the database without finding each ",(0,s.jsx)(t.code,{children:"Model"})," with SeaORM select."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-rust",children:"// DELETE FROM `fruit` WHERE `fruit`.`name` LIKE '%Orange%'\nlet res: DeleteResult = fruit::Entity::delete_many()\n    .filter(fruit::Column::Name.contains(\"Orange\"))\n    .exec(db)\n    .await?;\n\nassert_eq!(res.rows_affected, 2);\n"})})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);