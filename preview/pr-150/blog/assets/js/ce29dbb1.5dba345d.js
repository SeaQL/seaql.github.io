"use strict";(self.webpackChunksea_ql_blog=self.webpackChunksea_ql_blog||[]).push([[9109],{5940:e=>{e.exports=JSON.parse('{"permalink":"/preview/pr-150/blog/2024-01-23-whats-new-in-seaorm-0.12.x","editUrl":"https://github.com/SeaQL/seaql.github.io/edit/master/Blog/blog/2024-01-23-whats-new-in-seaorm-0.12.x.md","source":"@site/blog/2024-01-23-whats-new-in-seaorm-0.12.x.md","title":"What\'s new in SeaORM 0.12.x","description":"It had been a while since the initial SeaORM 0.12 release. This blog post summarizes the new features and enhancements introduced in SeaORM 0.12.2 through 0.12.12!","date":"2024-01-23T00:00:00.000Z","tags":[{"inline":true,"label":"news","permalink":"/preview/pr-150/blog/tags/news"}],"readingTime":6.79,"hasTruncateMarker":false,"authors":[{"name":"SeaQL Team","title":"Chris Tsang","url":"https://github.com/SeaQL","imageURL":"https://www.sea-ql.org/blog/img/SeaQL.png","key":null,"page":null}],"frontMatter":{"slug":"2024-01-23-whats-new-in-seaorm-0.12.x","title":"What\'s new in SeaORM 0.12.x","author":"SeaQL Team","author_title":"Chris Tsang","author_url":"https://github.com/SeaQL","author_image_url":"https://www.sea-ql.org/blog/img/SeaQL.png","image":"https://www.sea-ql.org/blog/img/SeaORM%2012%20Banner.png","tags":["news"]},"unlisted":false,"prevItem":{"title":"What\'s new in SeaORM 1.0-rc.x","permalink":"/preview/pr-150/blog/2024-04-08-whats-new-in-seaorm-1.0-rc.x"},"nextItem":{"title":"SeaQL Community Survey 2023 Results","permalink":"/preview/pr-150/blog/2024-01-18-community-survey-2023"}}')},7630:(e,a,s)=>{s.d(a,{R:()=>i,x:()=>o});var n=s(2374);const r={},t=n.createContext(r);function i(e){const a=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(t.Provider,{value:a},e.children)}},8253:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>c});var n=s(5940),r=s(8790),t=s(7630);const i={slug:"2024-01-23-whats-new-in-seaorm-0.12.x",title:"What's new in SeaORM 0.12.x",author:"SeaQL Team",author_title:"Chris Tsang",author_url:"https://github.com/SeaQL",author_image_url:"https://www.sea-ql.org/blog/img/SeaQL.png",image:"https://www.sea-ql.org/blog/img/SeaORM%2012%20Banner.png",tags:["news"]},o=void 0,l={authorsImageUrls:[void 0]},c=[{value:"Celebrating 2M downloads on crates.io \ud83d\udce6",id:"celebrating-2m-downloads-on-cratesio-",level:2},{value:"New Features",id:"new-features",level:2},{value:"Entity format update",id:"entity-format-update",level:3},{value:"Cursor paginator improvements",id:"cursor-paginator-improvements",level:3},{value:"Added &quot;proxy&quot; to database backend",id:"added-proxy-to-database-backend",level:3},{value:"Enhancements",id:"enhancements",level:2},{value:"Bug fixes",id:"bug-fixes",level:2},{value:"Upgrades",id:"upgrades",level:2},{value:"House Keeping",id:"house-keeping",level:2},{value:"Release planning",id:"release-planning",level:2},{value:"Sponsor",id:"sponsor",level:2},{value:"Gold Sponsors",id:"gold-sponsors",level:4},{value:"GitHub Sponsors",id:"github-sponsors",level:4},{value:"Rustacean Sticker Pack \ud83e\udd80",id:"rustacean-sticker-pack-",level:2}];function d(e){const a={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("img",{alt:"SeaORM 0.12 Banner",src:"/blog/img/SeaORM%2012%20Banner.png"}),"\n",(0,r.jsxs)(a.p,{children:["It had been a while since the initial ",(0,r.jsx)(a.a,{href:"https://www.sea-ql.org/blog/2023-08-12-announcing-seaorm-0.12/",children:"SeaORM 0.12 release"}),". This blog post summarizes the new features and enhancements introduced in SeaORM ",(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/releases/tag/0.12.2",children:(0,r.jsx)(a.code,{children:"0.12.2"})})," through ",(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/releases/tag/0.12.12",children:(0,r.jsx)(a.code,{children:"0.12.12"})}),"!"]}),"\n",(0,r.jsx)(a.h2,{id:"celebrating-2m-downloads-on-cratesio-",children:"Celebrating 2M downloads on crates.io \ud83d\udce6"}),"\n",(0,r.jsxs)(a.p,{children:["We've just reached the milestone of 2,000,000 all time downloads on ",(0,r.jsx)(a.a,{href:"https://crates.io/crates/sea-orm",children:"crates.io"}),". It's a testament to SeaORM's adoption in professional use. Thank you to all our users for your trust and for being a part of our community."]}),"\n",(0,r.jsx)(a.h2,{id:"new-features",children:"New Features"}),"\n",(0,r.jsx)(a.h3,{id:"entity-format-update",children:"Entity format update"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/1898",children:"#1898"})," Add support for root JSON arrays (requires the ",(0,r.jsx)(a.code,{children:"json-array"})," / ",(0,r.jsx)(a.code,{children:"postgres-array"})," feature)! It involved an intricate type system refactor to work around the orphan rule."]}),"\n"]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-rust",children:'#[derive(Clone, Debug, PartialEq, Eq, DeriveEntityModel)]\n#[sea_orm(table_name = "json_struct_vec")]\npub struct Model {\n    #[sea_orm(primary_key)]\n    pub id: i32,\n    #[sea_orm(column_type = "Json")]\n    pub struct_vec: Vec<JsonColumn>,\n}\n\n#[derive(Clone, Debug, PartialEq, Eq, Serialize, Deserialize, FromJsonQueryResult)]\npub struct JsonColumn {\n    pub value: String,\n}\n'})}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/2009",children:"#2009"})," Added ",(0,r.jsx)(a.code,{children:"comment"})," attribute for Entity; ",(0,r.jsx)(a.code,{children:"create_table_from_entity"})," now supports comment on MySQL"]}),"\n"]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-rust",children:'#[derive(Clone, Debug, PartialEq, Eq, DeriveEntityModel)]\n#[sea_orm(table_name = "applog", comment = "app logs")]\npub struct Model {\n    #[sea_orm(primary_key, comment = "ID")]\n    pub id: i32,\n    #[sea_orm(comment = "action")]\n    pub action: String,\n    pub json: Json,\n    pub created_at: DateTimeWithTimeZone,\n}\n'})}),"\n",(0,r.jsx)(a.h3,{id:"cursor-paginator-improvements",children:"Cursor paginator improvements"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/2037",children:"#2037"})," Added descending order to Cursor:"]}),"\n"]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-rust",children:"// (default behaviour) Before 5 ASC, i.e. id < 5\n\nlet mut cursor = Entity::find().cursor_by(Column::Id);\ncursor.before(5);\n\nassert_eq!(\n    cursor.first(4).all(db).await?,\n    [\n        Model { id: 1 },\n        Model { id: 2 },\n        Model { id: 3 },\n        Model { id: 4 },\n    ]\n);\n\n// (new API) After 5 DESC, i.e. id < 5\n\nlet mut cursor = Entity::find().cursor_by(Column::Id);\ncursor.after(5).desc();\n\nassert_eq!(\n    cursor.first(4).all(db).await?,\n    [\n        Model { id: 4 },\n        Model { id: 3 },\n        Model { id: 2 },\n        Model { id: 1 },\n    ]\n);\n"})}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/1826",children:"#1826"})," Added cursor support to ",(0,r.jsx)(a.code,{children:"SelectTwo"}),":"]}),"\n"]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-rust",children:"// Join with linked relation; cursor by first table's id\n\ncake::Entity::find()\n    .find_also_linked(entity_linked::CakeToFillingVendor)\n    .cursor_by(cake::Column::Id)\n    .before(10)\n    .first(2)\n    .all(&db)\n    .await?\n\n// Join with relation; cursor by the 2nd table's id \n\ncake::Entity::find()\n    .find_also_related(Fruit)\n    .cursor_by_other(fruit::Column::Id)\n    .before(10)\n    .first(2)\n    .all(&db)\n    .await?\n"})}),"\n",(0,r.jsx)(a.h3,{id:"added-proxy-to-database-backend",children:'Added "proxy" to database backend'}),"\n",(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/1881",children:"#1881"}),", ",(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/2000",children:"#2000"}),' Added "proxy" to database backend (requires feature flag ',(0,r.jsx)(a.code,{children:"proxy"}),")."]}),"\n",(0,r.jsxs)(a.p,{children:["It enables the possibility of using SeaORM on edge / client-side! See the ",(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/tree/master/examples/proxy_gluesql_example",children:"GlueSQL demo"})," for an example."]}),"\n",(0,r.jsx)(a.h2,{id:"enhancements",children:"Enhancements"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/1954",children:"#1954"})," [sea-orm-macro] Added ",(0,r.jsx)(a.code,{children:"#[sea_orm(skip)]"})," to ",(0,r.jsx)(a.code,{children:"FromQueryResult"})," derive macro"]}),"\n"]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-rust",children:'#[derive(Clone, Debug, PartialEq, Eq, Deserialize, Serialize, FromQueryResult)]\npub struct PublicUser {\n    pub id: i64,\n    pub name: String,\n    #[serde(skip_serializing_if = "Vec::is_empty")]\n    #[sea_orm(skip)]\n    pub something: Something,\n}\n'})}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/1598",children:"#1598"})," [sea-orm-macro] Added support for Postgres arrays in ",(0,r.jsx)(a.code,{children:"FromQueryResult"})," impl of ",(0,r.jsx)(a.code,{children:"JsonValue"})]}),"\n"]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-rust",children:'// existing API:\n\nassert_eq!(\n    Entity::find_by_id(1).one(db).await?,\n    Some(Model {\n        id: 1,\n        name: "Collection 1".into(),\n        integers: vec![1, 2, 3],\n        teas: vec![Tea::BreakfastTea],\n        colors: vec![Color::Black],\n    })\n);\n\n// new API:\n\nassert_eq!(\n    Entity::find_by_id(1).into_json().one(db).await?,\n    Some(json!({\n        "id": 1,\n        "name": "Collection 1",\n        "integers": [1, 2, 3],\n        "teas": ["BreakfastTea"],\n        "colors": [0],\n    }))\n);\n'})}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/1828",children:"#1828"})," [sea-orm-migration] Check if an index exists"]}),"\n"]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-rust",children:'use sea_orm_migration::prelude::*;\n#[derive(DeriveMigrationName)]\npub struct Migration;\n#[async_trait::async_trait]\nimpl MigrationTrait for Migration {\n    async fn up(&self, manager: &SchemaManager) -> Result<(), DbErr> {\n        // ...\n\n        // Make sure the index haven\'t been created\n        assert!(!manager.has_index("cake", "cake_name_index").await?);\n\n        manager\n            .create_index(\n                Index::create()\n                    .name("cake_name_index")\n                    .table(Cake::Table)\n                    .col(Cake::Name)\n                    .to_owned(),\n            )\n            .await?;\n\n        Ok(())\n    }\n\n    async fn down(&self, manager: &SchemaManager) -> Result<(), DbErr> {\n        // ...\n    }\n}\n'})}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/2030",children:"#2030"})," Improve query performance of ",(0,r.jsx)(a.code,{children:"Paginator"}),"'s ",(0,r.jsx)(a.code,{children:"COUNT"})," query"]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/2055",children:"#2055"})," Added SQLx slow statements logging to ",(0,r.jsx)(a.code,{children:"ConnectOptions"})]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/1867",children:"#1867"})," Added ",(0,r.jsx)(a.code,{children:"QuerySelect::lock_with_behavior"})]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/2002",children:"#2002"})," Cast enums in ",(0,r.jsx)(a.code,{children:"is_in"})," and ",(0,r.jsx)(a.code,{children:"is_not_in"})]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/1999",children:"#1999"})," Add source annotations to errors"]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/issues/1960",children:"#1960"})," Implement ",(0,r.jsx)(a.code,{children:"StatementBuilder"})," for ",(0,r.jsx)(a.code,{children:"sea_query::WithQuery"})]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/1979",children:"#1979"})," Added method ",(0,r.jsx)(a.code,{children:"expr_as_"})," that accepts ",(0,r.jsx)(a.code,{children:"self"})]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/1868",children:"#1868"})," Loader: use ",(0,r.jsx)(a.code,{children:"ValueTuple"})," as hash key"]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/1934",children:"#1934"})," [sea-orm-cli] Added ",(0,r.jsx)(a.code,{children:"--enum-extra-derives"})]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/1952",children:"#1952"})," [sea-orm-cli] Added ",(0,r.jsx)(a.code,{children:"--enum-extra-attributes"})]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/1693",children:"#1693"})," [sea-orm-cli] Support generation of related entity with composite foreign key"]}),"\n"]}),"\n",(0,r.jsx)(a.h2,{id:"bug-fixes",children:"Bug fixes"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/1855",children:"#1855"}),", ",(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/2054",children:"#2054"})," [sea-orm-macro] Qualify types in ",(0,r.jsx)(a.code,{children:"DeriveValueType"})," macro"]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/1953",children:"#1953"})," [sea-orm-cli] Fix duplicated active enum use statements on generated entities"]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/1821",children:"#1821"})," [sea-orm-cli] Fix entity generation for non-alphanumeric enum variants"]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/2071",children:"#2071"})," [sea-orm-cli] Fix entity generation for relations with composite keys"]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/issues/1800",children:"#1800"})," Fixed ",(0,r.jsx)(a.code,{children:"find_with_related"})," consolidation logic"]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/commit/5a6acd67312601e4dba32896600044950e20f99f",children:"5a6acd67"})," Fixed ",(0,r.jsx)(a.code,{children:"Loader"})," panic on empty inputs"]}),"\n"]}),"\n",(0,r.jsx)(a.h2,{id:"upgrades",children:"Upgrades"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/1984",children:"#1984"})," Upgraded ",(0,r.jsx)(a.code,{children:"axum"})," example to ",(0,r.jsx)(a.code,{children:"0.7"})]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/1858",children:"#1858"})," Upgraded ",(0,r.jsx)(a.code,{children:"chrono"})," to ",(0,r.jsx)(a.code,{children:"0.4.30"})]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/1959",children:"#1959"})," Upgraded ",(0,r.jsx)(a.code,{children:"rocket"})," to ",(0,r.jsx)(a.code,{children:"0.5.0"})]}),"\n",(0,r.jsxs)(a.li,{children:["Upgraded ",(0,r.jsx)(a.code,{children:"sea-query"})," to ",(0,r.jsx)(a.code,{children:"0.30.5"})]}),"\n",(0,r.jsxs)(a.li,{children:["Upgraded ",(0,r.jsx)(a.code,{children:"sea-schema"})," to ",(0,r.jsx)(a.code,{children:"0.14.2"})]}),"\n",(0,r.jsxs)(a.li,{children:["Upgraded ",(0,r.jsx)(a.code,{children:"salvo"})," to ",(0,r.jsx)(a.code,{children:"0.50"})]}),"\n"]}),"\n",(0,r.jsx)(a.h2,{id:"house-keeping",children:"House Keeping"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/2057",children:"#2057"})," Fix clippy warnings on 1.75"]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/1811",children:"#1811"})," Added test cases for ",(0,r.jsx)(a.code,{children:"find_xxx_related/linked"})]}),"\n"]}),"\n",(0,r.jsx)(a.h2,{id:"release-planning",children:"Release planning"}),"\n",(0,r.jsxs)(a.p,{children:["In the ",(0,r.jsx)(a.a,{href:"https://www.sea-ql.org/blog/2023-08-12-announcing-seaorm-0.12/",children:"announcement blog post"})," of SeaORM 0.12, we stated we want to reduce the frequency of breaking releases while maintaining the pace for feature updates and enhancements. I am glad to say we've accomplished that!"]}),"\n",(0,r.jsxs)(a.p,{children:["There are still a few breaking changes planned for the next major release. After some ",(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/discussions/2031",children:"discussions"})," and consideration, we decided that the next major release will be a release candidate for 1.0!"]}),"\n",(0,r.jsx)(a.h2,{id:"sponsor",children:"Sponsor"}),"\n",(0,r.jsx)(a.p,{children:"If you feel generous, a small donation will be greatly appreciated, and goes a long way towards sustaining the organization."}),"\n",(0,r.jsxs)(a.p,{children:["A big shout out to our ",(0,r.jsx)(a.a,{href:"https://github.com/sponsors/SeaQL",children:"sponsors"})," \ud83d\ude07:"]}),"\n",(0,r.jsx)(a.h4,{id:"gold-sponsors",children:"Gold Sponsors"}),"\n",(0,r.jsxs)("a",{href:"https://osmos.io/",children:[(0,r.jsx)("img",{src:"https://www.sea-ql.org/static/sponsors/Osmos.svg#light",width:"238"}),(0,r.jsx)("img",{src:"https://www.sea-ql.org/static/sponsors/Osmos-dark.svg#dark",width:"238"})]}),"\n",(0,r.jsx)(a.h4,{id:"github-sponsors",children:"GitHub Sponsors"}),"\n",(0,r.jsxs)("div",{class:"row",children:[(0,r.jsx)("div",{class:"col col--6 margin-bottom--md",children:(0,r.jsxs)("div",{class:"avatar",children:[(0,r.jsx)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/Sytten",children:(0,r.jsx)("img",{src:"https://avatars.githubusercontent.com/u/2366731?u=2f43900772265deac96eb7a816d28a5a48b9a8dd&v=4"})}),(0,r.jsx)("div",{class:"avatar__intro",children:(0,r.jsx)("div",{class:"avatar__name",children:(0,r.jsx)(a.p,{children:"\xc9mile Fugulin"})})})]})}),(0,r.jsx)("div",{class:"col col--6 margin-bottom--md",children:(0,r.jsxs)("div",{class:"avatar",children:[(0,r.jsx)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/tugascript",children:(0,r.jsx)("img",{src:"https://avatars.githubusercontent.com/u/64930104?u=1171ed4ccb6da73b52de274109077686290da3a5&v=4"})}),(0,r.jsx)("div",{class:"avatar__intro",children:(0,r.jsx)("div",{class:"avatar__name",children:(0,r.jsx)(a.p,{children:"Afonso Barracha"})})})]})}),(0,r.jsx)("div",{class:"col col--6 margin-bottom--md",children:(0,r.jsxs)("div",{class:"avatar",children:[(0,r.jsx)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/shanesveller",children:(0,r.jsx)("img",{src:"https://avatars.githubusercontent.com/u/831?u=474c7b31ddf0a5c1a03d1142dd18a300279c644a&v=4"})}),(0,r.jsx)("div",{class:"avatar__intro",children:(0,r.jsx)("div",{class:"avatar__name",children:(0,r.jsx)(a.p,{children:"Shane Sveller"})})})]})}),(0,r.jsx)("div",{class:"col col--6 margin-bottom--md",children:(0,r.jsxs)("div",{class:"avatar",children:[(0,r.jsx)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/deansheather",children:(0,r.jsx)("img",{src:"https://avatars.githubusercontent.com/u/11241812?u=260538c7d8b8c3c5350dba175ebb8294358441e0&v=4"})}),(0,r.jsx)("div",{class:"avatar__intro",children:(0,r.jsx)("div",{class:"avatar__name",children:(0,r.jsx)(a.p,{children:"Dean Sheather"})})})]})}),(0,r.jsx)("div",{class:"col col--6 margin-bottom--md",children:(0,r.jsxs)("div",{class:"avatar",children:[(0,r.jsx)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/marcusbuffett",children:(0,r.jsx)("img",{src:"https://avatars.githubusercontent.com/u/1834328?u=fd066d99cf4a6333bfb3927d1c756af4bb8baf7e&v=4"})}),(0,r.jsx)("div",{class:"avatar__intro",children:(0,r.jsx)("div",{class:"avatar__name",children:(0,r.jsx)(a.p,{children:"Marcus Buffett"})})})]})}),(0,r.jsx)("div",{class:"col col--6 margin-bottom--md",children:(0,r.jsxs)("div",{class:"avatar",children:[(0,r.jsx)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/reneklacan",children:(0,r.jsx)("img",{src:"https://avatars.githubusercontent.com/u/1935686?u=132be985351312fcf96999daef515f551a93bb0d&v=4"})}),(0,r.jsx)("div",{class:"avatar__intro",children:(0,r.jsx)("div",{class:"avatar__name",children:(0,r.jsx)(a.p,{children:"Ren\xe9 Kla\u010dan"})})})]})}),(0,r.jsx)("div",{class:"col col--6 margin-bottom--md",children:(0,r.jsxs)("div",{class:"avatar",children:[(0,r.jsx)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/Iceapinan",children:(0,r.jsx)("img",{src:"https://avatars.githubusercontent.com/u/2698243?u=a852c75ac10098b9980f57af298be1399f6de66b&v=4"})}),(0,r.jsx)("div",{class:"avatar__intro",children:(0,r.jsx)("div",{class:"avatar__name",children:(0,r.jsx)(a.p,{children:"IceApinan"})})})]})}),(0,r.jsx)("div",{class:"col col--6 margin-bottom--md",children:(0,r.jsxs)("div",{class:"avatar",children:[(0,r.jsx)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/trueb2",children:(0,r.jsx)("img",{src:"https://avatars.githubusercontent.com/u/8592049?u=031c9ee96b47c27e3a8c485c3c0ebcd4f96120c9&v=4"})}),(0,r.jsx)("div",{class:"avatar__intro",children:(0,r.jsx)("div",{class:"avatar__name",children:(0,r.jsx)(a.p,{children:"Jacob Trueb"})})})]})}),(0,r.jsx)("div",{class:"col col--6 margin-bottom--md",children:(0,r.jsxs)("div",{class:"avatar",children:[(0,r.jsx)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/ktanaka101",children:(0,r.jsx)("img",{src:"https://avatars.githubusercontent.com/u/10344925?u=a96d92e7cdd73f774b35fd0bc998964c07b24e29&v=4"})}),(0,r.jsx)("div",{class:"avatar__intro",children:(0,r.jsx)("div",{class:"avatar__name",children:(0,r.jsx)(a.p,{children:"Kentaro Tanaka"})})})]})}),(0,r.jsx)("div",{class:"col col--6 margin-bottom--md",children:(0,r.jsxs)("div",{class:"avatar",children:[(0,r.jsx)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/siketyan",children:(0,r.jsx)("img",{src:"https://avatars.githubusercontent.com/u/12772118?u=1a51e0a06690e52982e7594bc7379481e65155a1&v=4"})}),(0,r.jsx)("div",{class:"avatar__intro",children:(0,r.jsx)("div",{class:"avatar__name",children:(0,r.jsx)(a.p,{children:"Natsuki Ikeguchi"})})})]})}),(0,r.jsx)("div",{class:"col col--6 margin-bottom--md",children:(0,r.jsxs)("div",{class:"avatar",children:[(0,r.jsx)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/mmuellersoppart",children:(0,r.jsx)("img",{src:"https://avatars.githubusercontent.com/u/16762461?u=bef7454cb73c164b2d18e077e5ba6b7891aae3d2&v=4"})}),(0,r.jsx)("div",{class:"avatar__intro",children:(0,r.jsx)("div",{class:"avatar__name",children:(0,r.jsx)(a.p,{children:"Marlon Mueller-Soppart"})})})]})}),(0,r.jsx)("div",{class:"col col--6 margin-bottom--md",children:(0,r.jsxs)("div",{class:"avatar",children:[(0,r.jsx)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/gitmalong",children:(0,r.jsx)("img",{src:"https://avatars.githubusercontent.com/u/18363591?v=4"})}),(0,r.jsx)("div",{class:"avatar__intro",children:(0,r.jsx)("div",{class:"avatar__name",children:(0,r.jsx)(a.p,{children:"ul"})})})]})}),(0,r.jsx)("div",{class:"col col--6 margin-bottom--md",children:(0,r.jsxs)("div",{class:"avatar",children:[(0,r.jsx)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/manfredcml",children:(0,r.jsx)("img",{src:"https://avatars.githubusercontent.com/u/27536502?u=b71636bdabbc698458b32e2ac05c5771ad41097e&v=4"})}),(0,r.jsx)("div",{class:"avatar__intro",children:(0,r.jsx)("div",{class:"avatar__name",children:(0,r.jsx)(a.p,{children:"Manfred Lee"})})})]})}),(0,r.jsx)("div",{class:"col col--6 margin-bottom--md",children:(0,r.jsxs)("div",{class:"avatar",children:[(0,r.jsx)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/kallydev",children:(0,r.jsx)("img",{src:"https://avatars.githubusercontent.com/u/36319157?u=5be882aa4dbe7eea97b1a80a6473857369146df6&v=4"})}),(0,r.jsx)("div",{class:"avatar__intro",children:(0,r.jsx)("div",{class:"avatar__name",children:(0,r.jsx)(a.p,{children:"KallyDev"})})})]})}),(0,r.jsx)("div",{class:"col col--6 margin-bottom--md",children:(0,r.jsxs)("div",{class:"avatar",children:[(0,r.jsx)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/dsgallups",children:(0,r.jsx)("img",{src:"https://avatars.githubusercontent.com/u/44790295?u=d1c8d2a60930dfbe95497df7fecf52cf5d95dd5f&v=4"})}),(0,r.jsx)("div",{class:"avatar__intro",children:(0,r.jsx)("div",{class:"avatar__name",children:(0,r.jsx)(a.p,{children:"Daniel Gallups"})})})]})}),(0,r.jsx)("div",{class:"col col--6 margin-bottom--md",children:(0,r.jsxs)("div",{class:"avatar",children:[(0,r.jsx)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/Coolpany-SE",children:(0,r.jsx)("img",{src:"https://avatars.githubusercontent.com/u/96304487?v=4"})}),(0,r.jsx)("div",{class:"avatar__intro",children:(0,r.jsx)("div",{class:"avatar__name",children:(0,r.jsx)(a.p,{children:"Coolpany-SE"})})})]})})]}),"\n",(0,r.jsx)(a.h2,{id:"rustacean-sticker-pack-",children:"Rustacean Sticker Pack \ud83e\udd80"}),"\n",(0,r.jsx)(a.p,{children:"The Rustacean Sticker Pack is the perfect way to express your passion for Rust.\nOur stickers are made with a premium water-resistant vinyl with a unique matte finish.\nStick them on your laptop, notebook, or any gadget to show off your love for Rust!"}),"\n",(0,r.jsx)(a.p,{children:"Moreover, all proceeds contributes directly to the ongoing development of SeaQL projects."}),"\n",(0,r.jsx)(a.p,{children:"Sticker Pack Contents:"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsx)(a.li,{children:"Logo of SeaQL projects: SeaQL, SeaORM, SeaQuery, Seaography, FireDBG"}),"\n",(0,r.jsx)(a.li,{children:"Mascot of SeaQL: Terres the Hermit Crab"}),"\n",(0,r.jsx)(a.li,{children:"Mascot of Rust: Ferris the Crab"}),"\n",(0,r.jsx)(a.li,{children:"The Rustacean word"}),"\n"]}),"\n",(0,r.jsx)(a.p,{children:(0,r.jsx)(a.a,{href:"https://www.sea-ql.org/sticker-pack/",children:"Support SeaQL and get a Sticker Pack!"})}),"\n",(0,r.jsx)("a",{href:"https://www.sea-ql.org/sticker-pack/",children:(0,r.jsx)("img",{style:{borderRadius:"25px"},alt:"Rustacean Sticker Pack by SeaQL",src:"https://www.sea-ql.org/static/sticker-pack-1s.jpg"})})]})}function h(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);