"use strict";(self.webpackChunksea_streamer=self.webpackChunksea_streamer||[]).push([[6318],{2179:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"getting-started/architecture","title":"SeaStreamer Architecture","description":"The architecture of sea-streamer is constructed by a number of sub-crates:","source":"@site/versioned_docs/version-0.2.x/02-getting-started/02-architecture.md","sourceDirName":"02-getting-started","slug":"/getting-started/architecture","permalink":"/preview/pr-150/SeaStreamer/docs/0.2.x/getting-started/architecture","draft":false,"unlisted":false,"editUrl":"https://github.com/SeaQL/seaql.github.io/edit/master/SeaStreamer/versioned_docs/version-0.2.x/02-getting-started/02-architecture.md","tags":[],"version":"0.2.x","lastUpdatedBy":"Chris Tsang","lastUpdatedAt":1756074952000,"sidebarPosition":2,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Configuring Features","permalink":"/preview/pr-150/SeaStreamer/docs/0.2.x/getting-started/configuration"},"next":{"title":"Example Processors","permalink":"/preview/pr-150/SeaStreamer/docs/0.2.x/getting-started/examples"}}');var a=r(8790),n=r(6484);const i={},c="SeaStreamer Architecture",d={},o=[{value:"<code>sea-streamer-types</code>: Traits &amp; Types",id:"sea-streamer-types-traits--types",level:3},{value:"<code>sea-streamer-socket</code>: Backend-agnostic Socket API",id:"sea-streamer-socket-backend-agnostic-socket-api",level:3},{value:"<code>sea-streamer-kafka</code>: Kafka / Redpanda Backend",id:"sea-streamer-kafka-kafka--redpanda-backend",level:3},{value:"<code>sea-streamer-redis</code>: Redis Backend",id:"sea-streamer-redis-redis-backend",level:3},{value:"<code>sea-streamer-stdio</code>: Standard I/O Backend",id:"sea-streamer-stdio-standard-io-backend",level:3},{value:"<code>sea-streamer-runtime</code>: Async runtime abstraction",id:"sea-streamer-runtime-async-runtime-abstraction",level:3}];function l(e){const s={a:"a",code:"code",em:"em",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",ul:"ul",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"seastreamer-architecture",children:"SeaStreamer Architecture"})}),"\n",(0,a.jsxs)(s.p,{children:["The architecture of ",(0,a.jsx)(s.a,{href:"https://docs.rs/sea-streamer",children:(0,a.jsx)(s.code,{children:"sea-streamer"})})," is constructed by a number of sub-crates:"]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.a,{href:"https://docs.rs/sea-streamer-types",children:(0,a.jsx)(s.code,{children:"sea-streamer-types"})})}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.a,{href:"https://docs.rs/sea-streamer-socket",children:(0,a.jsx)(s.code,{children:"sea-streamer-socket"})}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.a,{href:"https://docs.rs/sea-streamer-kafka",children:(0,a.jsx)(s.code,{children:"sea-streamer-kafka"})})}),"\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.a,{href:"https://docs.rs/sea-streamer-redis",children:(0,a.jsx)(s.code,{children:"sea-streamer-redis"})})}),"\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.a,{href:"https://docs.rs/sea-streamer-stdio",children:(0,a.jsx)(s.code,{children:"sea-streamer-stdio"})})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.a,{href:"https://docs.rs/sea-streamer-runtime",children:(0,a.jsx)(s.code,{children:"sea-streamer-runtime"})})}),"\n"]}),"\n",(0,a.jsxs)(s.h3,{id:"sea-streamer-types-traits--types",children:[(0,a.jsx)(s.code,{children:"sea-streamer-types"}),": Traits & Types"]}),"\n",(0,a.jsx)(s.p,{children:"This crate defines all the traits and types for the SeaStreamer API, but does not provide any implementation."}),"\n",(0,a.jsxs)(s.h3,{id:"sea-streamer-socket-backend-agnostic-socket-api",children:[(0,a.jsx)(s.code,{children:"sea-streamer-socket"}),": Backend-agnostic Socket API"]}),"\n",(0,a.jsx)(s.p,{children:"Akin to how SeaORM allows you to build applications for different databases, SeaStreamer allows you to build\nstream processors for different streaming servers."}),"\n",(0,a.jsxs)(s.p,{children:["While the ",(0,a.jsx)(s.code,{children:"sea-streamer-types"})," crate provides a nice trait-based abstraction, this crates provides a concrete-type API,\nso that your program can stream from/to any SeaStreamer backend selected by the user ",(0,a.jsx)(s.em,{children:"on runtime"}),"."]}),"\n",(0,a.jsxs)(s.p,{children:["This allows you to do neat things, like generating data locally and then stream them to Redis / Kafka. Or in the other\nway, sink data from server to work on them locally. All ",(0,a.jsx)(s.em,{children:"without recompiling"})," the stream processor."]}),"\n",(0,a.jsxs)(s.h3,{id:"sea-streamer-kafka-kafka--redpanda-backend",children:[(0,a.jsx)(s.code,{children:"sea-streamer-kafka"}),": Kafka / Redpanda Backend"]}),"\n",(0,a.jsx)(s.p,{children:"This is the Kafka / Redpanda backend implementation for SeaStreamer.\nThis crate provides a comprehensive type system that makes working with Kafka easier and safer."}),"\n",(0,a.jsxs)(s.p,{children:["All API (many are sync) are properly wrapped as async. Methods are also marked ",(0,a.jsx)(s.code,{children:"&mut"})," to eliminate possible race conditions."]}),"\n",(0,a.jsxs)(s.p,{children:["This crate depends on ",(0,a.jsx)(s.a,{href:"https://docs.rs/rdkafka",children:(0,a.jsx)(s.code,{children:"rdkafka"})}),",\nwhich in turn depends on ",(0,a.jsx)(s.a,{href:"https://docs.rs/librdkafka-sys",children:"librdkafka-sys"}),", which itself is a wrapper of\n",(0,a.jsx)(s.a,{href:"https://docs.confluent.io/platform/current/clients/librdkafka/html/index.html",children:"librdkafka"}),"."]}),"\n",(0,a.jsxs)(s.h3,{id:"sea-streamer-redis-redis-backend",children:[(0,a.jsx)(s.code,{children:"sea-streamer-redis"}),": Redis Backend"]}),"\n",(0,a.jsx)(s.p,{children:"This is the Redis backend implementation for SeaStreamer. This crate provides a high-level async API on top of Redis that makes working with Redis Streams fool-proof:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"Implements the familiar SeaStreamer abstract interface"}),"\n",(0,a.jsx)(s.li,{children:"A comprehensive type system that guides/restricts you with the API"}),"\n",(0,a.jsx)(s.li,{children:"High-level API, so you don't call XADD, XREAD or XACK anymore"}),"\n",(0,a.jsx)(s.li,{children:"Mutex-free implementation: concurrency achieved by message passing"}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:["This crate is built on top of ",(0,a.jsx)(s.a,{href:"https://docs.rs/redis",children:(0,a.jsx)(s.code,{children:"redis"})}),"."]}),"\n",(0,a.jsxs)(s.h3,{id:"sea-streamer-stdio-standard-io-backend",children:[(0,a.jsx)(s.code,{children:"sea-streamer-stdio"}),": Standard I/O Backend"]}),"\n",(0,a.jsxs)(s.p,{children:["This is the ",(0,a.jsx)(s.code,{children:"stdio"})," backend implementation for SeaStreamer. It is designed to be connected together with unix pipes,\nenabling great flexibility when developing stream processors or processing data locally."]}),"\n",(0,a.jsxs)(s.p,{children:["You can connect processors together with pipes: ",(0,a.jsx)(s.code,{children:"processor_a | processor_b"}),"."]}),"\n",(0,a.jsxs)(s.h3,{id:"sea-streamer-runtime-async-runtime-abstraction",children:[(0,a.jsx)(s.code,{children:"sea-streamer-runtime"}),": Async runtime abstraction"]}),"\n",(0,a.jsxs)(s.p,{children:["This crate provides a small set of functions aligning the type signatures between ",(0,a.jsx)(s.code,{children:"async-std"})," and ",(0,a.jsx)(s.code,{children:"tokio"}),",\nso that you can build applications generic to both runtimes."]})]})}function h(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},6484:(e,s,r)=>{r.d(s,{R:()=>i,x:()=>c});var t=r(2374);const a={},n=t.createContext(a);function i(e){const s=t.useContext(n);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(n.Provider,{value:s},e.children)}}}]);