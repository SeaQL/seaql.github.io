"use strict";(self.webpackChunksea_streamer=self.webpackChunksea_streamer||[]).push([[7575],{4254:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>i,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>d,toc:()=>a});const d=JSON.parse('{"id":"streamer/producer","title":"Producer","description":"The Producer trait defines the common interface of stream producers. Producer implements Clone, so you can use it like an mpsc::Sender.","source":"@site/docs/03-streamer/02-producer.md","sourceDirName":"03-streamer","slug":"/streamer/producer","permalink":"/preview/pr-150/SeaStreamer/docs/next/streamer/producer","draft":false,"unlisted":false,"editUrl":"https://github.com/SeaQL/seaql.github.io/edit/master/SeaStreamer/docs/03-streamer/02-producer.md","tags":[],"version":"current","lastUpdatedBy":"Chris Tsang","lastUpdatedAt":1756120076000,"sidebarPosition":2,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Streamer","permalink":"/preview/pr-150/SeaStreamer/docs/next/streamer/streamer"},"next":{"title":"Consumer","permalink":"/preview/pr-150/SeaStreamer/docs/next/streamer/consumer"}}');var n=s(8790),t=s(6484);const c={},o="Producer",i={},a=[{value:"<code>ProducerOptions</code>",id:"produceroptions",level:2},{value:"Redis semantics",id:"redis-semantics",level:4},{value:"<code>send</code>",id:"send",level:2},{value:"<code>Receipt</code>",id:"receipt",level:3},{value:"<code>send_to</code>",id:"send_to",level:2},{value:"<code>flush</code>",id:"flush",level:2},{value:"<code>end</code>",id:"end",level:2},{value:"<code>anchor</code>",id:"anchor",level:2},{value:"<code>anchored</code>",id:"anchored",level:2}];function l(e){const r={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",ul:"ul",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"producer",children:"Producer"})}),"\n",(0,n.jsxs)(r.p,{children:["The ",(0,n.jsx)(r.a,{href:"https://docs.rs/sea-streamer/*/sea_streamer/trait.Producer.html",children:(0,n.jsx)(r.code,{children:"Producer"})})," trait defines the common interface of stream producers. ",(0,n.jsx)(r.code,{children:"Producer"})," implements ",(0,n.jsx)(r.code,{children:"Clone"}),", so you can use it like an ",(0,n.jsx)(r.code,{children:"mpsc::Sender"}),"."]}),"\n",(0,n.jsx)(r.p,{children:"Implemented by:"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"https://docs.rs/sea-streamer-kafka/*/sea_streamer_kafka/struct.KafkaProducer.html",children:(0,n.jsx)(r.code,{children:"KafkaProducer"})})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"https://docs.rs/sea-streamer-redis/*/sea_streamer_redis/struct.RedisProducer.html",children:(0,n.jsx)(r.code,{children:"RedisProducer"})})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"https://docs.rs/sea-streamer-stdio/*/sea_streamer_stdio/struct.StdioProducer.html",children:(0,n.jsx)(r.code,{children:"StdioProducer"})})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"https://docs.rs/sea-streamer-file/*/sea_streamer_file/struct.FileProducer.html",children:(0,n.jsx)(r.code,{children:"FileProducer"})})}),"\n"]}),"\n",(0,n.jsx)(r.h2,{id:"produceroptions",children:(0,n.jsx)(r.code,{children:"ProducerOptions"})}),"\n",(0,n.jsxs)(r.admonition,{type:"info",children:[(0,n.jsx)(r.h4,{id:"redis-semantics",children:"Redis semantics"}),(0,n.jsxs)(r.p,{children:["You can assign custom sharders to Producers. Sharding simply means splitting a stream into multiple keys, in the format of ",(0,n.jsx)(r.code,{children:"STREAM_KEY:SHARD_ID"}),"."]})]}),"\n",(0,n.jsx)(r.h2,{id:"send",children:(0,n.jsx)(r.code,{children:"send"})}),"\n",(0,n.jsxs)(r.p,{children:["Send a message to the already anchored stream. This function is non-blocking. You don\u2019t have to ",(0,n.jsx)(r.code,{children:"await"})," the future if you are not interested in the ",(0,n.jsx)(r.code,{children:"Receipt"}),"."]}),"\n",(0,n.jsxs)(r.p,{children:["If the producer is not anchored, this will return ",(0,n.jsx)(r.code,{children:"StreamErr::NotAnchored"})," error."]}),"\n",(0,n.jsx)(r.h3,{id:"receipt",children:(0,n.jsx)(r.code,{children:"Receipt"})}),"\n",(0,n.jsxs)(r.p,{children:["If you await the future, you will get a receipt composed of (StreamKey, ShardId, SeqNo, Timestamp). This usually means that the message has been ",(0,n.jsx)(r.em,{children:"received by"})," the server, but may not guarantee that the message is already ",(0,n.jsx)(r.em,{children:"persisted"}),"."]}),"\n",(0,n.jsx)(r.h2,{id:"send_to",children:(0,n.jsx)(r.code,{children:"send_to"})}),"\n",(0,n.jsxs)(r.p,{children:["Like ",(0,n.jsx)(r.code,{children:"send"}),", but to the specified stream key."]}),"\n",(0,n.jsx)(r.h2,{id:"flush",children:(0,n.jsx)(r.code,{children:"flush"})}),"\n",(0,n.jsx)(r.p,{children:"Flush all pending messages."}),"\n",(0,n.jsx)(r.h2,{id:"end",children:(0,n.jsx)(r.code,{children:"end"})}),"\n",(0,n.jsx)(r.p,{children:"End this producer, only after flushing all it's pending messages."}),"\n",(0,n.jsx)(r.h2,{id:"anchor",children:(0,n.jsx)(r.code,{children:"anchor"})}),"\n",(0,n.jsxs)(r.p,{children:["Lock this producer to a particular stream. This function can only be called once. Subsequent calls should return ",(0,n.jsx)(r.code,{children:"StreamErr::AlreadyAnchored"})," error."]}),"\n",(0,n.jsx)(r.h2,{id:"anchored",children:(0,n.jsx)(r.code,{children:"anchored"})}),"\n",(0,n.jsxs)(r.p,{children:["If the producer is already anchored, return a reference to the StreamKey. If the producer is not anchored, this will return ",(0,n.jsx)(r.code,{children:"StreamErr::NotAnchored"})," error."]})]})}function h(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},6484:(e,r,s)=>{s.d(r,{R:()=>c,x:()=>o});var d=s(2374);const n={},t=d.createContext(n);function c(e){const r=d.useContext(t);return d.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),d.createElement(t.Provider,{value:r},e.children)}}}]);