"use strict";(self.webpackChunksea_orm_x=self.webpackChunksea_orm_x||[]).push([[137],{2204:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>a});var s=t(2374);const i={},o=s.createContext(i);function c(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(o.Provider,{value:n},e.children)}},4125:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"install-and-config/connection","title":"Database Connection","description":"To obtain a database connection, use the Database interface:","source":"@site/docs/02-install-and-config/02-connection.md","sourceDirName":"02-install-and-config","slug":"/install-and-config/connection","permalink":"/preview/pr-150/SeaORM-X/docs/install-and-config/connection","draft":false,"unlisted":false,"editUrl":"https://github.com/SeaQL/seaql.github.io/edit/master/SeaORM-X/docs/02-install-and-config/02-connection.md","tags":[],"version":"current","lastUpdatedBy":"Chris Tsang","lastUpdatedAt":1756136705000,"sidebarPosition":2,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Database & Async Runtime","permalink":"/preview/pr-150/SeaORM-X/docs/install-and-config/database-and-async-runtime"},"next":{"title":"Setting Up Migration","permalink":"/preview/pr-150/SeaORM-X/docs/migration/setting-up-migration"}}');var i=t(8790),o=t(2204);const c={},a="Database Connection",r={},l=[{value:"Connection String",id:"connection-string",level:2},{value:"MSSQL",id:"mssql",level:3},{value:"Specify a schema",id:"specify-a-schema",level:4},{value:"Trust Peer Certificate",id:"trust-peer-certificate",level:4},{value:"Connect Options",id:"connect-options",level:2},{value:"Checking Connection is Valid",id:"checking-connection-is-valid",level:2},{value:"Closing Connection",id:"closing-connection",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"database-connection",children:"Database Connection"})}),"\n",(0,i.jsxs)(n.p,{children:["To obtain a database connection, use the ",(0,i.jsx)(n.a,{href:"https://docs.rs/sea-orm/*/sea_orm/struct.Database.html",children:(0,i.jsx)(n.code,{children:"Database"})})," interface:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",children:'let db: DatabaseConnection = Database::connect("protocol://username:password@host/database").await?;\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"protocol"})," can be ",(0,i.jsx)(n.code,{children:"mssql:"}),", etc."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"host"})," is usually ",(0,i.jsx)(n.code,{children:"localhost"}),", a domain name or an IP address."]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["If you can't get ",(0,i.jsx)(n.code,{children:"localhost"})," to work, try putting in an IP address and port number, e.g. ",(0,i.jsx)(n.code,{children:"127.0.0.1:1433"})," or even ",(0,i.jsx)(n.code,{children:"192.168.x.x"}),"."]})}),"\n",(0,i.jsxs)(n.p,{children:["Under the hood, a ",(0,i.jsx)(n.code,{children:"sqlz::Pool"})," is created and owned by ",(0,i.jsx)(n.a,{href:"https://docs.rs/sea-orm/*/sea_orm/enum.DatabaseConnection.html",children:(0,i.jsx)(n.code,{children:"DatabaseConnection"})}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Each time you call ",(0,i.jsx)(n.code,{children:"execute"})," or ",(0,i.jsx)(n.code,{children:"query_one/all"})," on it, a connection will be acquired and released from the pool."]}),"\n",(0,i.jsxs)(n.p,{children:["Multiple queries will execute in parallel as you ",(0,i.jsx)(n.code,{children:"await"})," on them."]}),"\n",(0,i.jsx)(n.h2,{id:"connection-string",children:"Connection String"}),"\n",(0,i.jsx)(n.p,{children:"Here are some tips for database specific options:"}),"\n",(0,i.jsx)(n.h3,{id:"mssql",children:"MSSQL"}),"\n",(0,i.jsx)(n.h4,{id:"specify-a-schema",children:"Specify a schema"}),"\n",(0,i.jsxs)(n.p,{children:["If the schema is ",(0,i.jsx)(n.code,{children:"dbo"}),", simply write:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"mssql://username:password@host/database\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Or, specify the schema name by providing an extra ",(0,i.jsx)(n.code,{children:"currentSchema"})," query param."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"mssql://username:password@host/database?currentSchema=my_schema\n"})}),"\n",(0,i.jsx)(n.h4,{id:"trust-peer-certificate",children:"Trust Peer Certificate"}),"\n",(0,i.jsxs)(n.p,{children:["You can trust peer certificate by providing an extra ",(0,i.jsx)(n.code,{children:"trustCertificate"})," query param."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"mssql://username:password@host/database?trustCertificate=true\n"})}),"\n",(0,i.jsx)(n.h2,{id:"connect-options",children:"Connect Options"}),"\n",(0,i.jsxs)(n.p,{children:["To configure the connection, use the ",(0,i.jsx)(n.a,{href:"https://docs.rs/sea-orm/*/sea_orm/struct.ConnectOptions.html",children:(0,i.jsx)(n.code,{children:"ConnectOptions"})})," interface:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",children:'let mut opt = ConnectOptions::new("protocol://username:password@host/database");\nopt.max_connections(100)\n    .min_connections(5)\n    .connect_timeout(Duration::from_secs(8))\n    .acquire_timeout(Duration::from_secs(8))\n    .idle_timeout(Duration::from_secs(8))\n    .max_lifetime(Duration::from_secs(8))\n    .sqlx_logging(true)\n    .sqlx_logging_level(log::LevelFilter::Info);\n\nlet db = Database::connect(opt).await?;\n'})}),"\n",(0,i.jsx)(n.h2,{id:"checking-connection-is-valid",children:"Checking Connection is Valid"}),"\n",(0,i.jsx)(n.p,{children:"Checks if a connection to the database is still valid."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",children:"|db: DatabaseConnection| {\n    assert!(db.ping().await.is_ok());\n    db.clone().close().await;\n    assert!(matches!(db.ping().await, Err(DbErr::ConnectionAcquire)));\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"closing-connection",children:"Closing Connection"}),"\n",(0,i.jsxs)(n.p,{children:["The connection will be automatically closed on drop. To close the connection explicitly, call the ",(0,i.jsx)(n.code,{children:"close"})," method."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",children:"let db = Database::connect(url).await?;\n\n// Closing connection here\ndb.close().await?;\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);