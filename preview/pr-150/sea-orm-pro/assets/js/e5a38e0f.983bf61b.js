"use strict";(self.webpackChunksea_orm_pro=self.webpackChunksea_orm_pro||[]).push([[50],{1316:(n,e,t)=>{t.d(e,{A:()=>a});const a=t.p+"assets/images/site-config-dashboard-info-1cef265818621de3a8c2e7d3626d1887.png"},1374:(n,e,t)=>{t.d(e,{A:()=>a});const a=t.p+"assets/images/site-config-dashboard-chart-pie-dark-6a2e5881f1acfc62fdd223ae9ef73e07.png"},2275:(n,e,t)=>{t.d(e,{A:()=>a});const a=t.p+"assets/images/site-config-dashboard-chart-pie-c43c34954bad6ac1b202260f753908e7.png"},4073:(n,e,t)=>{t.d(e,{A:()=>a});const a=t.p+"assets/images/site-config-dashboard-chart-dark-2123d442034759a2283ea33ba4943a74.png"},4426:(n,e,t)=>{t.d(e,{A:()=>a});const a=t.p+"assets/images/site-config-dashboard-chart-949cc4d41db7c3f3281fc9997bf6db3a.png"},4971:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>s,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"site-config/dashboard","title":"Dashboard","description":"Info Card","source":"@site/docs/03-site-config/03-dashboard.md","sourceDirName":"03-site-config","slug":"/site-config/dashboard","permalink":"/preview/pr-150/sea-orm-pro/docs/site-config/dashboard","draft":false,"unlisted":false,"editUrl":"https://github.com/SeaQL/seaql.github.io/edit/master/sea-orm-pro/docs/03-site-config/03-dashboard.md","tags":[],"version":"current","lastUpdatedBy":"Chris Tsang","lastUpdatedAt":1755628065000,"sidebarPosition":3,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Theme","permalink":"/preview/pr-150/sea-orm-pro/docs/site-config/theme"},"next":{"title":"Overview","permalink":"/preview/pr-150/sea-orm-pro/docs/raw-table-config/overview"}}');var r=t(8790),o=t(6059);const i={},c="Dashboard",s={},d=[{value:"Info Card",id:"info-card",level:2},{value:"Chart",id:"chart",level:2},{value:"Fetching Chart Data",id:"fetching-chart-data",level:3},{value:"Line Chart",id:"line-chart",level:3},{value:"Datetime Picker",id:"datetime-picker",level:4},{value:"Pie Chart",id:"pie-chart",level:3},{value:"Full Spec",id:"full-spec",level:2}];function l(n){const e={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"dashboard",children:"Dashboard"})}),"\n",(0,r.jsx)(e.h2,{id:"info-card",children:"Info Card"}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.img,{src:t(1316).A+"#light"}),"\n",(0,r.jsx)(e.img,{src:t(6719).A+"#dark"})]}),"\n",(0,r.jsx)(e.p,{children:"Setting the title of the info card."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-toml",metastring:"title=pro_admin/dashboard.toml",children:'# Title of info card section\ntitle = "SeaORM Pro"\n# Subtitle of info card section\nsubtitle = "Build professional admin panels with SeaORM Pro."\n'})}),"\n",(0,r.jsx)(e.p,{children:"You can add multiple info cards."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-toml",metastring:"title=pro_admin/dashboard.toml",children:'# 1st info card\n[[info.card]]\n# Title of info card\ntitle = "What is SeaORM Pro?"\n# Description of info card\ndescription = "SeaORM Pro is full-stack framework allowing you to quickly and easily launch an admin panel for your application."\n# Learn more link of info card\nlink = "https://www.sea-ql.org/sea-orm-pro/"\n\n\n# 2nd info card\n[[info.card]]\n# ...\n\n# 3rd info card\n[[info.card]]\n# ...\n'})}),"\n",(0,r.jsx)(e.h2,{id:"chart",children:"Chart"}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.img,{src:t(4426).A+"#light"}),"\n",(0,r.jsx)(e.img,{src:t(4073).A+"#dark"})]}),"\n",(0,r.jsx)(e.p,{children:"There are some common configuration for both line chart and pie chart. Including the gutter size between chart, title of chart and the column span of each chart."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-toml",metastring:"title=pro_admin/dashboard.toml",children:'# Chart grid\n[[row]]\n# Row gutter\ngutter = 16\n\n\n# 1st chart\n[[row.col]]\n# Span half row\nspan = 12\n# Title of the chart\ntitle = "New Customers Per Month"\n\n[row.col.chart]\n# An unique key for fetching chart data\nchart = "new_customer_by_month"\n# Kind of chart\nkind = "line"\n# ...\n\n\n# 2nd chart\n[[row.col]]\n# Span half row\nspan = 12\n# Title of the chart\ntitle = "Sales Value of Week"\n\n[row.col.chart]\n# An unique key for fetching chart data\nchart = "sales_value_by_day"\n# Kind of chart\nkind = "line"\n# ...\n\n\n# 3rd chart\n[[row.col]]\n# Span entire row\nspan = 24\n# Title of the chart\ntitle = "Products of each Product Category"\n\n[row.col.chart]\n# An unique key for fetching chart data\nchart = "product_by_product_category"\n# Kind of chart\nkind = "pie"\n# ...\n'})}),"\n",(0,r.jsx)(e.h3,{id:"fetching-chart-data",children:"Fetching Chart Data"}),"\n",(0,r.jsxs)(e.p,{children:["A unique key, ",(0,r.jsx)(e.code,{children:"chart"}),", is defined for each chart to fetch chart data from the backend API. The SQL query can be found in the admin controller:"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",metastring:"title=src/controllers/admin.rs",children:'pub async fn dashboard(\n    _auth: auth::JWT,\n    State(ctx): State<AppContext>,\n    Json(body): Json<DashboardBody>,\n) -> Result<Response> {\n    let db = &ctx.db;\n    let data = match body.graph.as_str() {\n        "product_by_product_category" => {\n            product_category::Entity::find()\n                .select_only()\n                .column_as(Expr::expr(Expr::col((product_category::Entity, product_category::Column::Name))), DatumColumn::Key)\n                .column_as(Expr::expr(Func::cast_as(Func::count(Expr::col(Asterisk)), int_keyword(db))), DatumColumn::Val)\n                .left_join(product::Entity)\n                .group_by(Expr::col(DatumColumn::Key))\n                .order_by_desc(Expr::col(DatumColumn::Val))\n                .into_model::<Datum>()\n                .all(db)\n                .await?\n        },\n        _ => not_found()?,\n    };\n    format::json(data)\n}\n'})}),"\n",(0,r.jsx)(e.h3,{id:"line-chart",children:"Line Chart"}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.img,{src:t(5507).A+"#light"}),"\n",(0,r.jsx)(e.img,{src:t(6750).A+"#dark"})]}),"\n",(0,r.jsx)(e.h4,{id:"datetime-picker",children:"Datetime Picker"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["Available ",(0,r.jsx)(e.code,{children:"timescale"}),' options: "time" / "day" / "month" / "year" / "decade".']}),"\n",(0,r.jsxs)(e.li,{children:["The default value of the datetime picker can be set to any exact value via ",(0,r.jsx)(e.code,{children:"from_date"})," and ",(0,r.jsx)(e.code,{children:"to_date"})]}),"\n",(0,r.jsxs)(e.li,{children:["Or, setting the default value dynamically based on current date: ",(0,r.jsx)(e.code,{children:"default_date_range"}),' can starts with "next" or "last" then follow a integer number and ends with any of "day" / "week" / "month" / "quarter" / "year"',"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsxs)(e.p,{children:["e.g. ",(0,r.jsx)(e.code,{children:"default_date_range"}),' = "last 1 day", "last 7 days", "next 1 month", "next 3 years"']}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-toml",metastring:"title=pro_admin/dashboard.toml",children:'# 2nd chart\n[[row.col]]\n# Span half row\nspan = 12\n# Title of the chart\ntitle = "Sales Value of Week"\n\n[row.col.chart]\n# An unique key for fetching chart data\nchart = "sales_value_by_day"\n# Kind of chart\nkind = "line"\n# Time scale of datetime picker\ntimescale = "day"\n# Default start of datetime\nfrom_date = "2024-12-22"\n# Default end of datetime\nto_date = "2024-12-28"\n# Default dynamic date range based on current date\ndefault_date_range = "last 7 days"\n# Title of X axis\nx_axis_title = "Date"\n# Title of Y axis\ny_axis_title = "Sales"\n'})}),"\n",(0,r.jsx)(e.h3,{id:"pie-chart",children:"Pie Chart"}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.img,{src:t(2275).A+"#light"}),"\n",(0,r.jsx)(e.img,{src:t(1374).A+"#dark"})]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-toml",metastring:"title=pro_admin/dashboard.toml",children:'# 3rd chart\n[[row.col]]\n# Span entire row\nspan = 24\n# Title of the chart\ntitle = "Products of each Product Category"\n\n[row.col.chart]\n# An unique key for fetching chart data\nchart = "product_by_product_category"\n# Kind of chart\nkind = "pie"\n# Title of X axis\nx_axis_title = "Product Category"\n# Title of Y axis\ny_axis_title = "No. of Products"\n'})}),"\n",(0,r.jsx)(e.h2,{id:"full-spec",children:"Full Spec"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-toml",metastring:"title=pro_admin/dashboard.toml",children:'# Title of info card section\ntitle = "SeaORM Pro"\n# Subtitle of info card section\nsubtitle = "Build professional admin panels with SeaORM Pro."\n\n\n# 1st info card\n[[info.card]]\n# Title of info card\ntitle = "What is SeaORM Pro?"\n# Description of info card\ndescription = "SeaORM Pro is full-stack framework allowing you to quickly and easily launch an admin panel for your application."\n# Learn more link of info card\nlink = "https://www.sea-ql.org/sea-orm-pro/"\n\n\n# 2nd info card\n[[info.card]]\n# Title of info card\ntitle = "Download the Demo"\n# Description of info card\ndescription = "The source code of this demo is hosted on SeaQL/sea-orm-pro."\n# Learn more link of info card\nlink = "https://github.com/SeaQL/sea-orm-pro"\n\n\n# 3rd info card\n[[info.card]]\n# Title of info card\ntitle = "Learn More"\n# Description of info card\ndescription = "Learn how to customize the admin panel to make it your own!"\n# Learn more link of info card\nlink = "https://www.sea-ql.org/sea-orm-pro/docs/site-config/overview/"\n\n\n# Chart grid\n[[row]]\n# Row gutter\ngutter = 16\n\n\n# 1st chart\n[[row.col]]\n# Span half row\nspan = 12\n# Title of the chart\ntitle = "New Customers Per Month"\n\n[row.col.chart]\n# An unique key for fetching chart data\nchart = "new_customer_by_month"\n# Kind of chart\nkind = "line"\n# Time scale of datetime picker\ntimescale = "month"\n# Default start of datetime\nfrom_date = "2024-01"\n# Default end of datetime\nto_date = "2024-12"\n# Title of X axis\nx_axis_title = "Month"\n# Title of Y axis\ny_axis_title = "No. of Customers"\n\n\n# 2nd chart\n[[row.col]]\n# Span half row\nspan = 12\n# Title of the chart\ntitle = "Sales Value of Week"\n\n[row.col.chart]\n# An unique key for fetching chart data\nchart = "sales_value_by_day"\n# Kind of chart\nkind = "line"\n# Time scale of datetime picker\ntimescale = "day"\n# Default dynamic date range based on current date\ndefault_date_range = "last 7 days"\n# Title of X axis\nx_axis_title = "Date"\n# Title of Y axis\ny_axis_title = "Sales"\n\n\n# 3rd chart\n[[row.col]]\n# Span entire row\nspan = 24\n# Title of the chart\ntitle = "Products of each Product Category"\n\n[row.col.chart]\n# An unique key for fetching chart data\nchart = "product_by_product_category"\n# Kind of chart\nkind = "pie"\n# Title of X axis\nx_axis_title = "Product Category"\n# Title of Y axis\ny_axis_title = "No. of Products"\n'})})]})}function h(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(l,{...n})}):l(n)}},5507:(n,e,t)=>{t.d(e,{A:()=>a});const a=t.p+"assets/images/site-config-dashboard-chart-line-cd132b2615629958bf8aff44ec50b34a.png"},6059:(n,e,t)=>{t.d(e,{R:()=>i,x:()=>c});var a=t(2374);const r={},o=a.createContext(r);function i(n){const e=a.useContext(o);return a.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:i(n.components),a.createElement(o.Provider,{value:e},n.children)}},6719:(n,e,t)=>{t.d(e,{A:()=>a});const a=t.p+"assets/images/site-config-dashboard-info-dark-f2c9e6c8c5153e916aa6d1911ec9ed4d.png"},6750:(n,e,t)=>{t.d(e,{A:()=>a});const a=t.p+"assets/images/site-config-dashboard-chart-line-dark-ab7bdd6a8428576b6f5c972f81441b93.png"}}]);