"use strict";(self.webpackChunkseaography=self.webpackChunkseaography||[]).push([[921],{7878:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"getting-started","title":"Getting started","description":"Installing CLI","source":"@site/versioned_docs/version-0.3.0/01-getting-started.md","sourceDirName":".","slug":"/getting-started","permalink":"/preview/pr-150/Seaography/docs/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/SeaQL/seaql.github.io/edit/master/Seaography/versioned_docs/version-0.3.0/01-getting-started.md","tags":[],"version":"0.3.0","lastUpdatedBy":"Chris Tsang","lastUpdatedAt":1755440363000,"sidebarPosition":1,"frontMatter":{},"sidebar":"tutorialSidebar","next":{"title":"Running the example","permalink":"/preview/pr-150/Seaography/docs/running-example"}}');var r=n(8790),i=n(8032);const a={},o="Getting started",l={},d=[{value:"Installing CLI",id:"installing-cli",level:2},{value:"CLI parameters",id:"cli-parameters",level:2},{value:"Notes",id:"notes",level:4},{value:"Prerequisites",id:"prerequisites",level:2}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"getting-started",children:"Getting started"})}),"\n",(0,r.jsx)(t.h2,{id:"installing-cli",children:"Installing CLI"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"cargo install seaography-cli\n"})}),"\n",(0,r.jsx)(t.h2,{id:"cli-parameters",children:"CLI parameters"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"seaography-cli\n\nUSAGE:\n    seaography-cli [OPTIONS] <DATABASE_URL> <CRATE_NAME> <DESTINATION>\n\nARGS:\n    <DATABASE_URL>                               [String] A valid URL pointing to the database\n    <CRATE_NAME>                                 [String] The cargo crate name of the generated project\n    <DESTINATION>                                [String] Path pointing to the output folder, it will create it if does not exist\n\nOPTIONS:\n    -c, --complexity-limit <COMPLEXITY_LIMIT>    [Number] Limit GraphQL query complexity so it cannot be greater than this number.\n    -d, --depth-limit <DEPTH_LIMIT>              [String] Limit GraphQL query depth so it cannot be greater than this number\n    -e, --expanded-format <EXPANDED_FORMAT>      [Boolean]  If you want the Sea ORM Entities to be in extended format\n    -f, --framework <FRAMEWORK>                  [Enum] Dictates the generator what web API framework to use. Possible values: actix, poem (default=poem)\n    -h, --help                                   Print help information\n    -V, --version                                Print version information\n"})}),"\n",(0,r.jsx)(t.h4,{id:"notes",children:"Notes"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"DATABASE_URL examples:"})," ",(0,r.jsx)(t.code,{children:"mysql://user:pass@127.0.0.1:1235/database_name"}),", ",(0,r.jsx)(t.code,{children:"postgres://user:pass@127.0.0.1/base_name"}),", ",(0,r.jsx)(t.code,{children:"sqlite://my_db.db"})]}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://www.sea-ql.org/SeaORM/docs/generate-entity/expanded-entity-structure/",children:"extended format"})}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsx)(t.p,{children:"In order to understand how the generated code works its recommended to study the following resources:"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://docs.rs/async-graphql/latest/async_graphql/",children:"async-graphql"})}),"\n",(0,r.jsx)(t.p,{children:"Is a server side GraphQL library for Rust."}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://docs.rs/sea-orm/latest/sea_orm/",children:"sea-orm"})}),"\n",(0,r.jsx)(t.p,{children:"SeaORM is a relational ORM to help you build web services in Rust."}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"The web API of the generated project"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.a,{href:"https://docs.rs/crate/poem/latest",children:"poem"}),"\n",(0,r.jsx)(t.a,{href:"https://docs.rs/crate/actix/latest",children:"actix"})]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://docs.rs/tokio/latest/tokio/",children:"tokio*"})}),"\n",(0,r.jsx)(t.p,{children:"A runtime for writing reliable, asynchronous, and slim applications with the Rust programming language."}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8032:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var s=n(2374);const r={},i=s.createContext(r);function a(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);