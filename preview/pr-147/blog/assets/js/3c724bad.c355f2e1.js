"use strict";(self.webpackChunksea_ql_blog=self.webpackChunksea_ql_blog||[]).push([[1495],{5893:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>c});var n=s(7121),r=s(8790),t=s(7630);const i={slug:"2024-08-04-sea-orm-1.0",title:"Announcing SeaORM 1.0 \ud83d\udc1a",author:"SeaQL Team",author_title:"Chris Tsang",author_url:"https://github.com/SeaQL",author_image_url:"https://www.sea-ql.org/blog/img/SeaQL.png",image:"https://www.sea-ql.org/blog/img/SeaORM%201.0%20Banner.png",tags:["news"]},o=void 0,l={authorsImageUrls:[void 0]},c=[{value:"Our Journey",id:"our-journey",level:2},{value:"New Features",id:"new-features",level:2},{value:"Refreshed migration schema definition",id:"refreshed-migration-schema-definition",level:3},{value:"Reworked SQLite Type Mappings",id:"reworked-sqlite-type-mappings",level:3},{value:"Alternative casing support for <code>EntityModel</code> &amp; <code>ActiveEnum</code>",id:"alternative-casing-support-for-entitymodel--activeenum",level:3},{value:"Other Enhancements",id:"other-enhancements",level:3},{value:"Release Planning",id:"release-planning",level:2},{value:"Our Future",id:"our-future",level:2},{value:"SQL Server Support",id:"sql-server-support",level:2},{value:"Sponsor",id:"sponsor",level:2},{value:"Gold Sponsors",id:"gold-sponsors",level:3},{value:"GitHub Sponsors",id:"github-sponsors",level:3},{value:"Rustacean Sticker Pack \ud83e\udd80",id:"rustacean-sticker-pack-",level:2}];function d(e){const a={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("img",{alt:"SeaORM 1.0 Banner",src:"/blog/img/SeaORM%201.0%20Banner.png"}),"\n",(0,r.jsxs)(a.p,{children:["\ud83c\udf89 We are pleased to release ",(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/releases/tag/1.0.0",children:"SeaORM 1.0"})," today! This is an special occasion for us, so this blog post will be a little more than a release notes."]}),"\n",(0,r.jsx)(a.h2,{id:"our-journey",children:"Our Journey"}),"\n",(0,r.jsxs)(a.p,{children:["It's nearly been three years since our ",(0,r.jsx)(a.a,{href:"https://www.sea-ql.org/blog/2021-09-20-introducing-sea-orm/",children:"SeaORM 0.2"})," release. At that time, we set out to build a SQL ORM for the async Rust ecosystem, bringing together the best crates to allow developers to build high-performance and robust web services."]}),"\n",(0,r.jsx)(a.p,{children:"We would like to thank all early-adoptors, contributors and sponsors of SeaORM. Thank you to all our users for your trust and for being a part of our journey."}),"\n",(0,r.jsxs)(a.p,{children:["Today, many startups and companies are building applications in Rust, with SeaORM being an integral part of the stack. We are particularly pleased to see application frameworks, such as ",(0,r.jsx)(a.a,{href:"https://loco.rs/",children:"Loco"}),", that provide tight integration with SeaORM, thereby offering a streamlined developer experience."]}),"\n",(0,r.jsx)(a.p,{children:"I think we've achieved our initial goal! We understand that maturity and stability are important considerations for teams when making technology choices. Therefore, we believe it's now time to stabilize SeaORM."}),"\n",(0,r.jsx)(a.h2,{id:"new-features",children:"New Features"}),"\n",(0,r.jsx)(a.p,{children:"Here are the highlights of some new features and enhancements introduced in SeaORM 1.0."}),"\n",(0,r.jsx)(a.h3,{id:"refreshed-migration-schema-definition",children:"Refreshed migration schema definition"}),"\n",(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/2099",children:"#2099"})," Thanks to the clever design made by Loco, we've refreshed the schema definition syntax."]}),"\n",(0,r.jsx)(a.p,{children:"An old migration script looks like this:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-rust",children:"#[async_trait::async_trait]\nimpl MigrationTrait for Migration {\n    async fn up(&self, manager: &SchemaManager) -> Result<(), DbErr> {\n        manager\n            .create_table(\n                Table::create()\n                    .table(Users::Table)\n                    .if_not_exists()\n                    .col(\n                        ColumnDef::new(Users::Id)\n                            .integer()\n                            .not_null()\n                            .auto_increment()\n                            .primary_key(),\n                    )\n                    .col(ColumnDef::new(Users::Pid).uuid().not_null())\n                    .col(ColumnDef::new(Users::Email).string().not_null().unique_key())\n                    // ...\n    }\n}\n"})}),"\n",(0,r.jsx)(a.p,{children:"Now, using the new schema helpers, you can define the schema with a simplified syntax!"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-rust",children:"// Remember to import `sea_orm_migration::schema::*`\nuse sea_orm_migration::{prelude::*, schema::*};\n\n#[derive(DeriveMigrationName)]\npub struct Migration;\n\n#[async_trait::async_trait]\nimpl MigrationTrait for Migration {\n    async fn up(&self, manager: &SchemaManager) -> Result<(), DbErr> {\n        manager\n            .create_table(\n                Table::create()\n                    .table(Users::Table)\n                    .if_not_exists()\n                    .col(pk_auto(Users::Id)) // Primary key with auto-increment\n                    .col(uuid(Users::Pid)) // UUID column\n                    .col(string_uniq(Users::Email)) // String column with unique and not null constraint\n                    .col(string(Users::Password)) // String column\n                    .col(string(Users::ApiKey).unique_key())\n                    .col(string(Users::Name))\n                    .col(string_null(Users::ResetToken)) // Nullable string column\n                    .col(timestamp_null(Users::ResetSentAt)) // Nullable timestamp column\n                    .col(string_null(Users::EmailVerificationToken))\n                    .col(timestamp_null(Users::EmailVerificationSentAt))\n                    .col(timestamp_null(Users::EmailVerifiedAt))\n                    .to_owned(),\n            )\n            .await\n    }\n\n    // ...\n}\n"})}),"\n",(0,r.jsx)(a.p,{children:"There are three variants for each commonly used column type:"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"<COLUMN_TYPE>()"})," helper function, e.g. ",(0,r.jsx)(a.code,{children:"string()"}),", define a non-null string column"]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"<COLUMN_TYPE>_null()"})," helper function, e.g. ",(0,r.jsx)(a.code,{children:"string_null()"}),", define a nullable string column"]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"<COLUMN_TYPE>_uniq()"})," helper function, e.g. ",(0,r.jsx)(a.code,{children:"string_uniq()"}),", define a non-null and unique string column"]}),"\n"]}),"\n",(0,r.jsxs)(a.p,{children:["The new schema helpers can be used by importing ",(0,r.jsx)(a.code,{children:"sea_orm_migration::schema::*"}),". The migration library is fully backward compatible, so there is no rush to migrate old scripts. The new syntax is recommended for new scripts, and all examples in the SeaORM repository have been updated for demonstration. For advanced use cases, the old SeaQuery syntax can still be used."]}),"\n",(0,r.jsx)(a.h3,{id:"reworked-sqlite-type-mappings",children:"Reworked SQLite Type Mappings"}),"\n",(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/2077",children:"sea-orm#2077"})," ",(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-query/pull/735",children:"sea-query#735"})," ",(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-schema/pull/117",children:"sea-schema#117"})," We've reworked the type mappings for SQLite across the SeaQL ecosystem, such that SeaQuery and SeaSchema are now reciprocal to each other. Migrations written with SeaQuery can be rediscovered by ",(0,r.jsx)(a.code,{children:"sea-orm-cli"})," and generate compatible entities! In other words, the roundtrip is complete."]}),"\n",(0,r.jsx)(a.p,{children:"Data types will be mapped to SQLite types with a custom naming scheme following SQLite's affinity rule:"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"INTEGER"}),": ",(0,r.jsx)(a.code,{children:"integer"}),", ",(0,r.jsx)(a.code,{children:"tiny_integer"}),", ",(0,r.jsx)(a.code,{children:"small_integer"}),", ",(0,r.jsx)(a.code,{children:"big_integer"})," and ",(0,r.jsx)(a.code,{children:"boolean"})," are stored as ",(0,r.jsx)(a.code,{children:"integer"})]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"REAL"}),": ",(0,r.jsx)(a.code,{children:"float"}),", ",(0,r.jsx)(a.code,{children:"double"}),", ",(0,r.jsx)(a.code,{children:"decimal"})," and ",(0,r.jsx)(a.code,{children:"money"})," are stored as ",(0,r.jsx)(a.code,{children:"real"})]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"BLOB"}),": ",(0,r.jsx)(a.code,{children:"blob"})," and ",(0,r.jsx)(a.code,{children:"varbinary_blob"})," are stored as ",(0,r.jsx)(a.code,{children:"blob"})]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"TEXT"}),": all other data types are stored as ",(0,r.jsx)(a.code,{children:"text"}),", including ",(0,r.jsx)(a.code,{children:"string"}),", ",(0,r.jsx)(a.code,{children:"char"}),", ",(0,r.jsx)(a.code,{children:"text"}),", ",(0,r.jsx)(a.code,{children:"json"}),", ",(0,r.jsx)(a.code,{children:"uuid"}),", ",(0,r.jsx)(a.code,{children:"date"}),", ",(0,r.jsx)(a.code,{children:"time"}),", ",(0,r.jsx)(a.code,{children:"datetime"}),", ",(0,r.jsx)(a.code,{children:"timestamp"}),", etc."]}),"\n"]}),"\n",(0,r.jsxs)(a.p,{children:["The full type mapping table is ",(0,r.jsx)(a.a,{href:"https://docs.rs/sea-query/0.31.0-rc.4/sea_query/table/enum.ColumnType.html",children:"documented here"}),". For more information, please refer to our ",(0,r.jsx)(a.a,{href:"https://www.sea-ql.org/blog/2024-04-08-whats-new-in-seaorm-1.0-rc.x/",children:"previous blog post"}),"."]}),"\n",(0,r.jsxs)(a.h3,{id:"alternative-casing-support-for-entitymodel--activeenum",children:["Alternative casing support for ",(0,r.jsx)(a.code,{children:"EntityModel"})," & ",(0,r.jsx)(a.code,{children:"ActiveEnum"})]}),"\n",(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/2170",children:"#2170"})," Added ",(0,r.jsx)(a.code,{children:"rename_all"})," attribute to ",(0,r.jsx)(a.code,{children:"DeriveEntityModel"})," & ",(0,r.jsx)(a.code,{children:"DeriveActiveEnum"})]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-rust",children:'#[derive(DeriveEntityModel)]\n#[sea_orm(table_name = "user", rename_all = "camelCase")]\npub struct Model {\n    #[sea_orm(primary_key)]\n    id: i32,\n    first_name: String, // firstName\n    #[sea_orm(column_name = "lAsTnAmE")]\n    last_name: String, // lAsTnAmE\n}\n\n#[derive(EnumIter, DeriveActiveEnum)]\n#[sea_orm(rs_type = "String", db_type = "String(StringLen::None)", rename_all = "camelCase")]\npub enum TestEnum {\n    DefaultVariant, // defaultVariant\n    #[sea_orm(rename = "kebab-case")]\n    VariantKebabCase, // variant-kebab-case\n    #[sea_orm(rename = "snake_case")]\n    VariantSnakeCase, // variant_snake_case\n    #[sea_orm(string_value = "CuStOmStRiNgVaLuE")]\n    CustomStringValue, // CuStOmStRiNgVaLuE\n}\n'})}),"\n",(0,r.jsx)(a.h3,{id:"other-enhancements",children:"Other Enhancements"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/2185",children:"#2185"})," ",(0,r.jsx)(a.code,{children:"PrimaryKeyArity"})," trait with ",(0,r.jsx)(a.code,{children:"ARITY"})," Constant"]}),"\n"]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-rust",children:"fn get_arity_of<E: EntityTrait>() -> usize {\n    E::PrimaryKey::iter().count() // before; runtime\n    <<E::PrimaryKey as PrimaryKeyTrait>::ValueType as PrimaryKeyArity>::ARITY // now; compile-time\n}\n"})}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/2137",children:"#2137"})," ",(0,r.jsx)(a.code,{children:"DerivePartialModel"})," macro attribute ",(0,r.jsx)(a.code,{children:"entity"})," now supports ",(0,r.jsx)(a.code,{children:"syn::Type"})]}),"\n"]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-rust",children:'#[derive(DerivePartialModel)]\n#[sea_orm(entity = "<entity::Model as ModelTrait>::Entity")]\nstruct EntityNameNotAIdent {\n    #[sea_orm(from_col = "foo2")]\n    _foo: i32,\n    #[sea_orm(from_col = "bar2")]\n    _bar: String,\n}\n'})}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/2146",children:"#2146"})," Added ",(0,r.jsx)(a.code,{children:"RelationDef::from_alias()"})]}),"\n"]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-rust",children:'#[derive(DeriveIden)]\npub struct Cf;\n\nassert_eq!(\n    cake::Entity::find()\n        .join_as(\n            JoinType::LeftJoin,\n            cake_filling::Relation::Cake.def().rev(),\n            Cf\n        )\n        .join(\n            JoinType::LeftJoin,\n            cake_filling::Relation::Filling.def().from_alias(Cf)\n        )\n        .build(DbBackend::MySql)\n        .to_string(),\n    [\n        "SELECT `cake`.`id`, `cake`.`name` FROM `cake`",\n        "LEFT JOIN `cake_filling` AS `cf` ON `cake`.`id` = `cf`.`cake_id`",\n        "LEFT JOIN `filling` ON `cf`.`filling_id` = `filling`.`id`",\n    ]\n    .join(" ")\n);\n'})}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/2256",children:"#2256"})," Added non-TLS runtime"]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/2244",children:"#2244"})," Added ",(0,r.jsx)(a.code,{children:"Insert::on_conflict_do_nothing"})]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/2255",children:"#2255"})," Migration schema nullable column set NULL explicitly"]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/2194",children:"#2194"})," Added ",(0,r.jsx)(a.code,{children:"ActiveValue::set_if_not_equals()"})]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/2197",children:"#2197"})," Added ",(0,r.jsx)(a.code,{children:"ActiveValue::try_as_ref()"})]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/2228",children:"#2228"})," Added ",(0,r.jsx)(a.code,{children:"QuerySelect::order_by_with_nulls"})]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/2233",children:"#2233"})," Expose ",(0,r.jsx)(a.code,{children:"get_xxx_connection_pool"})," by default"]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/2148",children:"#2148"})," Added ",(0,r.jsx)(a.code,{children:"QueryResult::column_names"})]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/2199",children:"#2199"})," [sea-orm-macro] Add ",(0,r.jsx)(a.code,{children:"@generated"})," in generated code"]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/1665",children:"#1665"})," [sea-orm-macro] Qualify traits in ",(0,r.jsx)(a.code,{children:"DeriveActiveModel"})," macro"]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://github.com/SeaQL/sea-orm/pull/2064",children:"#2064"})," [sea-orm-cli] Fix ",(0,r.jsx)(a.code,{children:"migrate generate"})," on empty ",(0,r.jsx)(a.code,{children:"mod.rs"})," files"]}),"\n"]}),"\n",(0,r.jsx)(a.h2,{id:"release-planning",children:"Release Planning"}),"\n",(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.a,{href:"https://github.com/launchbadge/sqlx/blob/main/CHANGELOG.md#080---2024-07-22",children:"SQLx 0.8"})," is recently released! We want to upgrade from ",(0,r.jsx)(a.code,{children:"0.7"})," as soon as possible. However, since ",(0,r.jsx)(a.code,{children:"sea-orm"})," ",(0,r.jsx)(a.code,{children:"1.0"})," has been in release candidate status for a while, and considering the breaking changes in ",(0,r.jsx)(a.code,{children:"sqlx"})," ",(0,r.jsx)(a.code,{children:"0.8"}),", we decided to keep ",(0,r.jsx)(a.code,{children:"sea-orm"})," ",(0,r.jsx)(a.code,{children:"1.0"})," on ",(0,r.jsx)(a.code,{children:"sqlx"})," ",(0,r.jsx)(a.code,{children:"0.7"}),"."]}),"\n",(0,r.jsxs)(a.p,{children:["We plan to release ",(0,r.jsx)(a.code,{children:"sea-orm"})," ",(0,r.jsx)(a.code,{children:"1.1"})," on ",(0,r.jsx)(a.code,{children:"sqlx"})," ",(0,r.jsx)(a.code,{children:"0.8"})," soon. To avoid unplanned build failures, we recommend all users to specify SeaORM dependency with ",(0,r.jsx)(a.code,{children:"tilde"})," requirement:"]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-toml",children:'sea-orm = { version = "~1.0" }\n'})}),"\n",(0,r.jsxs)(a.p,{children:["According to the ",(0,r.jsx)(a.a,{href:"https://doc.rust-lang.org/cargo/reference/resolver.html",children:"Cargo Book"}),", this will prevent automatic upgrade to ",(0,r.jsx)(a.code,{children:"1.1"}),", so you can perform the upgrade at a convenient time."]}),"\n",(0,r.jsxs)(a.p,{children:["If you've been depending on ",(0,r.jsx)(a.code,{children:"sea-orm"})," ",(0,r.jsx)(a.code,{children:"0.12"}),", you're recommended to upgrade to ",(0,r.jsx)(a.code,{children:"1.0"})," today. As they're both using ",(0,r.jsx)(a.code,{children:"sqlx"})," ",(0,r.jsx)(a.code,{children:"0.7"}),", this upgrade focuses on SeaORM. And then upgrade to ",(0,r.jsx)(a.code,{children:"1.1"})," down the line, which will then focus on SQLx, as we won't introduce any breaking changes. We recommend taking it one step at a time!"]}),"\n",(0,r.jsx)(a.p,{children:"SeaORM 1.x will be maintained for at least 1 year. By then, we'll decide whether we want to release 2.0 and/or extend the lifecycle of 1.x."}),"\n",(0,r.jsx)(a.h2,{id:"our-future",children:"Our Future"}),"\n",(0,r.jsx)(a.p,{children:'You may ask, does this mean SeaORM is "done"? No, not at all! SeaORM 1.0 provides us and the community a solid foundation to build more ambitious features around SeaORM. Here are some facets of our vision:'}),"\n",(0,r.jsxs)(a.ol,{children:["\n",(0,r.jsxs)(a.li,{children:["\n",(0,r.jsx)(a.p,{children:"GraphQL support via Seaography. We want to further develop Seaography to allow developers to turn a set of SeaORM entities into a fully-fledged GraphQL server!"}),"\n"]}),"\n",(0,r.jsxs)(a.li,{children:["\n",(0,r.jsx)(a.p,{children:"Admin dashboard. We want to build a first-class frontend framework for SeaORM. It will be a breeze to develop admin / client portals with SeaORM!"}),"\n"]}),"\n",(0,r.jsxs)(a.li,{children:["\n",(0,r.jsx)(a.p,{children:"Data science / analytics. SeaORM's been focusing on OLTP for now, and we're aware that people also have been using SeaORM for OLAP workloads. We want to provide better integration with dataframe libraries and develop more features tailored for data science and engineering."}),"\n"]}),"\n",(0,r.jsxs)(a.li,{children:["\n",(0,r.jsx)(a.p,{children:"Scale-out features. We want to develop features to help with scaling applications, e.g. sharding, caching and multi-tenancy."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(a.h2,{id:"sql-server-support",children:"SQL Server Support"}),"\n",(0,r.jsxs)(a.p,{children:["We've been planning ",(0,r.jsx)(a.a,{href:"https://www.sea-ql.org/SeaORM-X/",children:"SQL Server for SeaORM"})," for a while, and SQL Server is finally coming to SeaORM 1.0! It will first be offered as a closed beta to our partners. If you are interested, please join our ",(0,r.jsx)(a.a,{href:"https://forms.office.com/r/1MuRPJmYBR",children:"waiting list"}),"."]}),"\n",(0,r.jsx)(a.h2,{id:"sponsor",children:"Sponsor"}),"\n",(0,r.jsx)(a.p,{children:"A small donation will be greatly appreciated, and goes a long way towards sustaining the organization."}),"\n",(0,r.jsxs)(a.p,{children:["A big shout out to our ",(0,r.jsx)(a.a,{href:"https://github.com/sponsors/SeaQL",children:"sponsors"})," \ud83d\ude07:"]}),"\n",(0,r.jsx)(a.h3,{id:"gold-sponsors",children:"Gold Sponsors"}),"\n",(0,r.jsxs)("a",{href:"https://osmos.io/",children:[(0,r.jsx)("img",{src:"https://www.sea-ql.org/static/sponsors/Osmos.svg#light",width:"238"}),(0,r.jsx)("img",{src:"https://www.sea-ql.org/static/sponsors/Osmos-dark.svg#dark",width:"238"})]}),"\n",(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.a,{href:"https://osmos.io/",children:"osmos"})," offers a data ingestion platform to streamline data ingestion, transformation and workflow management, and they're using SeaQL libraries under the hood!"]}),"\n",(0,r.jsx)(a.p,{children:"Contact us if you also want to become a company sponsor and be featured here."}),"\n",(0,r.jsx)(a.h3,{id:"github-sponsors",children:"GitHub Sponsors"}),"\n",(0,r.jsxs)("div",{class:"row",children:[(0,r.jsx)("div",{class:"col col--6 margin-bottom--md",children:(0,r.jsxs)("div",{class:"avatar",children:[(0,r.jsx)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/tugascript",children:(0,r.jsx)("img",{src:"https://avatars.githubusercontent.com/u/64930104?v=4"})}),(0,r.jsx)("div",{class:"avatar__intro",children:(0,r.jsx)("div",{class:"avatar__name",children:(0,r.jsx)(a.p,{children:"Afonso Barracha"})})})]})}),(0,r.jsx)("div",{class:"col col--6 margin-bottom--md",children:(0,r.jsxs)("div",{class:"avatar",children:[(0,r.jsx)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/deansheather",children:(0,r.jsx)("img",{src:"https://avatars.githubusercontent.com/u/11241812?v=4"})}),(0,r.jsx)("div",{class:"avatar__intro",children:(0,r.jsx)("div",{class:"avatar__name",children:(0,r.jsx)(a.p,{children:"Dean Sheather"})})})]})}),(0,r.jsx)("div",{class:"col col--6 margin-bottom--md",children:(0,r.jsxs)("div",{class:"avatar",children:[(0,r.jsx)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/marcusbuffett",children:(0,r.jsx)("img",{src:"https://avatars.githubusercontent.com/u/1834328?v=4"})}),(0,r.jsx)("div",{class:"avatar__intro",children:(0,r.jsx)("div",{class:"avatar__name",children:(0,r.jsx)(a.p,{children:"Marcus Buffett"})})})]})}),(0,r.jsx)("div",{class:"col col--6 margin-bottom--md",children:(0,r.jsxs)("div",{class:"avatar",children:[(0,r.jsx)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/ktanaka101",children:(0,r.jsx)("img",{src:"https://avatars.githubusercontent.com/u/10344925?v=4"})}),(0,r.jsx)("div",{class:"avatar__intro",children:(0,r.jsx)("div",{class:"avatar__name",children:(0,r.jsx)(a.p,{children:"Kentaro Tanaka"})})})]})}),(0,r.jsx)("div",{class:"col col--6 margin-bottom--md",children:(0,r.jsxs)("div",{class:"avatar",children:[(0,r.jsx)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/siketyan",children:(0,r.jsx)("img",{src:"https://avatars.githubusercontent.com/u/12772118?v=4"})}),(0,r.jsx)("div",{class:"avatar__intro",children:(0,r.jsx)("div",{class:"avatar__name",children:(0,r.jsx)(a.p,{children:"Naoki Ikeguchi"})})})]})}),(0,r.jsx)("div",{class:"col col--6 margin-bottom--md",children:(0,r.jsxs)("div",{class:"avatar",children:[(0,r.jsx)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/milesgranger",children:(0,r.jsx)("img",{src:"https://avatars.githubusercontent.com/u/13764397?v=4"})}),(0,r.jsx)("div",{class:"avatar__intro",children:(0,r.jsx)("div",{class:"avatar__name",children:(0,r.jsx)(a.p,{children:"Miles Granger"})})})]})}),(0,r.jsx)("div",{class:"col col--6 margin-bottom--md",children:(0,r.jsxs)("div",{class:"avatar",children:[(0,r.jsx)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/data-intuitive",children:(0,r.jsx)("img",{src:"https://avatars.githubusercontent.com/u/15045722?v=4"})}),(0,r.jsx)("div",{class:"avatar__intro",children:(0,r.jsx)("div",{class:"avatar__name",children:(0,r.jsx)(a.p,{children:"Data Intuitive"})})})]})}),(0,r.jsx)("div",{class:"col col--6 margin-bottom--md",children:(0,r.jsxs)("div",{class:"avatar",children:[(0,r.jsx)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/mmuellersoppart",children:(0,r.jsx)("img",{src:"https://avatars.githubusercontent.com/u/16762461?v=4"})}),(0,r.jsx)("div",{class:"avatar__intro",children:(0,r.jsx)("div",{class:"avatar__name",children:(0,r.jsx)(a.p,{children:"Marlon Mueller-Soppart"})})})]})}),(0,r.jsx)("div",{class:"col col--6 margin-bottom--md",children:(0,r.jsxs)("div",{class:"avatar",children:[(0,r.jsx)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/anshap1719",children:(0,r.jsx)("img",{src:"https://avatars.githubusercontent.com/u/19164745?v=4"})}),(0,r.jsx)("div",{class:"avatar__intro",children:(0,r.jsx)("div",{class:"avatar__name",children:(0,r.jsx)(a.p,{children:"Anshul Sanghi"})})})]})}),(0,r.jsx)("div",{class:"col col--6 margin-bottom--md",children:(0,r.jsxs)("div",{class:"avatar",children:[(0,r.jsx)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/yuly3",children:(0,r.jsx)("img",{src:"https://avatars.githubusercontent.com/u/25814001?v=4"})}),(0,r.jsx)("div",{class:"avatar__intro",children:(0,r.jsx)("div",{class:"avatar__name",children:(0,r.jsx)(a.p,{children:"MasakiMiyazaki"})})})]})}),(0,r.jsx)("div",{class:"col col--6 margin-bottom--md",children:(0,r.jsxs)("div",{class:"avatar",children:[(0,r.jsx)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/manfredcml",children:(0,r.jsx)("img",{src:"https://avatars.githubusercontent.com/u/27536502?v=4"})}),(0,r.jsx)("div",{class:"avatar__intro",children:(0,r.jsx)("div",{class:"avatar__name",children:(0,r.jsx)(a.p,{children:"Manfred Lee"})})})]})}),(0,r.jsx)("div",{class:"col col--6 margin-bottom--md",children:(0,r.jsxs)("div",{class:"avatar",children:[(0,r.jsx)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/kallydev",children:(0,r.jsx)("img",{src:"https://avatars.githubusercontent.com/u/36319157?v=4"})}),(0,r.jsx)("div",{class:"avatar__intro",children:(0,r.jsx)("div",{class:"avatar__name",children:(0,r.jsx)(a.p,{children:"KallyDev"})})})]})}),(0,r.jsx)("div",{class:"col col--6 margin-bottom--md",children:(0,r.jsxs)("div",{class:"avatar",children:[(0,r.jsx)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/ellik159",children:(0,r.jsx)("img",{src:"https://avatars.githubusercontent.com/u/46644287?v=4"})}),(0,r.jsx)("div",{class:"avatar__intro",children:(0,r.jsx)("div",{class:"avatar__name",children:(0,r.jsx)(a.p,{children:"ellik159"})})})]})}),(0,r.jsx)("div",{class:"col col--6 margin-bottom--md",children:(0,r.jsxs)("div",{class:"avatar",children:[(0,r.jsx)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/caido",children:(0,r.jsx)("img",{src:"https://avatars.githubusercontent.com/u/78991750?v=4"})}),(0,r.jsx)("div",{class:"avatar__intro",children:(0,r.jsx)("div",{class:"avatar__name",children:(0,r.jsx)(a.p,{children:"Caido"})})})]})}),(0,r.jsx)("div",{class:"col col--6 margin-bottom--md",children:(0,r.jsxs)("div",{class:"avatar",children:[(0,r.jsx)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/Coolpany-SE",children:(0,r.jsx)("img",{src:"https://avatars.githubusercontent.com/u/96304487?v=4"})}),(0,r.jsx)("div",{class:"avatar__intro",children:(0,r.jsx)("div",{class:"avatar__name",children:(0,r.jsx)(a.p,{children:"Coolpany SE"})})})]})})]}),"\n",(0,r.jsx)(a.h2,{id:"rustacean-sticker-pack-",children:"Rustacean Sticker Pack \ud83e\udd80"}),"\n",(0,r.jsx)(a.p,{children:"The Rustacean Sticker Pack is the perfect way to express your passion for Rust.\nOur stickers are made with a premium water-resistant vinyl with a unique matte finish.\nStick them on your laptop, notebook, or any gadget to show off your love for Rust!"}),"\n",(0,r.jsx)(a.p,{children:"Moreover, all proceeds contributes directly to the ongoing development of SeaQL projects."}),"\n",(0,r.jsx)(a.p,{children:"Sticker Pack Contents:"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsx)(a.li,{children:"Logo of SeaQL projects: SeaQL, SeaORM, SeaQuery, Seaography, FireDBG"}),"\n",(0,r.jsx)(a.li,{children:"Mascot of SeaQL: Terres the Hermit Crab"}),"\n",(0,r.jsx)(a.li,{children:"Mascot of Rust: Ferris the Crab"}),"\n",(0,r.jsx)(a.li,{children:"The Rustacean word"}),"\n"]}),"\n",(0,r.jsx)(a.p,{children:(0,r.jsx)(a.a,{href:"https://www.sea-ql.org/sticker-pack/",children:"Support SeaQL and get a Sticker Pack!"})}),"\n",(0,r.jsx)("a",{href:"https://www.sea-ql.org/sticker-pack/",children:(0,r.jsx)("img",{style:{borderRadius:"25px"},alt:"Rustacean Sticker Pack by SeaQL",src:"https://www.sea-ql.org/static/sticker-pack-1s.jpg"})})]})}function h(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},7121:e=>{e.exports=JSON.parse('{"permalink":"/preview/pr-147/blog/2024-08-04-sea-orm-1.0","editUrl":"https://github.com/SeaQL/seaql.github.io/edit/master/Blog/blog/2024-08-04-sea-orm-1.0.md","source":"@site/blog/2024-08-04-sea-orm-1.0.md","title":"Announcing SeaORM 1.0 \ud83d\udc1a","description":"\ud83c\udf89 We are pleased to release SeaORM 1.0 today! This is an special occasion for us, so this blog post will be a little more than a release notes.","date":"2024-08-04T00:00:00.000Z","tags":[{"inline":true,"label":"news","permalink":"/preview/pr-147/blog/tags/news"}],"readingTime":9.01,"hasTruncateMarker":false,"authors":[{"name":"SeaQL Team","title":"Chris Tsang","url":"https://github.com/SeaQL","imageURL":"https://www.sea-ql.org/blog/img/SeaQL.png","key":null,"page":null}],"frontMatter":{"slug":"2024-08-04-sea-orm-1.0","title":"Announcing SeaORM 1.0 \ud83d\udc1a","author":"SeaQL Team","author_title":"Chris Tsang","author_url":"https://github.com/SeaQL","author_image_url":"https://www.sea-ql.org/blog/img/SeaQL.png","image":"https://www.sea-ql.org/blog/img/SeaORM%201.0%20Banner.png","tags":["news"]},"unlisted":false,"prevItem":{"title":"GraphQL based Admin Dashboard with Loco and Seaography","permalink":"/preview/pr-147/blog/2024-08-08-graphql-admin-dashboard-with-loco-seaography"},"nextItem":{"title":"Adding GraphQL Support to Loco with Seaography","permalink":"/preview/pr-147/blog/2024-07-01-graphql-support-with-loco-seaography"}}')},7630:(e,a,s)=>{s.d(a,{R:()=>i,x:()=>o});var n=s(2374);const r={},t=n.createContext(r);function i(e){const a=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(t.Provider,{value:a},e.children)}}}]);