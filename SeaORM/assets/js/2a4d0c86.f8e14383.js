"use strict";(self.webpackChunksea_orm=self.webpackChunksea_orm||[]).push([[58817],{28453:(e,i,r)=>{r.d(i,{R:()=>t,x:()=>c});var n=r(96540);const d={},l=n.createContext(d);function t(e){const i=n.useContext(l);return n.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:t(e.components),n.createElement(l.Provider,{value:i},e.children)}},58563:(e,i,r)=>{r.r(i),r.d(i,{assets:()=>s,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"internal-design/derive-macro","title":"Derive Macros","description":"EntityModel","source":"@site/versioned_docs/version-0.7.x/10-internal-design/02-derive-macro.md","sourceDirName":"10-internal-design","slug":"/internal-design/derive-macro","permalink":"/SeaORM/docs/0.7.x/internal-design/derive-macro","draft":false,"unlisted":false,"editUrl":"https://github.com/SeaQL/seaql.github.io/edit/master/SeaORM/versioned_docs/version-0.7.x/10-internal-design/02-derive-macro.md","tags":[],"version":"0.7.x","lastUpdatedBy":"Chris Tsang","lastUpdatedAt":1759959585000,"sidebarPosition":2,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Traits and Types","permalink":"/SeaORM/docs/0.7.x/internal-design/trait-and-type"},"next":{"title":"Compare with Diesel","permalink":"/SeaORM/docs/0.7.x/internal-design/diesel"}}');var d=r(74848),l=r(28453);const t={},c="Derive Macros",s={},o=[{value:"EntityModel",id:"entitymodel",level:2},{value:"Entity",id:"entity",level:2},{value:"Column",id:"column",level:2},{value:"Primary Key",id:"primary-key",level:2},{value:"Model",id:"model",level:2},{value:"Active Model",id:"active-model",level:2},{value:"Active Enum",id:"active-enum",level:2},{value:"Relation",id:"relation",level:2},{value:"Iterable",id:"iterable",level:2}];function a(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",...(0,l.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(i.header,{children:(0,d.jsx)(i.h1,{id:"derive-macros",children:"Derive Macros"})}),"\n",(0,d.jsx)(i.h2,{id:"entitymodel",children:"EntityModel"}),"\n",(0,d.jsxs)(i.p,{children:["The ",(0,d.jsx)(i.a,{href:"#",children:(0,d.jsx)(i.code,{children:"EntityModel"})})," derive macro is the 'almighty' macro which automatically generates ",(0,d.jsx)(i.code,{children:"Entity"}),", ",(0,d.jsx)(i.code,{children:"Column"}),", and ",(0,d.jsx)(i.code,{children:"PrimaryKey"})," from a given ",(0,d.jsx)(i.code,{children:"Model"}),"."]}),"\n",(0,d.jsx)(i.h2,{id:"entity",children:"Entity"}),"\n",(0,d.jsxs)(i.p,{children:["The ",(0,d.jsx)(i.a,{href:"#",children:(0,d.jsx)(i.code,{children:"DeriveEntity"})})," derive macro will implement ",(0,d.jsx)(i.a,{href:"#",children:(0,d.jsx)(i.code,{children:"EntityTrait"})})," for ",(0,d.jsx)(i.code,{children:"Entity"})," and it assumes ",(0,d.jsx)(i.code,{children:"Model"}),", ",(0,d.jsx)(i.code,{children:"Column"}),", ",(0,d.jsx)(i.code,{children:"PrimaryKey"})," and ",(0,d.jsx)(i.code,{children:"Relation"})," exist in the current scope. It also provides implementation of ",(0,d.jsx)(i.a,{href:"#",children:(0,d.jsx)(i.code,{children:"Iden"})})," and ",(0,d.jsx)(i.a,{href:"#",children:(0,d.jsx)(i.code,{children:"IdenStatic"})})," for ",(0,d.jsx)(i.code,{children:"Entity"}),"."]}),"\n",(0,d.jsx)(i.h2,{id:"column",children:"Column"}),"\n",(0,d.jsxs)(i.p,{children:["The ",(0,d.jsx)(i.a,{href:"#",children:(0,d.jsx)(i.code,{children:"DeriveColumn"})})," derive macro will implement ",(0,d.jsx)(i.a,{href:"#",children:(0,d.jsx)(i.code,{children:"ColumnTrait"})})," for ",(0,d.jsx)(i.code,{children:"Columns"}),". It defines the identifier of each column by implementing ",(0,d.jsx)(i.a,{href:"#",children:(0,d.jsx)(i.code,{children:"Iden"})})," and ",(0,d.jsx)(i.a,{href:"#",children:(0,d.jsx)(i.code,{children:"IdenStatic"})}),". The ",(0,d.jsx)(i.a,{href:"#",children:(0,d.jsx)(i.code,{children:"EnumIter"})})," is also derived, allowing iteration over all enum variants."]}),"\n",(0,d.jsx)(i.h2,{id:"primary-key",children:"Primary Key"}),"\n",(0,d.jsxs)(i.p,{children:["The ",(0,d.jsx)(i.a,{href:"#",children:(0,d.jsx)(i.code,{children:"DerivePrimaryKey"})})," derive macro will implement ",(0,d.jsx)(i.a,{href:"#",children:(0,d.jsx)(i.code,{children:"PrimaryKeyToColumn"})})," for ",(0,d.jsx)(i.code,{children:"PrimaryKey"})," which defines tedious mappings between primary keys and columns. The ",(0,d.jsx)(i.a,{href:"#",children:(0,d.jsx)(i.code,{children:"EnumIter"})})," is also derived, allowing iteration over all enum variants."]}),"\n",(0,d.jsx)(i.h2,{id:"model",children:"Model"}),"\n",(0,d.jsxs)(i.p,{children:["The ",(0,d.jsx)(i.a,{href:"#",children:(0,d.jsx)(i.code,{children:"DeriveModel"})})," derive macro will implement ",(0,d.jsx)(i.a,{href:"#",children:(0,d.jsx)(i.code,{children:"ModelTrait"})})," for ",(0,d.jsx)(i.code,{children:"Model"}),", which provides setters and getters for all attributes in the model. It also implements ",(0,d.jsx)(i.a,{href:"#",children:(0,d.jsx)(i.code,{children:"FromQueryResult"})})," to convert a query result into the corresponding ",(0,d.jsx)(i.code,{children:"Model"}),"."]}),"\n",(0,d.jsx)(i.h2,{id:"active-model",children:"Active Model"}),"\n",(0,d.jsxs)(i.p,{children:["The ",(0,d.jsx)(i.a,{href:"#",children:(0,d.jsx)(i.code,{children:"DeriveActiveModel"})})," derive macro will implement ",(0,d.jsx)(i.a,{href:"#",children:(0,d.jsx)(i.code,{children:"ActiveModelTrait"})})," for ",(0,d.jsx)(i.code,{children:"ActiveModel"})," which provides setters and getters for all active values in the active model."]}),"\n",(0,d.jsx)(i.h2,{id:"active-enum",children:"Active Enum"}),"\n",(0,d.jsxs)(i.p,{children:["The ",(0,d.jsx)(i.a,{href:"#",children:(0,d.jsx)(i.code,{children:"DeriveActiveEnum"})})," derive macro will implement ",(0,d.jsx)(i.a,{href:"#",children:(0,d.jsx)(i.code,{children:"ActiveEnum"})})," for any enums."]}),"\n",(0,d.jsx)(i.h2,{id:"relation",children:"Relation"}),"\n",(0,d.jsxs)(i.p,{children:["The ",(0,d.jsx)(i.a,{href:"#",children:(0,d.jsx)(i.code,{children:"DeriveRelation"})})," derive macro will implement ",(0,d.jsx)(i.a,{href:"#",children:(0,d.jsx)(i.code,{children:"RelationTrait"})})," for ",(0,d.jsx)(i.code,{children:"Relation"}),"."]}),"\n",(0,d.jsx)(i.h2,{id:"iterable",children:"Iterable"}),"\n",(0,d.jsxs)(i.p,{children:["The ",(0,d.jsx)(i.a,{href:"#",children:(0,d.jsx)(i.code,{children:"EnumIter"})})," derived macro will implement ",(0,d.jsx)(i.a,{href:"#",children:(0,d.jsx)(i.code,{children:"Iterable"})})," to allow iteration over all enum variants."]})]})}function h(e={}){const{wrapper:i}={...(0,l.R)(),...e.components};return i?(0,d.jsx)(i,{...e,children:(0,d.jsx)(a,{...e})}):a(e)}}}]);