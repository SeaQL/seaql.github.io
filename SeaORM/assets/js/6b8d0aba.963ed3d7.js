"use strict";(self.webpackChunksea_orm=self.webpackChunksea_orm||[]).push([[19033],{20637:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"advanced-query/conditional-expression","title":"Conditional Expressions","description":"You can add conditions to SeaORM find with the filter method. You can also restrict the aggregated result with having method. Both of them take seaquery::Condition as a parameter.","source":"@site/versioned_docs/version-0.5.x/08-advanced-query/02-conditional-expression.md","sourceDirName":"08-advanced-query","slug":"/advanced-query/conditional-expression","permalink":"/SeaORM/docs/0.5.x/advanced-query/conditional-expression","draft":false,"unlisted":false,"editUrl":"https://github.com/SeaQL/seaql.github.io/edit/master/SeaORM/versioned_docs/version-0.5.x/08-advanced-query/02-conditional-expression.md","tags":[],"version":"0.5.x","lastUpdatedBy":"Billy Chan","lastUpdatedAt":1753445549000,"sidebarPosition":2,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Custom Select","permalink":"/SeaORM/docs/0.5.x/advanced-query/custom-select"},"next":{"title":"Aggregate Functions","permalink":"/SeaORM/docs/0.5.x/advanced-query/aggregate-function"}}');var d=t(88790),o=t(77162);const a={},s="Conditional Expressions",r={},c=[{value:"AND Condition",id:"and-condition",level:2},{value:"OR Condition",id:"or-condition",level:2},{value:"Nested Condition",id:"nested-condition",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.header,{children:(0,d.jsx)(n.h1,{id:"conditional-expressions",children:"Conditional Expressions"})}),"\n",(0,d.jsxs)(n.p,{children:["You can add conditions to SeaORM find with the ",(0,d.jsx)(n.code,{children:"filter"})," method. You can also restrict the aggregated result with ",(0,d.jsx)(n.code,{children:"having"})," method. Both of them take ",(0,d.jsx)(n.a,{href:"https://docs.rs/sea-query/0.12.7/sea_query/query/struct.Condition.html",children:(0,d.jsx)(n.code,{children:"sea_query::Condition"})})," as a parameter."]}),"\n",(0,d.jsx)(n.h2,{id:"and-condition",children:"AND Condition"}),"\n",(0,d.jsxs)(n.p,{children:["Construct the AND conditional expression with ",(0,d.jsx)(n.code,{children:"Condition::all"})," method, and append any condition represented in ",(0,d.jsx)(n.a,{href:"https://docs.rs/sea-query/*/sea_query/expr/enum.SimpleExpr.html",children:(0,d.jsx)(n.code,{children:"sea_query::SimpleExpr"})})," with the ",(0,d.jsx)(n.code,{children:"add"})," method."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-rust",children:'assert_eq!(\n    cake::Entity::find()\n        .filter(\n            Condition::all()\n                .add(cake::Column::Id.gte(1))\n                .add(cake::Column::Name.like("%Cheese%"))\n        )\n        .build(DbBackend::MySql)\n        .to_string(),\n    [\n        "SELECT `cake`.`id`, `cake`.`name` FROM `cake`",\n        "WHERE `cake`.`id` >= 1 AND `cake`.`name` LIKE \'%Cheese%\'",\n    ].join(" ")\n);\n'})}),"\n",(0,d.jsx)(n.h2,{id:"or-condition",children:"OR Condition"}),"\n",(0,d.jsxs)(n.p,{children:["Construct the OR conditional expression with ",(0,d.jsx)(n.code,{children:"Condition::any"})," method, and append any condition represented in ",(0,d.jsx)(n.a,{href:"https://docs.rs/sea-query/*/sea_query/expr/enum.SimpleExpr.html",children:(0,d.jsx)(n.code,{children:"sea_query::SimpleExpr"})})," with the ",(0,d.jsx)(n.code,{children:"add"})," method."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-rust",children:'assert_eq!(\n    cake::Entity::find()\n        .filter(\n            Condition::any()\n                .add(cake::Column::Id.eq(4))\n                .add(cake::Column::Id.eq(5))\n        )\n        .build(DbBackend::MySql)\n        .to_string(),\n    [\n        "SELECT `cake`.`id`, `cake`.`name` FROM `cake`",\n        "WHERE `cake`.`id` = 4 OR `cake`.`id` = 5",\n    ].join(" ")\n);\n'})}),"\n",(0,d.jsx)(n.h2,{id:"nested-condition",children:"Nested Condition"}),"\n",(0,d.jsxs)(n.p,{children:["The ",(0,d.jsx)(n.code,{children:"add"})," method can also take another conditional expression. By doing this, we can construct complex nested conditions flexibly."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-rust",children:'assert_eq!(\n    cake::Entity::find()\n        .filter(\n            Condition::any()\n                .add(\n                    Condition::all()\n                        .add(cake::Column::Id.lte(30))\n                        .add(cake::Column::Name.like("%Chocolate%"))\n                )\n                .add(\n                    Condition::all()\n                        .add(cake::Column::Id.gte(1))\n                        .add(cake::Column::Name.like("%Cheese%"))\n                )\n        )\n        .build(DbBackend::MySql)\n        .to_string(),\n    [\n        "SELECT `cake`.`id`, `cake`.`name` FROM `cake`",\n        "WHERE (`cake`.`id` <= 30 AND `cake`.`name` LIKE \'%Chocolate%\') OR",\n        "(`cake`.`id` >= 1 AND `cake`.`name` LIKE \'%Cheese%\')",\n    ].join(" ")\n);\n'})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(l,{...e})}):l(e)}},77162:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>s});var i=t(22374);const d={},o=i.createContext(d);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);