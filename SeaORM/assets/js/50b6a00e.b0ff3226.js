"use strict";(self.webpackChunksea_orm=self.webpackChunksea_orm||[]).push([[73470],{77162:(e,s,n)=>{n.d(s,{R:()=>c,x:()=>a});var t=n(22374);const r={},i=t.createContext(r);function c(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),t.createElement(i.Provider,{value:s},e.children)}},90182:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"install-and-config/database-and-async-runtime","title":"Database & Async Runtime","description":"First, add sea-orm to the [dependencies] section of your Cargo.toml.","source":"@site/versioned_docs/version-0.4.x/02-install-and-config/01-database-and-async-runtime.md","sourceDirName":"02-install-and-config","slug":"/install-and-config/database-and-async-runtime","permalink":"/SeaORM/docs/0.4.x/install-and-config/database-and-async-runtime","draft":false,"unlisted":false,"editUrl":"https://github.com/SeaQL/seaql.github.io/edit/master/SeaORM/versioned_docs/version-0.4.x/02-install-and-config/01-database-and-async-runtime.md","tags":[],"version":"0.4.x","lastUpdatedBy":"Billy Chan","lastUpdatedAt":1754392772000,"sidebarPosition":1,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"SeaORM Concepts","permalink":"/SeaORM/docs/0.4.x/introduction/sea-orm"},"next":{"title":"Schema Management","permalink":"/SeaORM/docs/0.4.x/install-and-config/schema"}}');var r=n(88790),i=n(77162);const c={},a="Database & Async Runtime",d={},o=[{value:"DATABASE_DRIVER",id:"database_driver",level:2},{value:"ASYNC_RUNTIME",id:"async_runtime",level:2},{value:"Extra features",id:"extra-features",level:2}];function l(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"database--async-runtime",children:"Database & Async Runtime"})}),"\n",(0,r.jsxs)(s.p,{children:["First, add ",(0,r.jsx)(s.code,{children:"sea-orm"})," to the ",(0,r.jsx)(s.code,{children:"[dependencies]"})," section of your ",(0,r.jsx)(s.code,{children:"Cargo.toml"}),"."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-toml",metastring:'title="Cargo.toml"',children:'sea-orm = { version = "^0.4", features = [ DATABASE_DRIVER, ASYNC_RUNTIME, "macros" ], default-features = false }\n'})}),"\n",(0,r.jsxs)(s.p,{children:["You must choose a ",(0,r.jsx)(s.code,{children:"DATABASE_DRIVER"})," and an ",(0,r.jsx)(s.code,{children:"ASYNC_RUNTIME"}),". ",(0,r.jsx)(s.code,{children:"macros"})," is needed if you use SeaORM's generated entities (most likely)."]}),"\n",(0,r.jsx)(s.h2,{id:"database_driver",children:"DATABASE_DRIVER"}),"\n",(0,r.jsx)(s.p,{children:"You can choose one or more from:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"sqlx-mysql"})," - SQLx MySQL and MariaDB"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"sqlx-postgres"})," - SQLx Postgres"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"sqlx-sqlite"})," - SQLx SQLite"]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["See also: ",(0,r.jsx)(s.a,{href:"https://docs.rs/crate/sqlx/latest/features",children:"SQLx docs"}),"."]}),"\n",(0,r.jsx)(s.h2,{id:"async_runtime",children:"ASYNC_RUNTIME"}),"\n",(0,r.jsx)(s.p,{children:"You have to choose one from:"}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"runtime-actix-native-tls"}),", ",(0,r.jsx)(s.code,{children:"runtime-async-std-native-tls"}),", ",(0,r.jsx)(s.code,{children:"runtime-tokio-native-tls"}),", ",(0,r.jsx)(s.code,{children:"runtime-actix-rustls"}),", ",(0,r.jsx)(s.code,{children:"runtime-async-std-rustls"}),", ",(0,r.jsx)(s.code,{children:"runtime-tokio-rustls"})]}),"\n",(0,r.jsxs)(s.p,{children:["Basically, they are in the form of ",(0,r.jsx)(s.code,{children:"runtime-ASYNC_RUNTIME-TLS_LIB"}),":"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"ASYNC_RUNTIME"})," can be ",(0,r.jsx)(s.a,{href:"https://crates.io/crates/actix",children:(0,r.jsx)(s.code,{children:"actix"})}),", ",(0,r.jsx)(s.a,{href:"https://crates.io/crates/async-std",children:(0,r.jsx)(s.code,{children:"async-std"})})," or ",(0,r.jsx)(s.a,{href:"https://crates.io/crates/tokio",children:(0,r.jsx)(s.code,{children:"tokio"})})]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"TLS_LIB"})," can either be ",(0,r.jsx)(s.a,{href:"https://crates.io/crates/native-tls",children:(0,r.jsx)(s.code,{children:"native-tls"})})," or ",(0,r.jsx)(s.a,{href:"https://crates.io/crates/rustls",children:(0,r.jsx)(s.code,{children:"rustls"})})]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["Tip 1: ",(0,r.jsx)(s.a,{href:"https://rocket.rs/",children:(0,r.jsx)(s.code,{children:"Rocket"})})," uses ",(0,r.jsx)(s.code,{children:"tokio"}),", ",(0,r.jsx)(s.a,{href:"https://actix.rs/",children:(0,r.jsx)(s.code,{children:"Actix"})})," uses ",(0,r.jsx)(s.code,{children:"actix"}),", ",(0,r.jsx)(s.a,{href:"https://docs.rs/tide",children:(0,r.jsx)(s.code,{children:"Tide"})})," uses ",(0,r.jsx)(s.code,{children:"async-std"})]}),"\n",(0,r.jsxs)(s.p,{children:["Tip 2: ",(0,r.jsx)(s.code,{children:"native-tls"})," uses platform's native security facilities, while ",(0,r.jsx)(s.code,{children:"rustls"})," is a pure Rust implementation"]}),"\n",(0,r.jsx)(s.h2,{id:"extra-features",children:"Extra features"}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"debug-print"})," - print every SQL statement to logger"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"mock"})," - mock interface for unit testing"]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);