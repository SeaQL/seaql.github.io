"use strict";(self.webpackChunksea_orm=self.webpackChunksea_orm||[]).push([[59302],{3633:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"advanced-query/subquery","title":"Sub Query","description":"Conditional Expression With Sub Query","source":"@site/versioned_docs/version-1.1.x/08-advanced-query/05-subquery.md","sourceDirName":"08-advanced-query","slug":"/advanced-query/subquery","permalink":"/SeaORM/docs/advanced-query/subquery","draft":false,"unlisted":false,"editUrl":"https://github.com/SeaQL/seaql.github.io/edit/master/SeaORM/versioned_docs/version-1.1.x/08-advanced-query/05-subquery.md","tags":[],"version":"1.1.x","lastUpdatedBy":"Chris Tsang","lastUpdatedAt":1753468268000,"sidebarPosition":5,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Advanced Joins","permalink":"/SeaORM/docs/advanced-query/advanced-joins"},"next":{"title":"Transaction","permalink":"/SeaORM/docs/advanced-query/transaction"}}');var s=t(88790),i=t(77162);const o={},a="Sub Query",d={},u=[{value:"Conditional Expression With Sub Query",id:"conditional-expression-with-sub-query",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"sub-query",children:"Sub Query"})}),"\n",(0,s.jsx)(n.h2,{id:"conditional-expression-with-sub-query",children:"Conditional Expression With Sub Query"}),"\n",(0,s.jsxs)(n.p,{children:["Use the ",(0,s.jsx)(n.code,{children:"in_subquery"})," or ",(0,s.jsx)(n.code,{children:"not_in_subquery"})," methods to construct conditional expressions with sub-queries."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:'use sea_orm::Condition;\nuse sea_query::Query;\n\nassert_eq!(\n    cake::Entity::find()\n        .filter(\n            Condition::any().add(\n                cake::Column::Id.in_subquery(\n                    Query::select()\n                        .expr(cake::Column::Id.max())\n                        .from(cake::Entity)\n                        .to_owned()\n                )\n            )\n        )\n        .build(DbBackend::MySql)\n        .to_string(),\n    [\n        "SELECT `cake`.`id`, `cake`.`name` FROM `cake`",\n        "WHERE `cake`.`id` IN (SELECT MAX(`cake`.`id`) FROM `cake`)",\n    ]\n    .join(" ")\n);\n'})})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},77162:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var r=t(22374);const s={},i=r.createContext(s);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);