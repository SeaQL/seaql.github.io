"use strict";(self.webpackChunksea_orm=self.webpackChunksea_orm||[]).push([[89204],{71218:(n,i,e)=>{e.r(i),e.d(i,{assets:()=>l,contentTitle:()=>s,default:()=>g,frontMatter:()=>o,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"migration/running-migration","title":"Running Migration","description":"After you have defined the migrations, you can apply or revert migrations in the terminal or on application startup.","source":"@site/versioned_docs/version-1.1.x/03-migration/03-running-migration.md","sourceDirName":"03-migration","slug":"/migration/running-migration","permalink":"/SeaORM/docs/migration/running-migration","draft":false,"unlisted":false,"editUrl":"https://github.com/SeaQL/seaql.github.io/edit/master/SeaORM/versioned_docs/version-1.1.x/03-migration/03-running-migration.md","tags":[],"version":"1.1.x","lastUpdatedBy":"Chris Tsang","lastUpdatedAt":1749809804000,"sidebarPosition":3,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Writing Migration","permalink":"/SeaORM/docs/migration/writing-migration"},"next":{"title":"Seeding Data","permalink":"/SeaORM/docs/migration/seeding-data"}}');var r=e(88790),t=e(77162);const o={},s="Running Migration",l={},c=[{value:"Command Line Interface (CLI)",id:"command-line-interface-cli",level:2},{value:"Via <code>sea-orm-cli</code>",id:"via-sea-orm-cli",level:3},{value:"Via SeaSchema Migrator CLI",id:"via-seaschema-migrator-cli",level:3},{value:"Migrating Programmatically",id:"migrating-programmatically",level:2},{value:"Running Migration on Any PostgreSQL Schema",id:"running-migration-on-any-postgresql-schema",level:2},{value:"Checking Migration Status",id:"checking-migration-status",level:2}];function d(n){const i={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"running-migration",children:"Running Migration"})}),"\n",(0,r.jsx)(i.p,{children:"After you have defined the migrations, you can apply or revert migrations in the terminal or on application startup."}),"\n",(0,r.jsx)(i.h2,{id:"command-line-interface-cli",children:"Command Line Interface (CLI)"}),"\n",(0,r.jsxs)(i.p,{children:["Migrations can be run manually in the terminal. ",(0,r.jsx)(i.code,{children:"DATABASE_URL"})," must be set in your environment, follow the instructions ",(0,r.jsx)(i.a,{href:"/SeaORM/docs/generate-entity/sea-orm-cli#configure-environment",children:"here"})," to configure it."]}),"\n",(0,r.jsx)(i.p,{children:"Supported commands:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"init"}),": Initialize migration directory"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"generate"}),": Generate a new migration file"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"up"}),": Apply all pending migrations"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"up -n 10"}),": Apply 10 pending migrations"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"down"}),": Rollback last applied migration"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"down -n 10"}),": Rollback last 10 applied migrations"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"status"}),": Check the status of all migrations"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"fresh"}),": Drop all tables from the database, then reapply all migrations"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"refresh"}),": Rollback all applied migrations, then reapply all migrations"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"reset"}),": Rollback all applied migrations"]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"via-sea-orm-cli",children:["Via ",(0,r.jsx)(i.code,{children:"sea-orm-cli"})]}),"\n",(0,r.jsxs)(i.p,{children:["The ",(0,r.jsx)(i.code,{children:"sea-orm-cli"})," will execute ",(0,r.jsx)(i.code,{children:"cargo run --manifest-path ./migration/Cargo.toml -- COMMAND"})," under the hood."]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-shell",children:"$ sea-orm-cli migrate COMMAND\n"})}),"\n",(0,r.jsx)(i.p,{children:"You can customize the manifest path."}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-shell",children:"$ sea-orm-cli migrate COMMAND -d ./other/migration/dir\n"})}),"\n",(0,r.jsx)(i.h3,{id:"via-seaschema-migrator-cli",children:"Via SeaSchema Migrator CLI"}),"\n",(0,r.jsxs)(i.p,{children:["Run the migrator CLI defined in ",(0,r.jsx)(i.code,{children:"migration/main.rs"}),"."]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-shell",children:"cd migration\ncargo run -- COMMAND\n"})}),"\n",(0,r.jsx)(i.h2,{id:"migrating-programmatically",children:"Migrating Programmatically"}),"\n",(0,r.jsxs)(i.p,{children:["You can perform migration on application startup with ",(0,r.jsx)(i.code,{children:"Migrator"}),", which implements the ",(0,r.jsx)(i.a,{href:"https://docs.rs/sea-orm-migration/*/sea_orm_migration/migrator/trait.MigratorTrait.html",children:(0,r.jsx)(i.code,{children:"MigratorTrait"})}),"."]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-rust",metastring:'title="src/main.rs"',children:"use migration::{Migrator, MigratorTrait};\n\n/// Apply all pending migrations\nMigrator::up(db, None).await?;\n\n/// Apply 10 pending migrations\nMigrator::up(db, Some(10)).await?;\n\n/// Rollback all applied migrations\nMigrator::down(db, None).await?;\n\n/// Rollback last 10 applied migrations\nMigrator::down(db, Some(10)).await?;\n\n/// Check the status of all migrations\nMigrator::status(db).await?;\n\n/// Drop all tables from the database, then reapply all migrations\nMigrator::fresh(db).await?;\n\n/// Rollback all applied migrations, then reapply all migrations\nMigrator::refresh(db).await?;\n\n/// Rollback all applied migrations\nMigrator::reset(db).await?;\n"})}),"\n",(0,r.jsx)(i.h2,{id:"running-migration-on-any-postgresql-schema",children:"Running Migration on Any PostgreSQL Schema"}),"\n",(0,r.jsxs)(i.p,{children:["By default migration will be run on the ",(0,r.jsx)(i.code,{children:"public"})," schema, you can now override it when running migration on the CLI or programmatically."]}),"\n",(0,r.jsxs)(i.p,{children:["For CLI, you can specify the target schema with ",(0,r.jsx)(i.code,{children:"-s"})," / ",(0,r.jsx)(i.code,{children:"--database_schema"})," option:"]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["via sea-orm-cli: ",(0,r.jsx)(i.code,{children:"sea-orm-cli migrate -u postgres://root:root@localhost/database -s my_schema"})]}),"\n",(0,r.jsxs)(i.li,{children:["via SeaORM migrator: ",(0,r.jsx)(i.code,{children:"cargo run -- -u postgres://root:root@localhost/database -s my_schema"})]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"You can also run the migration on the target schema programmatically:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-rust",children:'let connect_options = ConnectOptions::new("postgres://root:root@localhost/database")\n    .set_schema_search_path("my_schema") // Override the default schema\n    .to_owned();\n\nlet db = Database::connect(connect_options).await?\n\nmigration::Migrator::up(&db, None).await?;\n'})}),"\n",(0,r.jsx)(i.admonition,{title:"SQL Server (MSSQL) backend",type:"tip",children:(0,r.jsxs)(i.p,{children:["The configuration of running migration on any MSSQL schema can be found ",(0,r.jsx)(i.a,{href:"https://www.sea-ql.org/SeaORM-X/docs/migration/running-migration/",children:"here"}),"."]})}),"\n",(0,r.jsx)(i.h2,{id:"checking-migration-status",children:"Checking Migration Status"}),"\n",(0,r.jsxs)(i.p,{children:["You can use ",(0,r.jsx)(i.code,{children:"MigratorTrait::get_pending_migrations()"})," and ",(0,r.jsx)(i.code,{children:"MigratorTrait::get_applied_migrations()"})," to retrieve the list of migrations."]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-rust",children:'let migrations = Migrator::get_pending_migrations(db).await?;\nassert_eq!(migrations.len(), 5);\n\nlet migration = migrations[0];\nassert_eq!(migration.name(), "m20220118_000002_create_fruit_table");\nassert_eq!(migration.status(), MigrationStatus::Pending);\n'})})]})}function g(n={}){const{wrapper:i}={...(0,t.R)(),...n.components};return i?(0,r.jsx)(i,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}},77162:(n,i,e)=>{e.d(i,{R:()=>o,x:()=>s});var a=e(22374);const r={},t=a.createContext(r);function o(n){const i=a.useContext(t);return a.useMemo((function(){return"function"==typeof n?n(i):{...i,...n}}),[i,n])}function s(n){let i;return i=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:o(n.components),a.createElement(t.Provider,{value:i},n.children)}}}]);