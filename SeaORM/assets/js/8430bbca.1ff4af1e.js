"use strict";(self.webpackChunksea_orm=self.webpackChunksea_orm||[]).push([[41158],{28453:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>i});var t=o(96540);const s={},c=t.createContext(s);function a(e){const n=t.useContext(c);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(c.Provider,{value:n},e.children)}},44812:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>r,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"install-and-config/connection","title":"Connection Pool","description":"To obtain a database connection, use the Database interface:","source":"@site/versioned_docs/version-0.5.x/02-install-and-config/03-connection.md","sourceDirName":"02-install-and-config","slug":"/install-and-config/connection","permalink":"/SeaORM/docs/0.5.x/install-and-config/connection","draft":false,"unlisted":false,"editUrl":"https://github.com/SeaQL/seaql.github.io/edit/master/SeaORM/versioned_docs/version-0.5.x/02-install-and-config/03-connection.md","tags":[],"version":"0.5.x","lastUpdatedBy":"Chris Tsang","lastUpdatedAt":1761563260000,"sidebarPosition":3,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Schema Management","permalink":"/SeaORM/docs/0.5.x/install-and-config/schema"},"next":{"title":"Debug Log","permalink":"/SeaORM/docs/0.5.x/install-and-config/debug-log"}}');var s=o(74848),c=o(28453);const a={},i="Connection Pool",r={},l=[{value:"Connect Options",id:"connect-options",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"connection-pool",children:"Connection Pool"})}),"\n",(0,s.jsxs)(n.p,{children:["To obtain a database connection, use the ",(0,s.jsx)(n.a,{href:"https://docs.rs/sea-orm/0.5/sea_orm/struct.Database.html",children:(0,s.jsx)(n.code,{children:"Database"})})," interface:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:'let db: DatabaseConnection = Database::connect("protocol://username:password@host/database").await?;\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"protocol"})," can be ",(0,s.jsx)(n.code,{children:"mysql:"}),", ",(0,s.jsx)(n.code,{children:"postgres:"})," or ",(0,s.jsx)(n.code,{children:"sqlite:"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"host"})," is usually ",(0,s.jsx)(n.code,{children:"localhost"}),", a domain name or an IP address."]}),"\n",(0,s.jsxs)(n.p,{children:["Under the hood, a ",(0,s.jsx)(n.a,{href:"https://docs.rs/sqlx/0.5.x/sqlx/struct.Pool.html",children:(0,s.jsx)(n.code,{children:"sqlx::Pool"})})," is created and owned by ",(0,s.jsx)(n.a,{href:"https://docs.rs/sea-orm/0.5/sea_orm/enum.DatabaseConnection.html",children:(0,s.jsx)(n.code,{children:"DatabaseConnection"})}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Each time you call ",(0,s.jsx)(n.code,{children:"execute"})," or ",(0,s.jsx)(n.code,{children:"query_one/all"})," on it, a connection will be acquired and released from the pool."]}),"\n",(0,s.jsxs)(n.p,{children:["Multiple queries will execute in parallel as you ",(0,s.jsx)(n.code,{children:"await"})," on them."]}),"\n",(0,s.jsx)(n.h2,{id:"connect-options",children:"Connect Options"}),"\n",(0,s.jsxs)(n.p,{children:["To configure the connection, use the ",(0,s.jsx)(n.a,{href:"https://docs.rs/sea-orm/0.5/sea_orm/struct.ConnectOptions.html",children:(0,s.jsx)(n.code,{children:"ConnectOptions"})})," interface:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:'let mut opt = ConnectOptions::new("protocol://username:password@host/database".to_owned());\nopt.max_connections(100)\n    .min_connections(5)\n    .connect_timeout(Duration::from_secs(8))\n    .idle_timeout(Duration::from_secs(8))\n    .sqlx_logging(true);\n\nlet db = Database::connect(opt).await?;\n'})})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);