"use strict";(self.webpackChunksea_orm=self.webpackChunksea_orm||[]).push([[14333],{18814:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"basic-crud/delete","title":"Delete","description":"Delete One","source":"@site/versioned_docs/version-1.1.x/05-basic-crud/06-delete.md","sourceDirName":"05-basic-crud","slug":"/basic-crud/delete","permalink":"/SeaORM/docs/1.1.x/basic-crud/delete","draft":false,"unlisted":false,"editUrl":"https://github.com/SeaQL/seaql.github.io/edit/master/SeaORM/versioned_docs/version-1.1.x/05-basic-crud/06-delete.md","tags":[],"version":"1.1.x","lastUpdatedBy":"Chris Tsang","lastUpdatedAt":1761563260000,"sidebarPosition":6,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Save","permalink":"/SeaORM/docs/1.1.x/basic-crud/save"},"next":{"title":"JSON","permalink":"/SeaORM/docs/1.1.x/basic-crud/json"}}');var d=n(74848),s=n(28453);const l={},a="Delete",i={},o=[{value:"Delete One",id:"delete-one",level:2},{value:"Delete by Primary Key",id:"delete-by-primary-key",level:2},{value:"Delete Many",id:"delete-many",level:2},{value:"Returning Deleted Models",id:"returning-deleted-models",level:2}];function c(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(t.header,{children:(0,d.jsx)(t.h1,{id:"delete",children:"Delete"})}),"\n",(0,d.jsx)(t.h2,{id:"delete-one",children:"Delete One"}),"\n",(0,d.jsxs)(t.p,{children:["Find a ",(0,d.jsx)(t.code,{children:"Model"})," from the database, then delete the corresponding row from database."]}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-rust",children:"use sea_orm::entity::ModelTrait;\n\nlet orange: Option<fruit::Model> = Fruit::find_by_id(30).one(db).await?;\nlet orange: fruit::Model = orange.unwrap();\n\nlet res: DeleteResult = orange.delete(db).await?;\nassert_eq!(res.rows_affected, 1);\n"})}),"\n",(0,d.jsx)(t.h2,{id:"delete-by-primary-key",children:"Delete by Primary Key"}),"\n",(0,d.jsxs)(t.p,{children:["Instead of selecting ",(0,d.jsx)(t.code,{children:"Model"})," from the database then deleting it. You could also delete a row from database directly by its primary key."]}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-rust",children:"let res: DeleteResult = Fruit::delete_by_id(38).exec(db).await?;\nassert_eq!(res.rows_affected, 1);\n"})}),"\n",(0,d.jsx)(t.h2,{id:"delete-many",children:"Delete Many"}),"\n",(0,d.jsxs)(t.p,{children:["You can also delete multiple rows from the database without finding each ",(0,d.jsx)(t.code,{children:"Model"})," with SeaORM select."]}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-rust",children:"// DELETE FROM `fruit` WHERE `fruit`.`name` LIKE '%Orange%'\nlet res: DeleteResult = fruit::Entity::delete_many()\n    .filter(fruit::Column::Name.contains(\"Orange\"))\n    .exec(db)\n    .await?;\n\nassert_eq!(res.rows_affected, 2);\n"})}),"\n",(0,d.jsx)(t.h2,{id:"returning-deleted-models",children:"Returning Deleted Models"}),"\n",(0,d.jsxs)(t.p,{children:["Postgres only, SQLite requires the ",(0,d.jsx)(t.code,{children:"sqlite-use-returning-for-3_35"})," feature flag."]}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-rust",children:'assert_eq!(\n    fruit::Entity::delete(ActiveModel {\n        id: Set(3),\n        ..Default::default()\n    })\n    .exec_with_returning(db)\n    .await?,\n    Some(fruit::Model {\n        id: 3,\n        name: "Apple".to_owned(),\n    })\n);\n'})}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-rust",children:"let deleted_models: Vec<order::Model> = order::Entity::delete_many()\n    .filter(order::Column::CustomerId.eq(22))\n    .exec_with_returning(db)\n    .await?\n\nassert_eq!(deleted_models.len(), 2); // two items deleted\n"})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,d.jsx)(t,{...e,children:(0,d.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>a});var r=n(96540);const d={},s=r.createContext(d);function l(e){const t=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:l(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);