"use strict";(self.webpackChunksea_orm=self.webpackChunksea_orm||[]).push([[79979],{28453:(e,t,a)=>{a.d(t,{R:()=>i,x:()=>o});var r=a(96540);const s={},n=r.createContext(s);function i(e){const t=r.useContext(n);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(n.Provider,{value:t},e.children)}},84854:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"graph-ql/getting-started","title":"Getting Started","description":"This example can be found on SeaORM + Seaography Example.","source":"@site/docs/10-graph-ql/02-getting-started.md","sourceDirName":"10-graph-ql","slug":"/graph-ql/getting-started","permalink":"/SeaORM/docs/next/graph-ql/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/SeaQL/seaql.github.io/edit/master/SeaORM/docs/10-graph-ql/02-getting-started.md","tags":[],"version":"current","lastUpdatedBy":"Chris Tsang","lastUpdatedAt":1754947085000,"sidebarPosition":2,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"\ud83e\udded Seaography","permalink":"/SeaORM/docs/next/graph-ql/seaography-intro"},"next":{"title":"\ud83d\udda5\ufe0f SeaORM Pro","permalink":"/SeaORM/docs/next/sea-orm-pro/sea-orm-pro-intro"}}');var s=a(74848),n=a(28453);const i={},o="Getting Started",l={},h=[{value:"Install Seaography",id:"install-seaography",level:2},{value:"Generate Seaography Entities",id:"generate-seaography-entities",level:2},{value:"Generate GraphQL Project",id:"generate-graphql-project",level:2},{value:"Start the server",id:"start-the-server",level:2}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"getting-started",children:"Getting Started"})}),"\n",(0,s.jsxs)(t.p,{children:["This example can be found on ",(0,s.jsx)(t.a,{href:"https://github.com/SeaQL/sea-orm/tree/master/examples/seaography_example",children:"SeaORM + Seaography Example"}),"."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:"https://raw.githubusercontent.com/SeaQL/sea-orm/master/examples/seaography_example/Seaography%20example.png",alt:""})}),"\n",(0,s.jsxs)(t.p,{children:["To get started, all you need is a live SQL database with schema. You can code everything in Rust by writing SeaORM migrations, or design the schema with a GUI tool (e.g. ",(0,s.jsx)(t.a,{href:"https://www.jetbrains.com/datagrip/",children:"DataGrip"}),")."]}),"\n",(0,s.jsx)(t.h2,{id:"install-seaography",children:"Install Seaography"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"cargo install seaography-cli@^1.1.0\n"})}),"\n",(0,s.jsx)(t.h2,{id:"generate-seaography-entities",children:"Generate Seaography Entities"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"sea-orm-cli generate entity --output-dir graphql/src/entities --seaography\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Generate entities with ",(0,s.jsx)(t.code,{children:"sea-orm-cli"}),", but with an additional ",(0,s.jsx)(t.code,{children:"--seaography"})," flag. The entities are basically good-old SeaORM entities, but with additional ",(0,s.jsx)(t.code,{children:"RelatedEntity"})," enum."]}),"\n",(0,s.jsx)(t.h2,{id:"generate-graphql-project",children:"Generate GraphQL Project"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"# seaography-cli <DESTINATION> <ENTITIES> <DATABASE_URL> <CRATE_NAME>\nseaography-cli graphql graphql/src/entities $DATABASE_URL sea-orm-seaography-example\n"})}),"\n",(0,s.jsx)(t.h2,{id:"start-the-server",children:"Start the server"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"cd graphql\ncargo run\n"})}),"\n",(0,s.jsxs)(t.p,{children:["You are of course free to modify the project to suit your needs. But the interesting bit starts at the ",(0,s.jsx)(t.code,{children:"seaography::register_entity!"})," macro and the ",(0,s.jsx)(t.a,{href:"https://docs.rs/seaography/1.1.0/seaography/builder/struct.Builder.html",children:"seaography::Builder"}),"."]})]})}function d(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);