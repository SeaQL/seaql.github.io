"use strict";(self.webpackChunksea_orm=self.webpackChunksea_orm||[]).push([[19974],{705:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>s,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"advanced-query/aggregate-function","title":"Aggregate Functions","description":"You can group results selected from SeaORM find with the group_by method. If you wish to further restrict the grouped result set, the having method can help you achieve that.","source":"@site/versioned_docs/version-0.8.x/09-advanced-query/03-aggregate-function.md","sourceDirName":"09-advanced-query","slug":"/advanced-query/aggregate-function","permalink":"/SeaORM/docs/0.8.x/advanced-query/aggregate-function","draft":false,"unlisted":false,"editUrl":"https://github.com/SeaQL/seaql.github.io/edit/master/SeaORM/versioned_docs/version-0.8.x/09-advanced-query/03-aggregate-function.md","tags":[],"version":"0.8.x","lastUpdatedBy":"Chris Tsang","lastUpdatedAt":1754048920000,"sidebarPosition":3,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Conditional Expressions","permalink":"/SeaORM/docs/0.8.x/advanced-query/conditional-expression"},"next":{"title":"Custom Joins","permalink":"/SeaORM/docs/0.8.x/advanced-query/custom-joins"}}');var r=t(88790),o=t(77162);const s={},i="Aggregate Functions",c={},d=[{value:"Group By",id:"group-by",level:2},{value:"Having",id:"having",level:2}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"aggregate-functions",children:"Aggregate Functions"})}),"\n",(0,r.jsxs)(n.p,{children:["You can group results selected from SeaORM find with the ",(0,r.jsx)(n.code,{children:"group_by"})," method. If you wish to further restrict the grouped result set, the ",(0,r.jsx)(n.code,{children:"having"})," method can help you achieve that."]}),"\n",(0,r.jsx)(n.h2,{id:"group-by",children:"Group By"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"group_by"})," method can take a column of the entity or a complex ",(0,r.jsx)(n.a,{href:"https://docs.rs/sea-query/0.8/sea_query/expr/enum.SimpleExpr.html",children:(0,r.jsx)(n.code,{children:"sea_query::SimpleExpr"})}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:'assert_eq!(\n    cake::Entity::find()\n        .select_only()\n        .column(cake::Column::Name)\n        .group_by(cake::Column::Name)\n        .build(DbBackend::Postgres)\n        .to_string(),\n    r#"SELECT "cake"."name" FROM "cake" GROUP BY "cake"."name""#\n);\n'})}),"\n",(0,r.jsx)(n.h2,{id:"having",children:"Having"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"having"})," method can take any conditional expressions introduced in the previous section."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:'assert_eq!(\n    cake::Entity::find()\n        .having(cake::Column::Id.eq(4))\n        .having(cake::Column::Id.eq(5))\n        .build(DbBackend::MySql)\n        .to_string(),\n    "SELECT `cake`.`id`, `cake`.`name` FROM `cake` HAVING `cake`.`id` = 4 AND `cake`.`id` = 5"\n);\n'})})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},77162:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>i});var a=t(22374);const r={},o=a.createContext(r);function s(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);