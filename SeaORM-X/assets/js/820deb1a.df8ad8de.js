"use strict";(self.webpackChunksea_orm_x=self.webpackChunksea_orm_x||[]).push([[591],{5641:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>g});var r=n(6687);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),p=s(n),g=a,d=p["".concat(c,".").concat(g)]||p[g]||u[g]||o;return n?r.createElement(d,i(i({ref:t},m),{},{components:n})):r.createElement(d,i({ref:t},m))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3466:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(1308),a=(n(6687),n(5641));const o={},i="Running Migration",l={unversionedId:"migration/running-migration",id:"migration/running-migration",title:"Running Migration",description:"Running Migration on Any MSSQL Schema",source:"@site/docs/03-migration/03-running-migration.md",sourceDirName:"03-migration",slug:"/migration/running-migration",permalink:"/SeaORM-X/docs/migration/running-migration",draft:!1,editUrl:"https://github.com/SeaQL/seaql.github.io/edit/master/SeaORM-X/docs/03-migration/03-running-migration.md",tags:[],version:"current",lastUpdatedBy:"Billy Chan",lastUpdatedAt:1729059771,formattedLastUpdatedAt:"Oct 16, 2024",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Setting Up Migration",permalink:"/SeaORM-X/docs/migration/setting-up-migration"},next:{title:"Using sea-orm-cli",permalink:"/SeaORM-X/docs/generate-entity/sea-orm-cli"}},c={},s=[{value:"Running Migration on Any MSSQL Schema",id:"running-migration-on-any-mssql-schema",level:2}],m={toc:s};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"running-migration"},"Running Migration"),(0,a.kt)("h2",{id:"running-migration-on-any-mssql-schema"},"Running Migration on Any MSSQL Schema"),(0,a.kt)("p",null,"By default migration will be run on the ",(0,a.kt)("inlineCode",{parentName:"p"},"dbo")," schema, you can now override it when running migration on the CLI or programmatically."),(0,a.kt)("p",null,"For CLI, you can specify the target schema with ",(0,a.kt)("inlineCode",{parentName:"p"},"-s")," / ",(0,a.kt)("inlineCode",{parentName:"p"},"--database_schema")," option:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"via sea-orm-cli: ",(0,a.kt)("inlineCode",{parentName:"li"},"sea-orm-cli migrate -u mssql://root:root@localhost/database -s my_schema")),(0,a.kt)("li",{parentName:"ul"},"via SeaORM migrator: ",(0,a.kt)("inlineCode",{parentName:"li"},"cargo run -- -u mssql://root:root@localhost/database -s my_schema"))),(0,a.kt)("p",null,"You can also run the migration on the target schema programmatically:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'// With the default `dbo` schema\nlet connect_options = ConnectOptions::new("mssql://root:root@localhost/database");\n// Or, override the default schema\nlet connect_options = ConnectOptions::new("mssql://root:root@localhost/database?currentSchema=my_schema");\n\nlet db = Database::connect(connect_options).await?\n\nmigration::Migrator::up(&db, None).await?;\n')))}u.isMDXComponent=!0}}]);