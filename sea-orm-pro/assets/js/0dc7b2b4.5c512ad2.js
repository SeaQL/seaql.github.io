"use strict";(self.webpackChunksea_orm_pro=self.webpackChunksea_orm_pro||[]).push([[68],{5942:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var l=n(6687);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},r=Object.keys(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=l.createContext({}),u=function(e){var t=l.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return l.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},m=l.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=u(n),d=a,f=m["".concat(c,".").concat(d)]||m[d]||s[d]||r;return n?l.createElement(f,i(i({ref:t},p),{},{components:n})):l.createElement(f,i({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var u=2;u<r;u++)i[u]=n[u];return l.createElement.apply(null,i)}return l.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5198:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>s,frontMatter:()=>r,metadata:()=>o,toc:()=>u});var l=n(1308),a=(n(6687),n(5942));const r={},i="Table",o={unversionedId:"raw-table-config/table",id:"raw-table-config/table",title:"Table",description:"Title",source:"@site/docs/04-raw-table-config/02-table.md",sourceDirName:"04-raw-table-config",slug:"/raw-table-config/table",permalink:"/sea-orm-pro/docs/raw-table-config/table",draft:!1,editUrl:"https://github.com/SeaQL/seaql.github.io/edit/master/sea-orm-pro/docs/04-raw-table-config/02-table.md",tags:[],version:"current",lastUpdatedBy:"Billy Chan",lastUpdatedAt:1734690270,formattedLastUpdatedAt:"Dec 20, 2024",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"The Basics",permalink:"/sea-orm-pro/docs/raw-table-config/basics"},next:{title:"View",permalink:"/sea-orm-pro/docs/raw-table-config/view"}},c={},u=[{value:"Title",id:"title",level:2},{value:"Table Display",id:"table-display",level:2},{value:"Table Columns",id:"table-columns",level:2},{value:"Full Spec",id:"full-spec",level:2}],p={toc:u};function s(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,l.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"table"},"Table"),(0,a.kt)("h2",{id:"title"},"Title"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Use title case of the TOML file name as the title by default, can be override")),(0,a.kt)("h2",{id:"table-display"},"Table Display"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Display density"),(0,a.kt)("li",{parentName:"ul"},"Items per page")),(0,a.kt)("h2",{id:"table-columns"},"Table Columns"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Show all columns by default, can be disabled"),(0,a.kt)("li",{parentName:"ul"},"Set column title"),(0,a.kt)("li",{parentName:"ul"},"Set column width"),(0,a.kt)("li",{parentName:"ul"},"Set column content ellipsis"),(0,a.kt)("li",{parentName:"ul"},"Set column input type for custom rendering"),(0,a.kt)("li",{parentName:"ul"},"Join one-to-one relation"),(0,a.kt)("li",{parentName:"ul"},"Column display sequence")),(0,a.kt)("h2",{id:"full-spec"},"Full Spec"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},'[table]\n\n# Column specific config\ncolumns = [\n    {\n        # Display title\n        title = "ID",\n\n        # Name of the SQL column\n        field = "product_id",\n\n        # Column width\n        width = 80\n    },\n    {\n        title = "Thumbnail",\n\n        field = "thumb_nail_photo",\n        \n        # Data type\n        input_type = "image",\n        \n        width = 120\n    },\n    {\n        title = "Product Category",\n\n        field = "name",\n        \n        # Name of the SeaORM relation\n        relation = "product_category",\n\n        # Clip long text\n        ellipsis = false,\n\n        width = 180\n    },\n]\n\n# Show all columns including column not mention in the `columns` config\nall_columns = false\n\n# Number of rows per page\npage_size = 20\n\n# Display density, options: large, middle, small\ntable_size = "middle"\n\n# Rename table title\nname = "Products"\n')))}s.isMDXComponent=!0}}]);