"use strict";(self.webpackChunksea_orm_pro=self.webpackChunksea_orm_pro||[]).push([[994],{5942:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(6687);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),p=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(r),m=a,v=d["".concat(i,".").concat(m)]||d[m]||u[m]||o;return r?n.createElement(v,l(l({ref:t},c),{},{components:r})):n.createElement(v,l({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var p=2;p<o;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9613:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var n=r(1308),a=(r(6687),r(5942));const o={},l="Virtual Machine",s={unversionedId:"deployment/vm",id:"deployment/vm",title:"Virtual Machine",description:"This guide outline the process of deploying to a virtual machine, e.g. AWS EC2 or DigitalOcean Droplets.",source:"@site/docs/06-deployment/01-vm.md",sourceDirName:"06-deployment",slug:"/deployment/vm",permalink:"/sea-orm-pro/docs/deployment/vm",draft:!1,editUrl:"https://github.com/SeaQL/seaql.github.io/edit/master/sea-orm-pro/docs/06-deployment/01-vm.md",tags:[],version:"current",lastUpdatedBy:"Chris Tsang",lastUpdatedAt:1741466941,formattedLastUpdatedAt:"Mar 8, 2025",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Child Table",permalink:"/sea-orm-pro/docs/composite-table-config/child-table"},next:{title:"Container",permalink:"/sea-orm-pro/docs/deployment/container"}},i={},p=[{value:"Cloning SeaORM Pro",id:"cloning-seaorm-pro",level:2},{value:"Build Frontend",id:"build-frontend",level:2},{value:"Build Backend",id:"build-backend",level:2},{value:"Setup Reverse Proxy",id:"setup-reverse-proxy",level:2},{value:"Setup Always on Service",id:"setup-always-on-service",level:2},{value:"Launch",id:"launch",level:2}],c={toc:p};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"virtual-machine"},"Virtual Machine"),(0,a.kt)("p",null,"This guide outline the process of deploying to a virtual machine, e.g. AWS EC2 or DigitalOcean Droplets."),(0,a.kt)("p",null,"Here we start from Ubuntu 24.04 LTS."),(0,a.kt)("h2",{id:"cloning-seaorm-pro"},"Cloning SeaORM Pro"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"$ git clone https://github.com/SeaQL/sea-orm-pro-plus\n")),(0,a.kt)("h2",{id:"build-frontend"},"Build Frontend"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"$ cd sea-orm-pro-plus/pro_admin_frontend\n\n# Build frontend\n$ npm run build\n\n# Delete old frontend build\n$ rm -rf ../assets/admin\n\n# Copy new frontend build to backend server\n$ cp -r dist ../assets/admin\n")),(0,a.kt)("h2",{id:"build-backend"},"Build Backend"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"$ cd sea-orm-pro-plus\n\n$ cargo build --release\n")),(0,a.kt)("h2",{id:"setup-reverse-proxy"},"Setup Reverse Proxy"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"# Create a new Nginx site config\n$ vim /etc/nginx/sites-available/sea-orm-pro-demo.sea-ql.org\n")),(0,a.kt)("p",null,"Proxy all requests to the backend server."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-txt",metastring:"title=/etc/nginx/sites-available/sea-orm-pro-demo.sea-ql.org",title:"/etc/nginx/sites-available/sea-orm-pro-demo.sea-ql.org"},"server {\n    server_name sea-orm-pro-demo.sea-ql.org;\n\n    location / {\n        proxy_pass  http://127.0.0.1:8086;\n    }\n}\n")),(0,a.kt)("h2",{id:"setup-always-on-service"},"Setup Always on Service"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"# Setup a background service to run the backend server\n$ vim /etc/systemd/system/sea-orm-pro-plus.service\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-txt",metastring:"title=",title:""},"[Unit]\nDescription=SeaORM Pro Plus Service\nDocumentation=https://sea-orm-pro-demo.sea-ql.org/\nAfter=network.target\n\n[Service]\nType=simple\nUser=<USER>\nExecStart=cargo run --release start --environment development\n\n[Install]\nWantedBy=multi-user.target\n")),(0,a.kt)("h2",{id:"launch"},"Launch"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"# To automatically start the service (on system startup)\n$ systemctl enable sea-orm-pro-plus\n\n# Start the service\nservice sea-orm-pro-plus start\n\n# To view the service log\njournalctl -u sea-orm-pro-plus -f\n")))}u.isMDXComponent=!0}}]);